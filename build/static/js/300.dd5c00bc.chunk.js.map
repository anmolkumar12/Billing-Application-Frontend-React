{"version":3,"file":"static/js/300.dd5c00bc.chunk.js","mappings":"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","sources":["services/masters/product-master/product.service.ts","services/masters/projects-master/project.service.ts","services/masters/tax-master/tax.service.ts","services/masters/technology-master/technology.service.ts","constants/ValidationRegex.ts","pages/master/CountryMaster.tsx","pages/master/StateMaster.tsx","services/masters/region-master/region.service.ts","pages/master/RegionMaster.tsx","pages/master/CompanyMaster.tsx","pages/master/CompanyAddressMaster.tsx","services/masters/account-type-master/accountType.service.ts","pages/master/AccountMaster.tsx","pages/master/IndustryMaster.tsx","pages/master/IndustryGroupMaster.tsx","pages/master/IndustryHeadMaster.tsx","pages/master/SalesManagerMaster.tsx","pages/master/AccountManagerMaster.tsx","pages/master/TechGroupMaster.tsx","pages/master/TechSubGroupMaster.tsx","pages/master/TechMaster.tsx","services/masters/oem-master/oemMaster.service.ts","pages/master/OemMaster.tsx","services/masters/polestar-product-master/polestarProductMaster.service.ts","pages/master/PolestarProductSalesMaster.tsx","services/masters/project-service-master/projectServiceMaster.service.ts","pages/master/ProjectServiceMaster.tsx","services/masters/region-head-master/regionHeadMaster.service.ts","pages/master/RegionHeadMaster.tsx","services/masters/financial-year-master/financialYearMaster.service.ts","pages/master/FinancialYearMaster.tsx","pages/master/CurrencyMaster.tsx","pages/master/TaxMaster.tsx","pages/master/Master.tsx","services/masters/currency-master/currency.service.ts","services/masters/tax-service-master/taxMaster.service.ts","webpack://Billing_Application_Frontend/./src/pages/master/Master.module.scss?0dc2"],"sourcesContent":["import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class ProductMasterService {\n  getProductMaster = async () => {\n    try {\n      const response = await HTTPService.getRequest(APIURLS.GET_PRODUCT_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createProductMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_PRODUCT_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateProductMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_PRODUCT_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateProductMaster = async (data: any) => {\n    try {\n      const body = {\n        productId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_PRODUCT_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class ProjectMasterService {\n  getProjectMaster = async () => {\n    try {\n      const response = await HTTPService.getRequest(APIURLS.GET_PROJECT_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createProjectMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_PROJECT_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateProjectMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_PROJECT_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateProjectMaster = async (data: any) => {\n    try {\n      const body = {\n        projectId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_PROJECT_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class TaxMasterService {\n  getTaxMaster = async () => {\n    try {\n      const response = await HTTPService.getRequest(APIURLS.GET_TAX_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createTaxMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_TAX_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateTaxMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_TAX_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateTaxMaster = async (data: any) => {\n    try {\n      const body = {\n        taxId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_TAX_TYPE_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  formatDate = async (dateString: any) => {\n    try {\n      const date = new Date(dateString);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}/${month}/${day}`;\n    } catch (error: any) {\n      return error.message;\n    }\n  }\n}\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class TechnologyMasterService {\n  getTechnologyGroupMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_TECHNOLOGY_GROUP_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createTechnologyGroupMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_TECHNOLOGY_GROUP_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateTechnologyGroupMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_TECHNOLOGY_GROUP_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateTechnologyGroupMaster = async (data: any) => {\n    try {\n      const body = {\n        groupId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_TECHNOLOGY_GROUP_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getTechnologySubGroupMaster = async (techGroupId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_TECHNOLOGY_SUBGROUP_MASTER, {\n        techGroupId: techGroupId ? techGroupId : null,\n      })\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createTechnologySubGroupMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_TECHNOLOGY_SUBGROUP_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateTechnologySubGroupMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_TECHNOLOGY_SUBGROUP_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateTechnologySubGroupMaster = async (data: any) => {\n    try {\n      const body = {\n        subgroupId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_TECHNOLOGY_SUBGROUP_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getTechnologyMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_TECHNOLOGY_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createTechnologyMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_TECHNOLOGY_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateTechnologyMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_TECHNOLOGY_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateTechnologyMaster = async (data: any) => {\n    try {\n      const body = {\n        id: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_TECHNOLOGY_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","export const ValidationRegex = {\n     phoneCode:{\n        pattern: /^\\+[1-9][0-9]{1,4}$/,\n        patternHint: 'start with + followed by 2 to 5 num digits (eg. +91, +12345).'\n    },\n    onlyCharacters: {\n        pattern: /^[A-Za-z ]+$/,\n        patternHint: 'Only letters (A-Z, a-z)'\n    },\n    \n    website: {\n        pattern: /^(https?:\\/\\/)?([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}(\\/[a-zA-Z0-9#]+\\/?)*$/,\n        patternHint: 'Must be valid website(eg. https://www.example.com)'\n    },\n    alphanumeric: {\n        pattern: /^[a-zA-Z0-9 ]+$/,\n        patternHint: 'Must contain only letters or numbers'\n    }\n    \n    \n    \n    \n}","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport moment from \"moment\";\nimport { ValidationRegex } from \"../../constants/ValidationRegex\";\n\nconst CountryMaster = () => {\n  const CountryFormFields = {\n    name: {\n      inputType: \"inputtext\",\n      label: \"Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    code: {\n      inputType: \"inputtext\",\n      label: \"Code\",\n      value: null,\n      validation: {\n        required: true,\n        pattern:ValidationRegex.onlyCharacters.pattern,\n        patternHint:ValidationRegex.onlyCharacters.patternHint\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    language: {\n      inputType: \"inputtext\",\n      label: \"Language\",\n      value: null,\n      validation: {\n        required: false,\n  \n      },\n      fieldWidth: \"col-md-6\",\n    },\n    phoneCode: {\n      inputType: \"inputtext\",\n      label: \"Phone Code\",\n      value: null,\n      validation: {\n        required: false,\n        pattern:ValidationRegex.phoneCode.pattern,\n        patternHint:ValidationRegex.phoneCode.patternHint\n      },\n      fieldWidth: \"col-md-6\",\n    },\n  };\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [isEditCountry, setIsEditCountry] = useState<boolean>(false);\n  const [CountryForm, setCountryForm] = useState<any>(\n    _.cloneDeep(CountryFormFields)\n  );\n\n  const [CountryAddressForm, setCountryAddressForm] = useState<any>({});\n  const [CountryBankForm, setCountryBankForm] = useState<any>({});\n  const [CountryCompanyForm, setCountryCompanyForm] = useState<any>({});\n\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const countryService = new CountryMasterService();\n\n  const CountryMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          {/* <span\n            className={`pi pi-${rowData.isactive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isactive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span> */}\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"name\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.name}\n          >\n            {rowData.name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country Code\",\n      fieldName: \"code\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"code\",\n      changeFilter: true,\n      placeholder: \"Country Code\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.code}\n          >\n            {rowData.code}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Language\",\n      fieldName: \"language\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"language\",\n      changeFilter: true,\n      placeholder: \"Language\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.language}\n          >\n            {rowData.language}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Phone Codes\",\n      fieldName: \"phoneCode\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"phone_code\",\n      changeFilter: true,\n      placeholder: \"Phone Code\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.phone_code}\n          >\n            {rowData.phoneCode}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Additional Bank Details\",\n      fieldName: \"bankAccAdditionalFields\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"bankAccAdditionalFields\",\n      changeFilter: true,\n      placeholder: \"Additional Bank Details\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.currency}\n          >\n            {rowData.bankAccAdditionalFields}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Addition Addresss Details\",\n      fieldName: \"addressAdditionalFields\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"addressAdditionalFields\",\n      changeFilter: true,\n      placeholder: \"Addition Addresss Details\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.currency}\n          >\n            {rowData.addressAdditionalFields}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Addition Company Details\",\n      fieldName: \"companyAddtionalFields\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"companyAddtionalFields\",\n      changeFilter: true,\n      placeholder: \"Addition Company Details\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.currency}\n          >\n            {rowData.companyAddtionalFields}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isactive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isactive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getCountryMaster();\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      response?.countries?.forEach((el: any) => {\n        el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n       })\n      setCountryMaster(response?.countries);\n      return response?.countries;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const countryFormHandler = async (form: FormType) => {\n    setCountryForm(form);\n  };\n\n  const countryAddressFormHandler = async (form: FormType) => {\n    setCountryAddressForm(form);\n  };\n\n  const countryBankFormHandler = async (form: FormType) => {\n    setCountryBankForm(form);\n  };\n\n  const countryCompanyFormHandler = async (form: FormType) => {\n    setCountryCompanyForm(form);\n  };\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateCountryMaster(data);\n    setFormPopup(true);\n    setIsEditCountry(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateCountryMaster = (data: any) => {\n    try {\n      CountryFormFields.name.value = data?.name;\n      CountryFormFields.code.value = data?.code;\n      CountryFormFields.language.value = data?.language;\n      CountryFormFields.phoneCode.value = data?.phoneCode;\n      setCountryForm(_.cloneDeep(CountryFormFields));\n      const addressDetails = JSON.parse(data?.addressAdditionalFields || \"\");\n      const addressForm = Object.keys(addressDetails)?.reduce(\n        (acc: any, item: any, index: any) => {\n          acc[index] = {\n            inputType: \"inputtext\",\n            label: `Option ${index + 1}`,\n            value: addressDetails[`key${index + 1}`],\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4\",\n          };\n          return acc;\n        },\n        {}\n      );\n      setCountryAddressForm(addressForm);\n      const bankDetails = JSON.parse(data?.bankAccAdditionalFields || \"\");\n      const bankForm = Object.keys(bankDetails)?.reduce(\n        (acc: any, item: any, index: any) => {\n          acc[index] = {\n            inputType: \"inputtext\",\n            label: `Option ${index + 1}`,\n            value: bankDetails[`key${index + 1}`],\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4\",\n          };\n          return acc;\n        },\n        {}\n      );\n      setCountryBankForm(bankForm);\n      const companyDetails = JSON.parse(data?.companyAddtionalFields || \"\");\n      const companyForm = Object.keys(companyDetails)?.reduce(\n        (acc: any, item: any, index: any) => {\n          acc[index] = {\n            inputType: \"inputtext\",\n            label: `Option ${index + 1}`,\n            value: companyDetails[`key${index + 1}`],\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4\",\n          };\n          return acc;\n        },\n        {}\n      );\n      console.log('companyform------>',companyForm);\n      setCountryCompanyForm(companyForm);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const handleCountryAddress = () => {\n    const noOfFields = Object?.keys(CountryAddressForm)?.length;\n    const updatedAddressForm: any = {\n      ...CountryAddressForm,\n      [noOfFields]: {\n        inputType: \"inputtext\",\n        label: `Option ${noOfFields + 1}`,\n        value: null,\n        validation: {\n          required: false,\n        },\n        fieldWidth: \"col-md-4\",\n      },\n    };\n    setCountryAddressForm(updatedAddressForm);\n  };\n\n  const handleCountryBank = () => {\n    const noOfFields = Object?.keys(CountryBankForm)?.length;\n    const updatedBankForm: any = {\n      ...CountryBankForm,\n      [noOfFields]: {\n        inputType: \"inputtext\",\n        label: `Option ${noOfFields + 1}`,\n        value: null,\n        validation: {\n          required: false,\n        },\n        fieldWidth: \"col-md-4\",\n      },\n    };\n    setCountryBankForm(updatedBankForm);\n  };\n\n  const handleCountryCompany = () => {\n    const noOfFields = Object?.keys(CountryCompanyForm)?.length;\n    const updatedCompanyForm: any = {\n      ...CountryCompanyForm,\n      [noOfFields]: {\n        inputType: \"inputtext\",\n        label: `Option ${noOfFields + 1}`,\n        value: null,\n        validation: {\n          required: false,\n        },\n        fieldWidth: \"col-md-4\",\n      },\n    };\n    setCountryCompanyForm(updatedCompanyForm);\n  };\n\n  const createNewCountry = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(CountryForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const addressData = Object.keys(CountryAddressForm)?.reduce(\n        (acc: any, item: any, index: any) => {\n          if (CountryAddressForm[index]?.value != null) {\n            acc[`key${index + 1}`] = CountryAddressForm[index]?.value;\n          }\n          return acc;\n        },\n        {}\n      );\n      const bankData = Object.keys(CountryBankForm)?.reduce(\n        (acc: any, item: any, index: any) => {\n          if (CountryBankForm[index]?.value != null) {\n            acc[`key${index + 1}`] = CountryBankForm[index]?.value;\n          }\n          return acc;\n        },\n        {}\n      );\n      const companyData = Object.keys(CountryCompanyForm)?.reduce(\n        (acc: any, item: any, index: any) => {\n          if (CountryCompanyForm[index]?.value != null) {\n            acc[`key${index + 1}`] = CountryCompanyForm[index]?.value;\n          }\n          return acc;\n        },\n        {}\n      );\n      console.log('countrycode--->',CountryForm);\n      const obj = {\n        name: CountryForm?.name?.value,\n        code: CountryForm?.code?.value,\n        language: CountryForm?.language?.value,\n        phoneCode: CountryForm?.phoneCode?.value,\n        addressAdditionalFields: addressData,\n        bankAccAdditionalFields: bankData,\n        companyAddtionalFields: companyData,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        countryService\n          .createCountryMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, countryId: stateData?.id };\n        countryService\n          .updateCountryMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    countryService\n      .deactivateCountryMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Country record ${\n            patchData?.isactive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditCountry(false);\n    setStateData({});\n    setCountryForm(_.cloneDeep(CountryFormFields));\n    setCountryAddressForm({});\n    setCountryBankForm({});\n    setCountryCompanyForm({});\n  };\n  return loader ? (\n      <Loader />\n    ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Country\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={countryMaster}\n          column={CountryMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Country\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditCountry ? 'Update' : 'Add New'} Country</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(CountryForm)}\n                formUpdateEvent={countryFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n              {/* attachment */}\n              <div className={classes[\"upload-wrapper\"]}>\n                <div className=\"row\">\n                  <div\n                    className={`col-md-12 ${classes[\"addition-field-header\"]}`}\n                  >\n                    <h5 className=\"popup-heading\">\n                      Additional Address Details\n                    </h5>\n                    <div\n                      className=\"popup-right-close\"\n                      onClick={() => {\n                        handleCountryAddress();\n                      }}\n                    >\n                      +\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    {Object?.keys(CountryAddressForm)?.length > 0 && (\n                      <FormComponent\n                        form={_.cloneDeep(CountryAddressForm)}\n                        formUpdateEvent={countryAddressFormHandler}\n                        isFormValidFlag={isFormValid}\n                      ></FormComponent>\n                    )}\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div\n                    className={`col-md-12 ${classes[\"addition-field-header\"]}`}\n                  >\n                    <h5 className=\"popup-heading\">Additional Bank Details</h5>\n                    <div\n                      className=\"popup-right-close\"\n                      onClick={() => {\n                        handleCountryBank();\n                      }}\n                    >\n                      +\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    {Object?.keys(CountryBankForm)?.length > 0 && (\n                      <FormComponent\n                        form={_.cloneDeep(CountryBankForm)}\n                        formUpdateEvent={countryBankFormHandler}\n                        isFormValidFlag={isFormValid}\n                      ></FormComponent>\n                    )}\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div\n                    className={`col-md-12 ${classes[\"addition-field-header\"]}`}\n                  >\n                    <h5 className=\"popup-heading\">Additional Company Details</h5>\n                    <div\n                      className=\"popup-right-close\"\n                      onClick={() => {\n                        handleCountryCompany();\n                      }}\n                    >\n                      +\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    {Object?.keys(CountryCompanyForm)?.length > 0 && (\n                      <FormComponent\n                        form={_.cloneDeep(CountryCompanyForm)}\n                        formUpdateEvent={countryCompanyFormHandler}\n                        isFormValidFlag={isFormValid}\n                      ></FormComponent>\n                    )}\n                  </div>\n                </div>\n              </div>\n              {/* attachment */}\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewCountry}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default CountryMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport moment from \"moment\";\nimport { ValidationRegex } from \"../../constants/ValidationRegex\";\n\nconst StateMaster = () => {\n  const StatesFormFields = {\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    stateName: {\n      inputType: \"inputtext\",\n      label: \"State\",\n      value: null,\n      validation: {\n        required: true,\n        pattern:ValidationRegex.onlyCharacters.pattern,\n        patternHint:ValidationRegex.onlyCharacters.patternHint\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    stateCode: {\n      inputType: \"inputtext\",\n      label: \"State Code\",\n      value: null,\n      validation: {\n        required: false,\n        pattern:ValidationRegex.onlyCharacters.pattern,\n        patternHint:ValidationRegex.onlyCharacters.patternHint\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    gstCode: {\n      inputType: \"inputNumber\",\n      label: \"GST Code\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n  };\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [stateMaster, setStateMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditState, setIsEditState] = useState<boolean>(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [statesFieldsStructure, setStatesFieldsStructure]: any =\n    useState(StatesFormFields);\n  const [StatesForm, setStatesForm] = useState<any>(\n    _.cloneDeep(statesFieldsStructure)\n  );\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const countryService = new CountryMasterService();\n  const stateService = new StateMasterService();\n\n  const StateMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          {/* <span\n            className={`pi pi-${rowData.isactive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isactive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span> */}\n        </div>\n      ),\n    },\n    {\n      label: \"State\",\n      fieldName: \"stateName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"stateName\",\n      changeFilter: true,\n      placeholder: \"State\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.state_name}\n          >\n            {rowData.stateName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"State Code\",\n      fieldName: \"stateCode\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"stateCode\",\n      changeFilter: true,\n      placeholder: \"State Code\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.stateCode}\n          >\n            {rowData.stateCode}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"GST Code\",\n      fieldName: \"gstCode\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"gstCode\",\n      changeFilter: true,\n      placeholder: \"GST Code\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.stateCode}\n          >\n            {rowData.gstCode}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"name\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.name}\n          >\n            {rowData.name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isactive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isactive === 1 ? \"green\" : \"red\" }}>\n            {rowData?.isactive === 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getStateMaster();\n      const countries = await getCountryMaster();\n      await formatCountryDetails(countries);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getStateMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await stateService.getStateMaster();\n      response?.states?.forEach((el: any) => {\n        el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n       })\n      setStateMaster(response?.states);\n      return response?.states;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      setCountryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatCountryDetails = async (countries: any = countryMaster) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    statesFieldsStructure.country_name.options = countrylist;\n    await setStatesFieldsStructure(statesFieldsStructure);\n    await statesFormHandler(statesFieldsStructure);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const statesFormHandler = async (form: FormType) => {\n    setStatesForm(form);\n  };\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateStateMaster(data);\n    setFormPopup(true);\n    setIsEditState(true);\n  };\n  \n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateStateMaster = (data: any) => {\n    try {\n      statesFieldsStructure.country_name.value = data?.name;\n      statesFieldsStructure.stateName.value = data?.stateName;\n      statesFieldsStructure.stateCode.value = data?.stateCode;\n      statesFieldsStructure.gstCode.value = Number(data?.gstCode);\n\n      setStatesForm(_.cloneDeep(statesFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewState = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(StatesForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    const countryId =\n      countryMaster.find(\n        (country: any) => country.name === StatesForm.country_name.value\n      )?.id ?? null;\n\n    if (companyValidityFlag) {\n      const obj = {\n        stateName: StatesForm?.stateName?.value,\n        stateCode: StatesForm?.stateCode?.value,\n        gstCode: StatesForm?.gstCode?.value,\n        countryId: countryId,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        stateService\n          .createStateMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, stateId: stateData?.id };\n\n        stateService\n          .updateStateMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    stateService\n      .deactivateStateMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `State record ${\n            patchData?.isactive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditState(false);\n    setStateData({});\n    setStatesFieldsStructure(_.cloneDeep(StatesFormFields));\n    setStatesForm(_.cloneDeep(StatesFormFields));\n  };\n  return loader ? (\n      <Loader />\n    ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New State\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={stateMaster}\n          column={StateMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"States\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header \">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditState ? 'Update' : 'Add New'} State</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(StatesForm)}\n                formUpdateEvent={statesFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewState}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default StateMaster;\n","import { APIURLS } from \"../../../constants/ApiUrls\";\nimport { AuthService } from \"../../auth-service/auth.service\";\nimport { HTTPService } from \"../../http-service/http-service\";\n\nexport class RegionMasterService {\n  getRegionMaster = async (countryId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_REGION_MASTER, {\n        countryId: countryId ? countryId : null,\n      });\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  createRegionMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_REGION_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateRegionMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_REGION_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateRegionMaster = async (data: any) => {\n    try {\n      const body = {\n        stateId: data.id,\n        isActive: !data.isactive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_REGION_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { RegionMasterService } from \"../../services/masters/region-master/region.service\";\nimport moment from \"moment\";\n\nconst RegionMaster = () => {\n  const RegionFormFields = {\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    // regionHeadName: {\n    //   inputType: \"inputtext\",\n    //   label: \"Region Head Name\",\n    //   value: null,\n    //   validation: {\n    //     required: true,\n    //   },\n    //   fieldWidth: \"col-md-4\",\n    // },\n    // regionHeadEcode: {\n    //   inputType: \"inputtext\",\n    //   label: \"Region Head Ecode\",\n    //   value: null,\n    //   validation: {\n    //     required: true,\n    //   },\n    //   fieldWidth: \"col-md-4\",\n    // },\n    // regionHeadEmail: {\n    //   inputType: \"inputtext\",\n    //   label: \"Region Head Email\",\n    //   value: null,\n    //   validation: {\n    //     required: true,\n    //   },\n    //   fieldWidth: \"col-md-4\",\n    // },\n    // fromDate: {\n    //   inputType: \"singleDatePicker\",\n    //   label: \"From Date\",\n    //   value: null,\n    //   validation: {\n    //     required: true,\n    //   },\n    //   fieldWidth: \"col-md-6\",\n    // }\n    \n  };\n  const [statesList,setStatesList] = useState<any>([]);\n  const StateSelectionFormFields = {\n    name: {\n      inputType: \"inputtext\",\n      label: \"Region Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    code: {\n      inputType: \"inputtext\",\n      label: \"Region Code\",\n      value: null,\n      disable: true,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    state_name: {\n      inputType: \"multiSelect\",\n      label: \"State\",\n      options: statesList,\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n  };\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [stateMaster, setStateMaster] = useState<any>([]);\n  const [regionMaster, setRegionMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditRegion, setIsEditRegion] = useState<boolean>(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [regionFieldsStructure, setRegionFieldsStructure]: any =\n    useState(RegionFormFields);\n  const [stateSelectionFieldsStructure, setStateSelectionFieldsStructure]: any =\n    useState(StateSelectionFormFields);\n  const [RegionForm, setRegionForm] = useState<any>(\n    _.cloneDeep(regionFieldsStructure)\n  );\n  const [StateSelectionForm, setStateSelectionForm] = useState<any>([]);\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const countryService = new CountryMasterService();\n  const stateService = new StateMasterService();\n  const regionService = new RegionMasterService();\n\n  const RegionMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isactive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isactive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Region\",\n      fieldName: \"regionName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"regionName\",\n      changeFilter: true,\n      placeholder: \"State\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.region_name}\n          >\n            {rowData.regionName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Region Code\",\n      fieldName: \"regionCode\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"regionCode\",\n      changeFilter: true,\n      placeholder: \"Region Code\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.regionCode}\n          >\n            {rowData.regionCode}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    // {\n    //   label: \"Region Head Name\",\n    //   fieldName: \"regionHeadName\",\n    //   textAlign: \"left\",\n    //   sort: true,\n    //   filter: true,\n    //   fieldValue: \"regionHeadName\",\n    //   changeFilter: true,\n    //   placeholder: \"Region Head Name\",\n    //   body: (rowData: any) => (\n    //     <div>\n    //       <span\n    //         id={`companyNameTooltip-${rowData.id}`}\n    //         // data-pr-tooltip={rowData.regionHeadName}\n    //       >\n    //         {rowData.regionHeadName}\n    //       </span>\n    //       <Tooltip\n    //         target={`#companyNameTooltip-${rowData.id}`}\n    //         position=\"top\"\n    //       />\n    //     </div>\n    //   ),\n    // },\n    // {\n    //   label: \"Region Head Ecode\",\n    //   fieldName: \"regionHeadEcode\",\n    //   textAlign: \"left\",\n    //   sort: true,\n    //   filter: true,\n    //   fieldValue: \"regionHeadEcode\",\n    //   changeFilter: true,\n    //   placeholder: \"Region Head Ecode\",\n    //   body: (rowData: any) => (\n    //     <div>\n    //       <span\n    //         id={`companyNameTooltip-${rowData.id}`}\n    //         // data-pr-tooltip={rowData.regionHeadEcode}\n    //       >\n    //         {rowData.regionHeadEcode}\n    //       </span>\n    //       <Tooltip\n    //         target={`#companyNameTooltip-${rowData.id}`}\n    //         position=\"top\"\n    //       />\n    //     </div>\n    //   ),\n    // },\n    // {\n    //   label: \"Region Head Email\",\n    //   fieldName: \"regionHeadEmail\",\n    //   textAlign: \"left\",\n    //   sort: true,\n    //   filter: true,\n    //   fieldValue: \"regionHeadEmail\",\n    //   changeFilter: true,\n    //   placeholder: \"Region Head Email\",\n    //   body: (rowData: any) => (\n    //     <div>\n    //       <span\n    //         id={`companyNameTooltip-${rowData.id}`}\n    //         // data-pr-tooltip={rowData.regionHeadEmail}\n    //       >\n    //         {rowData.regionHeadEmail}\n    //       </span>\n    //       <Tooltip\n    //         target={`#companyNameTooltip-${rowData.id}`}\n    //         position=\"top\"\n    //       />\n    //     </div>\n    //   ),\n    // },\n    // {\n    //   label: \"From Date\",\n    //   fieldName: \"fromDate\",\n    //   textAlign: \"left\",\n    //   sort: true,\n    //   filter: true,\n    //   fieldValue: \"fromDate\",\n    //   changeFilter: true,\n    //   placeholder: \"From Date\",\n    //   body: (rowData: any) => (\n    //     <div>\n    //       <span\n    //         id={`companyNameTooltip-${rowData.id}`}\n    //         // data-pr-tooltip={rowData.fromDate}\n    //       >\n    //         {/* {rowData.fromDate} */}\n    //         {moment(rowData?.fromDate).format('YYYY-MM-DD')}\n    //       </span>\n    //       <Tooltip\n    //         target={`#companyNameTooltip-${rowData.id}`}\n    //         position=\"top\"\n    //       />\n    //     </div>\n    //   ),\n    // },\n    {\n      label: \"States\",\n      fieldName: \"stateNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"stateNames\",\n      changeFilter: true,\n      placeholder: \"State Names\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.stateNames}\n          >\n            {rowData.stateNames}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"countryName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"countryName\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.countryName}\n          >\n            {rowData.countryName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isactive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isactive === 1 ? \"green\" : \"red\" }}>\n            {rowData?.isactive === 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getRegionMaster();\n      const countries = await getCountryMaster();\n      await formatCountryDetails(countries);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getRegionMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await regionService.getRegionMaster();\n      response?.regions?.forEach((el: any) => {\n        el.fromDate = el?.fromDate ? moment(el?.fromDate).format(\"DD-MM-YYYY \") : null\n        el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n       })\n      setRegionMaster(response?.regions);\n      return response?.regions;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getStateMaster = async (countryId: any) => {\n    // setLoader(true);\n    try {\n      const response = await stateService.getStateMaster(countryId);\n      const temp = response?.states?.filter((item: any) => item?.isactive || item?.isActive)\n      setStateMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      //   setLoader(false);\n    }\n  };\n\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      setCountryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatCountryDetails = async (countries: any = countryMaster) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    regionFieldsStructure.country_name.options = countrylist;\n    await setRegionFieldsStructure(regionFieldsStructure);\n    await regionFormHandler(regionFieldsStructure);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const getStateByCountry = async (countryName: any) => {\n    const selectedCountry =\n      countryMaster.find((country: any) => country?.name === countryName) ??\n      null;\n    const states = await getStateMaster(selectedCountry?.id);\n    const statelist = states.map((state: any) => state?.stateName);\n    stateSelectionFieldsStructure.state_name.options = statelist;\n    await setStateSelectionFieldsStructure(stateSelectionFieldsStructure);\n    setStatesList(statelist);\n    return statelist;\n  };\n\n  const regionFormHandler = async (currentForm: FormType) => {\n    const form = _.cloneDeep(currentForm);\n    setRegionForm(form);\n    if (RegionForm?.country_name?.value != form?.country_name?.value) {\n      await getStateByCountry(form?.country_name?.value);\n      setStateSelectionForm([]);\n    }\n  };\n\n  const stateOptionModifier = (\n    updatedSelectionForm: any,\n    regionCountryForm: any,\n    statelist: any\n  ) => {\n    const selectedCountry = countryMaster?.find(\n      (item: any) => item?.name == regionCountryForm?.country_name?.value\n    );\n\n    const selectedStates = updatedSelectionForm\n      .map((item: any) => item?.state_name?.value)\n      .flat()\n      .filter(Boolean);\n\n    updatedSelectionForm.forEach((item: any, idx: any) => {\n      const availableStates = statelist.filter(\n        (state: any) =>\n          !selectedStates.includes(state) ||\n          (item?.state_name?.value && item?.state_name?.value.includes(state))\n      );\n      updatedSelectionForm[idx] = {\n        ...item,\n        code: {\n          ...item.code,\n          value:\n            item?.name?.value != null && item?.name?.value?.length > 0\n              ? item?.name?.value + \" \" + selectedCountry?.code\n              : null,\n        },\n        state_name: {\n          ...item.state_name,\n          options: availableStates,\n          value:\n            item?.state_name?.value?.length > 0\n              ? item?.state_name?.value\n              : null,\n        },\n      };\n    });\n    return updatedSelectionForm;\n  };\n\n  const stateSelectionFormHandler = async (\n    form: FormType,\n    index: any,\n    stateForm: any = StateSelectionForm\n  ) => {\n    const updatedSelectionForm = [...stateForm];\n    updatedSelectionForm[index] = form;\n\n    const statelist = stateMaster?.map((state: any) => state?.stateName);\n    const modifiedSelectionForm = stateOptionModifier(\n      [...updatedSelectionForm],\n      RegionForm,\n      statelist\n    );\n    setStateSelectionForm(modifiedSelectionForm);\n  };\n\n  const onUpdate = async (data: any) => {\n    const allRegionRows = regionMaster?.filter(\n      (item: any) => item?.countryName == data?.countryName\n    );\n    console.log('rrrrrrrrrrrr',regionMaster, allRegionRows, data);\n    const stateList = await getStateByCountry(data?.countryName);\n    \n    setStateData(allRegionRows);\n    updateStateMaster(data, allRegionRows, stateList);\n    setFormPopup(true);\n    setIsEditRegion(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateStateMaster = (\n    data: any,\n    stateSelectionData: any,\n    stateList: any\n  ) => {\n    try {\n      console.log('data-->',data)\n      regionFieldsStructure.country_name.value = data?.countryName;\n      // regionFieldsStructure.regionHeadName.value = data?.regionHeadName;\n      // regionFieldsStructure.regionHeadEcode.value = data?.regionHeadEcode;\n      // regionFieldsStructure.regionHeadEmail.value = data?.regionHeadEmail;\n      // regionFieldsStructure.fromDate.value = data?.fromDate;\n      // regionFieldsStructure.fromDate.value = parseDateString(data?.fromDate);\n\n      setRegionForm(_.cloneDeep(regionFieldsStructure));\n      const stateForm: any = [];\n      stateSelectionData?.forEach((item: any, index: any) => {\n        const selectedState = item?.stateNames?.split(\",\");\n        const formFilling = {\n          name: {\n            inputType: \"inputtext\",\n            label: \"Region Name\",\n            value: item.regionName,\n            validation: {\n              required: true,\n            },\n            fieldWidth: \"col-md-4\",\n          },\n          code: {\n            inputType: \"inputtext\",\n            label: \"Region Code\",\n            value: null,\n            disable: true,\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4\",\n          },\n          state_name: {\n            inputType: \"multiSelect\",\n            label: \"State\",\n            options: stateList,\n            value: selectedState,\n            validation: {\n              required: true,\n            },\n            fieldWidth: \"col-md-4\",\n          },\n        };\n        stateForm.push(formFilling);\n      });\n      const modifiedStateForm = stateOptionModifier(\n        [...stateForm],\n        regionFieldsStructure,\n        stateList\n      );\n      setStateSelectionForm(modifiedStateForm);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const handleAddStateSelection = () => {\n    setStateSelectionForm((prev: any) => {\n      return [...prev, stateSelectionFieldsStructure];\n    });\n  };\n\n  const handleSubStateSelection = () => {\n    setStateSelectionForm((prev: any) => {\n      return prev.slice(0, prev.length - 1);\n    });\n  };\n\n  const formatDate = (dateString: any) => {\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return \"\";\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}/${month}/${day}`;\n  };\n\n  const parseDateString = (dateString: any) => {\n    if (!dateString) return new Date();\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return new Date();\n    const year = date.getFullYear();\n    const month: any = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day: any = String(date.getDate()).padStart(2, \"0\");\n    return new Date(year, month - 1, day);\n  };\n\n  const createNewRegion = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n\n    _.each(RegionForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyValidityFlag = companyValidityFlag && item.value;\n      }\n    });\n    console.log('companyValidityForm------> first',companyValidityFlag, RegionForm);\n    console.log('companyValidityForm------> seconddd', StateSelectionForm);\n\n    if (StateSelectionForm?.length > 0) {\n      console.log(\"here StateSelectionForm\", StateSelectionForm);\n\n      const selectedStates = StateSelectionForm.map(\n        (item: any) => item?.state_name?.value\n      )\n        .flat()\n        .filter(Boolean);\n      const remainingStates = stateMaster?.length - selectedStates?.length;\n      console.log(\"here remainingStates\", remainingStates, StateSelectionForm);\n      \n      if (remainingStates > 0) {\n        ToasterService.show(\"Assign Region to all States\", CONSTANTS.ERROR);\n        return;\n      }\n      StateSelectionForm?.map((region: any) => {\n        _.each(region, (item: any) => {\n          if (item?.validation?.required) {\n            companyValidityFlag = companyValidityFlag && item.value != null && item.value != \"\";\n          }\n        });\n      });\n      console.log(\"here StateSelectionForm\", StateSelectionForm);\n    } else {\n      ToasterService.show(\"Assign Region to all States\", CONSTANTS.ERROR);\n      return;\n    }\n    console.log('companyValidityForm------>',companyValidityFlag);\n\n    setIsFormValid(companyValidityFlag);\n\n    const countryId =\n      countryMaster.find(\n        (country: any) => country.name === RegionForm.country_name.value\n      )?.id ?? null;\n\n    if (companyValidityFlag) {\n      StateSelectionForm?.map((region: any, index: any) => {\n        let ids = \"\";\n        region?.state_name?.value?.forEach((item: any) => {\n          const id =\n            stateMaster?.find((state: any) => state?.stateName == item)?.id ??\n            null;\n          if (id != null) {\n            ids = ids != \"\" ? ids + \",\" + id : id;\n          }\n        });\n        const obj = {\n          regionName: region?.name?.value,\n          regionCode: region?.code?.value,\n          countryId: countryId,\n          // regionHeadName:RegionForm?.regionHeadName?.value,\n          // regionHeadEcode:RegionForm?.regionHeadEcode?.value,\n          // regionHeadEmail:RegionForm?.regionHeadEmail?.value,\n          // fromDate:new Date(RegionForm?.fromDate?.value),\n          // fromDate: formatDate(RegionForm?.fromDate?.value),  \n          stateIds: ids,\n          isActive: 1,\n          updatedBy: loggedInUserId,\n        };\n        console.log('jjjjjjjjjjjjjjjjjjjj', stateData);\n        \n        if (stateData?.length && stateData[index]?.id) {\n          const updatePayload = { ...obj, regionId: stateData[index]?.id };\n\n          regionService\n            .updateRegionMaster(updatePayload)\n            .then((response: any) => {\n              if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                setStateData({});\n                closeFormPopup();\n                ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n              }\n            })\n            .catch((error: any) => {\n              setStateData({});\n              ToasterService.show(error, CONSTANTS.ERROR);\n            });\n        } else {\n          regionService\n            .createRegionMaster(obj)\n            .then((response: any) => {\n              if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                setStateData({});\n                closeFormPopup();\n                ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n              }\n            })\n            .catch((error: any) => {\n              setStateData({});\n              ToasterService.show(error, CONSTANTS.ERROR);\n            });\n        }\n      });\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    stateService\n      .deactivateStateMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Region record ${\n            patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditRegion(false);\n    setStateData({});\n    setRegionFieldsStructure(_.cloneDeep(RegionFormFields));\n    setStateSelectionFieldsStructure(_.cloneDeep(StateSelectionFormFields));\n    setRegionForm(_.cloneDeep(RegionFormFields));\n    setStateSelectionForm([]);\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Region\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={regionMaster}\n          column={RegionMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Regions\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header \">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditRegion ? 'Update' : 'Add New'} Region</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(RegionForm)}\n                formUpdateEvent={regionFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n              {/* attachment */}\n              <div className={classes[\"upload-wrapper\"]}>\n                <div className=\"row\">\n                  <div\n                    className={`col-md-12 ${classes[\"addition-field-header\"]}`}\n                  >\n                    <h5 className=\"popup-heading\">Add More Regions</h5>\n                    <div className={classes[\"addition-field-buttons\"]}>\n                      <div\n                        className=\"popup-right-close\"\n                        onClick={() => {\n                          handleSubStateSelection();\n                        }}\n                      >\n                        -\n                      </div>\n                      <div\n                        className=\"popup-right-close\"\n                        onClick={() => {\n                          handleAddStateSelection();\n                        }}\n                      >\n                        +\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    {StateSelectionForm?.length > 0 &&\n                      StateSelectionForm?.map((item: any, index: any) => (\n                        <FormComponent\n                          form={_.cloneDeep(item)}\n                          formUpdateEvent={(form: FormType) =>\n                            stateSelectionFormHandler(form, index)\n                          }\n                          isFormValidFlag={isFormValid}\n                        ></FormComponent>\n                      ))}\n                  </div>\n                </div>\n              </div>\n              {/* attachment */}\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewRegion}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default RegionMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { FILE_TYPES } from \"../../enums/file-types.enum\";\nimport { Chip } from \"primereact/chip\";\nimport { ImageUrl } from \"../../utils/ImageUrl\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport moment from \"moment\";\nimport { ValidationRegex } from \"../../constants/ValidationRegex\";\n\nconst CompanyMaster = () => {\n  const [stateData, setStateData] = useState<any>();\n  const CompanyFormFields = {\n    companyName: {\n      inputType: \"inputtext\",\n      label: \"Company Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    Website: {\n      inputType: \"inputtext\",\n      label: \"Website\",\n      value: null,\n      validation: {\n        required: true,\n        pattern: ValidationRegex.website.pattern,\n        patternHint:ValidationRegex.website.patternHint\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    Email: {\n      inputType: \"inputtext\",\n      label: \"Email\",\n      value: null,\n      validation: {\n        required: true,\n        email:true\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    companyCode: {\n      inputType: \"inputtext\",\n      label: \"Company Code\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n  };\n\n  const ParentFormFields: FormType = {\n    pan_number: {\n      inputType: \"inputtext\",\n      label: \"Pan\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    independent: {\n      inputType: \"inputSwitch\",\n      label: \"Is It Independent Company?\",\n      value: false,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4  mg-12-t\",\n    },\n    parent_comp: {\n      inputType: \"singleSelect\",\n      label: \"Parent Company\",\n\n      options: [],\n      value: null,\n      disable:stateData?.id?true:false,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    description: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditCompany, setIsEditCompany] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [attachments, setAttachments]: any = useState([]);\n  const [digitalSign, setDigitalSign]: any = useState([]);\n  const [logoUrl,setLogoUrl] = useState('');\n  const [signatureUrl,setSignatureUrl] = useState('');\n \n  const [companyFieldStructure, setCompanyFieldStructure] = useState<any>(\n    _.cloneDeep(CompanyFormFields)\n  );\n  const [CompanyForm, setCompanyForm] = useState<any>(\n    _.cloneDeep(companyFieldStructure)\n  );\n  const [AdditionalDetailsForm, setAdditionalDetailsForm] = useState<any>({});\n  const [parentFieldStructure, setParentFieldStructure] = useState<any>(\n    _.cloneDeep(ParentFormFields)\n  );\n  const [ParentForm, setParentForm] = useState<any>(\n    _.cloneDeep(parentFieldStructure)\n  );\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n\n  const countryService = new CountryMasterService();\n  const companyService = new CompanyMasterService();\n\n  const CompanyMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isactive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isactive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Company\",\n      fieldName: \"companyName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"companyName\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.companyName}\n          >\n            {rowData.companyName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Company Code\",\n      fieldName: \"companyCode\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"companyCode\",\n      changeFilter: true,\n      placeholder: \"Code\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.companyName}\n          >\n            {rowData.companyCode || 'N/A'}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"countryName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"countryName\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.countryName}\n          >\n            {rowData.countryName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Website\",\n      fieldName: \"Website\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.Website}\n          >\n            {rowData.Website}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Email\",\n      fieldName: \"Email\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.Email}\n          >\n            {rowData.Email}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Pan\",\n      fieldName: \"pan_number\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span>\n            {rowData.pan_number}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Independent\",\n      fieldName: \"independent\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.IECode}\n          >\n            {rowData.independent == 1 ? \"Yes\" : \"No\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Parent Company\",\n      fieldName: \"parentCompanyName\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.IECode}\n          >\n            {rowData.parentCompanyName != null\n              ? rowData.parentCompanyName\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"description\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.description}\n          >\n            {rowData.description != null &&\n            rowData.description != \"null\" &&\n            rowData.description != \"\"\n              ? rowData.description\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Additional Details\",\n      fieldName: \"companyAddtionalFields\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.companyAddtionalFields}\n          >\n            {rowData.companyAddtionalFields != null &&\n            rowData.companyAddtionalFields != \"null\" &&\n            rowData.companyAddtionalFields != \"\"\n              ? rowData.companyAddtionalFields\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isactive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isactive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isactive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             { rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const companies = await getCompanyMaster();\n      const countries = await getCountryMaster();\n      await formatCompanyDetails(companies);\n      await formatCountryDetails(countries);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getCompanyMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await companyService.getCompanyMaster();\n      response?.companies?.forEach((el: any) => {\n        el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n       })\n      setCompanyMaster(response?.companies);\n      return response?.companies;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      setCountryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatCompanyDetails = async (companies: any = companyMaster) => {\n    const companyList = companies.map((company: any) => company?.companyName);\n    parentFieldStructure.parent_comp.options = companyList;\n    setParentFieldStructure(parentFieldStructure);\n  };\n\n  const formatCountryDetails = async (countries: any = countryMaster) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    companyFieldStructure.country_name.options = countrylist;\n    setCompanyFieldStructure(companyFieldStructure);\n    await companyFormHandler(companyFieldStructure);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const companyFormHandler = async (form: FormType) => {\n    if (form?.country_name?.value != CompanyForm?.country_name?.value) {\n      const selectedCountry = countryMaster?.find(\n        (item: any) => item?.name == form?.country_name?.value\n      );\n      if (selectedCountry) {\n        const companyDetails = JSON.parse(\n          selectedCountry?.companyAddtionalFields\n        );\n        const detailsForm = Object.keys(companyDetails)?.reduce(\n          (acc: any, item: any, index: any) => {\n            acc[index] = {\n              inputType: \"inputtext\",\n              label: companyDetails[item],\n              value: null,\n              validation: {\n                required: false,\n              },\n              fieldWidth: \"col-md-4\",\n            };\n            return acc;\n          },\n          {}\n        );\n        setAdditionalDetailsForm(detailsForm);\n      }\n    }\n    setCompanyForm(form);\n  };\n\n  const additionalDetailsFormHandler = async (form: FormType) => {\n    setAdditionalDetailsForm(form);\n  };\n\n  const parentFormHandler = async (form: FormType) => {\n    console.log('stadeData---->',stateData)\n    if (form?.independent?.value == false || !form?.independent?.value) {\n      const companyNamesList = companyMaster\n        ?.filter(\n          (company: any) => company?.companyName != stateData?.companyName\n        )\n        ?.map((company: any) => company?.companyName);\n        console.log('here we have again ---',companyNamesList);\n      form.parent_comp.options = companyNamesList;\n      form.parent_comp.disable = false;\n      if (form.parent_comp.validation) {\n        form.parent_comp.validation.required = true;\n      }\n    } else {\n      form.parent_comp.value = null;\n      form.parent_comp.disable = true;\n      if (form.parent_comp.validation) {\n        form.parent_comp.validation.required = false;\n      }\n    }\n    setParentForm(form);\n  };\n\n  const selectAttachment = (files: any) => {\n    setAttachments([]);\n    if (files && files[0]) {\n      _.each(files, (eventList) => {\n        if (\n          eventList.name\n            .split(\".\")\n            [eventList.name.split(\".\").length - 1].toLowerCase() ===\n          FILE_TYPES.PNG\n        ) {\n          if (eventList.size > 10485760) {\n            return ToasterService.show(\n              \"file size is too large, allowed maximum size is 10 MB.\",\n              \"error\"\n            );\n          } else {\n            setAttachments((prevVals: any) => [...prevVals, eventList]);\n            const fileURL = URL.createObjectURL(eventList);\n            setLogoUrl(fileURL)\n          }\n        } else {\n          ToasterService.show(\n            `Invalid file format you can only attach the pdf here!`,\n            \"error\"\n          );\n          eventList = null;\n        }\n      });\n    }\n  };\n\n  const selectDigitalSign = (files: any) => {\n    setDigitalSign([]);\n    if (files && files[0]) {\n      _.each(files, (eventList) => {\n        if (\n          eventList.name\n            .split(\".\")\n            [eventList.name.split(\".\").length - 1].toLowerCase() ===\n          FILE_TYPES.PNG\n        ) {\n          if (eventList.size > 10485760) {\n            return ToasterService.show(\n              \"file size is too large, allowed maximum size is 10 MB.\",\n              \"error\"\n            );\n          } else {\n            setDigitalSign((prevVals: any) => [...prevVals, eventList]);\n            const fileURL = URL.createObjectURL(eventList);\n            setSignatureUrl(fileURL);\n          }\n        } else {\n          ToasterService.show(\n            `Invalid file format you can only attach the pdf here!`,\n            \"error\"\n          );\n          eventList = null;\n        }\n      });\n    }\n  };\n\n  const removeFileHandler = () => {\n    setAttachments([]);\n    setLogoUrl('');\n  };\n\n  const removeSignHandler = () => {\n    setDigitalSign([]);\n    setSignatureUrl('');\n  };\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateCompanyMaster(data);\n    setLogoUrl(data?.logopath?`${process.env.REACT_APP_API_BASEURL}/${data?.logopath}`:'');\n    setSignatureUrl(data?.digitalSignPath?`${process.env.REACT_APP_API_BASEURL}/${data?.digitalSignPath}`:'');\n    setFormPopup(true);\n    setIsEditCompany(true)\n  };\n    \n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateCompanyMaster = (data: any) => {\n    try {\n      const companyNamesList = companyMaster\n        ?.filter((company: any) => company?.companyName != data?.companyName)\n        ?.map((company: any) => company?.companyName);\n        console.log('company list',companyNamesList);\n      companyFieldStructure.companyName.value = data?.companyName;\n      companyFieldStructure.country_name.value = data?.countryName;\n      parentFieldStructure.pan_number.value = data?.pan_number;\n      console.log(`this is pan number`,data?.pan_number)\n      companyFieldStructure.Email.value = data?.Email;\n      companyFieldStructure.companyCode.value = data?.companyCode;\n      companyFieldStructure.Website.value = data?.Website;\n      setCompanyForm(_.cloneDeep(companyFieldStructure));\n      if (data?.companyAddtionalFields) {\n        const companyDetails = JSON.parse(data?.companyAddtionalFields);\n        const companyForm = Object.keys(companyDetails)?.reduce(\n          (acc: any, item: any, index: any) => {\n            acc[index] = {\n              inputType: \"inputtext\",\n              label: item,\n              value: companyDetails[item],\n              validation: {\n                required: false,\n              },\n              fieldWidth: \"col-md-4\",\n            };\n            return acc;\n          },\n          {}\n        );\n        setAdditionalDetailsForm(companyForm);\n      }\n      parentFieldStructure.description.value =\n        data?.description != null && data?.description != \"null\"\n          ? data?.description\n          : \"\";\n      if (data?.independent == 1) {\n        parentFieldStructure.independent.value = true;\n        parentFieldStructure.parent_comp.value = null;\n        parentFieldStructure.parent_comp.disable = true;\n        if (parentFieldStructure.parent_comp.validation) {\n          parentFieldStructure.parent_comp.validation.required = false;\n        }\n      } else {\n        parentFieldStructure.independent.value = false;\n        parentFieldStructure.parent_comp.value = data?.parentCompanyName;\n        parentFieldStructure.parent_comp.options = companyNamesList;\n        parentFieldStructure.parent_comp.disable = false;\n        if (parentFieldStructure.parent_comp.validation) {\n          parentFieldStructure.parent_comp.validation.required = true;\n        }\n      }\n      setParentForm(_.cloneDeep(parentFieldStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewCompany = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n\n    _.each(CompanyForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n      if (\n        CompanyForm?.independent?.value == false &&\n        CompanyForm?.parent_comp?.value == null\n      ) {\n        companyValidityFlag = false;\n      }\n    });\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const formData: any = new FormData();\n      const parentCompanyId =\n        companyMaster?.find(\n          (item: any) => item?.companyName == ParentForm?.parent_comp.value\n        )?.id ?? null;\n\n      const countryId =\n        countryMaster.find(\n          (country: any) => country.name === CompanyForm.country_name.value\n        )?.id ?? null;\n\n      const companyData = Object.keys(AdditionalDetailsForm)?.reduce(\n        (acc: any, item: any, index: any) => {\n          if (AdditionalDetailsForm[index]?.value != null) {\n            acc[AdditionalDetailsForm[index]?.label] =\n              AdditionalDetailsForm[index]?.value;\n          }\n          return acc;\n        },\n        {}\n      );\n      const obj = {\n        companyName: CompanyForm?.companyName?.value,\n        countryId: countryId,\n        pan_number: ParentForm?.pan_number?.value,\n        Email: CompanyForm?.Email?.value,\n        companyCode: CompanyForm?.companyCode?.value,\n        Website: CompanyForm?.Website?.value,\n        independent: ParentForm?.independent?.value == true ? 1 : 0,\n        parentCompanyId: parentCompanyId ? parentCompanyId : 0,\n        description: ParentForm?.description?.value,\n        companyAddtionalFields: JSON?.stringify(companyData) || null,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n      Object.entries(obj).forEach(([key, value]: any) => {\n        formData.set(key, value);\n      });\n\n      if (attachments?.length) {\n        formData.set(\"logo\", attachments[0]);\n      }\n\n      if (digitalSign?.length) {\n        formData.set(\"digitalSign\", digitalSign[0]);\n      }\n      console.log(\"here formData\", formData);\n\n      if (!stateData?.id) {\n        companyService\n          .createCompanyMaster(formData)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const formData: any = new FormData();\n        const updatePayload = { ...obj, companyId: stateData?.id };\n\n        Object.entries(updatePayload).forEach(([key, value]: any) => {\n          formData.set(key, value);\n        });\n\n        if (attachments?.length) {\n          formData.set(\"logo\", attachments[0]);\n        }\n\n        if (digitalSign?.length) {\n          formData.set(\"digitalSign\", digitalSign[0]);\n        }\n\n        companyService\n          .updateCompanyMaster(formData)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    companyService\n      .deactivateCompanyMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Company record ${\n            patchData?.isactive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditCompany(false);\n    setStateData({});\n    setCompanyFieldStructure(_.cloneDeep(CompanyFormFields));\n    setCompanyForm(_.cloneDeep(CompanyFormFields));\n    setParentFieldStructure(_.cloneDeep(ParentFormFields));\n    setParentForm(_.cloneDeep(ParentFormFields));\n    setAdditionalDetailsForm({});\n    setAttachments([]);\n    setDigitalSign([]);\n  \n   \n  };\n  console.log('signas',signatureUrl);\n  \n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Company\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={companyMaster}\n          column={CompanyMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Company\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n            loading={false}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditCompany ? 'Update' : 'Add New'} Company</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(CompanyForm)}\n                formUpdateEvent={companyFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n              <FormComponent\n                form={_.cloneDeep(AdditionalDetailsForm)}\n                formUpdateEvent={additionalDetailsFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n              <FormComponent\n                form={_.cloneDeep(ParentForm)}\n                formUpdateEvent={parentFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n              {/* attachment */}\n              <div className=\"row\">\n              <div className=\"col-md-6\">\n              <div className={classes[\"upload-wrapper\"]}>\n                <div className=\"row pd-10\">\n                  <div\n                    className={`col-md-12 ${classes[\"addition-field-header\"]}`}\n                  >\n                    <h5 className=\"popup-heading\">Company Logo</h5>\n                  </div>\n                  <div className=\"col-md-12\">\n                    <div className={classes[\"upload-file-section\"]}>\n                      <div className={classes[\"upload-file\"]}>\n                        {logoUrl  ? (\n                          <div className={classes[\"image-preview\"]}>\n                            <div className=\"icon-ui677\"> <i className=\"pi pi-times-circle\" onClick={removeFileHandler} style={{ color: 'red',fontSize: '1rem' }}></i></div>\n                            <img src={logoUrl} style={{width:'200px',height:'130px'}}  alt=\"Preview\" />\n                            {/* <div className={classes[\"chip-tm\"]}>\n                              {attachments.map(\n                                (\n                                  item: { name: string | undefined },\n                                  index: React.Key | null | undefined\n                                ) => (\n                                  <Chip\n                                    label={item.name}\n                                    removable\n                                    onRemove={() => removeFileHandler()}\n                                    key={index}\n                                  />\n                                )\n                              )}\n                            </div> */}\n                          </div>\n                        ) : (\n                          <div className={classes[\"empty-upload\"]}>\n                            <input\n                              type=\"file\"\n                              onClick={(event: any) => {\n                                event.target.value = null;\n                              }}\n                              onChange={(e) => selectAttachment(e.target.files)}\n                              className={classes[\"upload\"]}\n                              style={{ width: \"unset\" }}\n                            />\n                            <img\n                              src={ImageUrl.FolderIconImage}\n                              alt=\"Folder Icon\"\n                            />\n                            <p>\n                              Drag files here <span> or browse</span> <br />\n                              <u>Support PNG</u>\n                            </p>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              </div>\n              <div className=\"col-md-6\">\n              <div className={classes[\"upload-wrapper\"]}>\n                <div className=\"row pd-10\">\n                  <div\n                    className={`col-md-12 ${classes[\"addition-field-header\"]}`}\n                  >\n                    <h5 className=\"popup-heading\">Digital Signature</h5>\n                  </div>\n                  \n                  <div className=\"col-md-12\">\n                    <div className={classes[\"upload-file-section\"]}>\n                      <div className={classes[\"upload-file\"]}>\n                        {signatureUrl ? (\n                          <div  className={classes[\"image-preview\"]}>\n                          <div className=\"icon-ui677\"> <i className=\"pi pi-times-circle\" onClick={removeSignHandler} style={{ color: 'red',fontSize: '1rem' }}></i></div>\n                            <img src={signatureUrl} style={{width:'200px',height:'130px'}}  alt=\"Preview\" />\n                            {/* <div className={classes[\"chip-tm\"]}>\n                              {digitalSign.map(\n                                (\n                                  item: { name: string | undefined },\n                                  index: React.Key | null | undefined\n                                ) => (\n                                  <Chip\n                                    label={item.name}\n                                    removable\n                                    onRemove={() => removeSignHandler()}\n                                    key={index}\n                                  />\n                                )\n                              )}\n                            </div> */}\n                          </div>\n                        ) : (\n                          <div className={classes[\"empty-upload\"]}>\n                            <input\n                              type=\"file\"\n                              onClick={(event: any) => {\n                                event.target.value = null;\n                              }}\n                              onChange={(e) =>\n                                selectDigitalSign(e.target.files)\n                              }\n                              className={classes[\"upload\"]}\n                              style={{ width: \"unset\" }}\n                            />\n                            <img\n                              src={ImageUrl.FolderIconImage}\n                              alt=\"Folder Icon\"\n                            />\n                            <p>\n                              Drag files here <span> or browse</span> <br />\n                              <u>Support PNG</u>\n                            </p>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              </div>\n              </div>\n              {/* attachment */}\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewCompany}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default CompanyMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport moment from \"moment\";\n\nconst CompanyAddressMaster = () => {\n  const [stateData, setStateData] = useState<any>();\n  const CompanyLocationFormFields = {\n    companyName: {\n      inputType: \"singleSelect\",\n      label: \"Company\",\n      disable: false,\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      disable: true,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    state_name: {\n      inputType: \"singleSelect\",\n      label: \"State\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    // companyCode: {\n    //   inputType: \"inputtext\",\n    //   label: \"Company Code\",\n    //   value: null,\n    //   validation: {\n    //     required: true,\n    //   },\n    //   fieldWidth: \"col-md-4\",\n    // },\n    address1: {\n      inputType: \"inputtext\",\n      label: \"Address 1\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    address2: {\n      inputType: \"inputtext\",\n      label: \"Address 2\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    address3: {\n      inputType: \"inputtext\",\n      label: \"Address 3\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    gst_number: {\n      inputType: \"inputtext\",\n      label: \"GSTN\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    isDefaultAddress: {\n      inputType: \"inputSwitch\",\n      label: \"Is It Default Address\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4  mg-12-t\",\n    },\n  };\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [stateMaster, setStateMaster] = useState<any>([]);\n  const [companyLocationMaster, setCompanyLocationMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditCompanyLocation, setIsEditCompanyLocation] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n\n  const [companyLocationFieldStructure, setCompanyLocationFieldStructure] =\n    useState<any>(_.cloneDeep(CompanyLocationFormFields));\n  const [CompanyLocationForm, setCompanyLocationForm] = useState<any>(\n    _.cloneDeep(companyLocationFieldStructure)\n  );\n  const [AdditionalDetailsForm, setAdditionalDetailsForm] = useState<any>({});\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const companyService = new CompanyMasterService();\n  const countryService = new CountryMasterService();\n  const stateService = new StateMasterService();\n\n  const CompanyLocationMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Company\",\n      fieldName: \"companyName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"companyName\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.companyName}\n          >\n            {rowData.companyName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"countryName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"countryName\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.countryName}\n          >\n            {rowData.countryName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"State\",\n      fieldName: \"stateName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"stateName\",\n      changeFilter: true,\n      placeholder: \"State\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.stateName}\n          >\n            {rowData.stateName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 1\",\n      fieldName: \"address1\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address}\n          >\n            {rowData.address1}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 2\",\n      fieldName: \"address2\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address}\n          >\n            {rowData.address2}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 3\",\n      fieldName: \"address3\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address}\n          >\n            {rowData.address3}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"GSTN\",\n      fieldName: \"gst_number\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span>\n            {rowData.gst_number}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Additional Address Details\",\n      fieldName: \"additionalAddressDetails\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"additionalAddressDetails\",\n      changeFilter: true,\n      placeholder: \"Additional Address Details\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.additionalAddressDetails}\n          >\n            {rowData.additionalAddressDetails}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Default Address\",\n      fieldName: \"isDefaultAddress\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.IECode}\n          >\n            {rowData.isDefaultAddress == 1 ? \"Yes\" : \"No\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Deactivated At\",\n      fieldName: \"deactivationDate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"deactivationDate\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData.deactivationDate ? rowData.deactivationDate : 'NA'}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getCompanyLocationMaster();\n      const companies = await getCompanyMaster();\n      const countries = await getCountryMaster();\n      await formatCompanyDetails(companies);\n      await formatCountryDetails(countries);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getCompanyMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await companyService.getCompanyMaster();\n      const temp = response?.companies?.filter((item: any) => item?.isactive || item?.isActive)\n      setCompanyMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getCompanyLocationMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await companyService.getCompanyLocationMaster();\n      response?.locations?.forEach((el: any) => {\n        el.deactivationDate = el?.deactivationDate ? moment(el?.deactivationDate).format(\"DD-MM-YYYY HH:mm:ss\") : null\n        el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n       })\n      setCompanyLocationMaster(response?.locations);\n      return response?.locations;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      setCountryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getStateMaster = async (countryId: any) => {\n    // setLoader(true);\n    try {\n      const response = await stateService.getStateMaster(countryId);\n      const temp = response?.states?.filter((item: any) => item?.isactive || item?.isActive)\n      setStateMaster(temp);\n      await formatStateDetails(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      //   setLoader(false);\n    }\n  };\n\n  const formatCompanyDetails = async (companies: any = companyMaster) => {\n    const companyList = companies.map((company: any) => company?.companyName);\n    companyLocationFieldStructure.companyName.options = companyList;\n    setCompanyLocationFieldStructure(companyLocationFieldStructure);\n  };\n\n  const formatCountryDetails = async (countries: any = countryMaster) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    companyLocationFieldStructure.country_name.options = countrylist;\n    setCompanyLocationFieldStructure(companyLocationFieldStructure);\n    await companyLocationFormHandler(companyLocationFieldStructure);\n  };\n\n  const formatStateDetails = async (states: any = stateMaster) => {\n    const statelist = states.map((state: any) => state.stateName);\n    companyLocationFieldStructure.state_name.options = statelist;\n    setCompanyLocationFieldStructure(companyLocationFieldStructure);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const companyLocationFormHandler = async (currentForm: FormType) => {\n    const form = _.cloneDeep(currentForm);\n    if (form?.companyName?.value != CompanyLocationForm?.companyName?.value) {\n      const selectedCompany = companyMaster?.find(\n        (item: any) => item?.companyName == form?.companyName?.value\n      );\n      const selectedCountry = countryMaster?.find(\n        (item: any) => item?.name == selectedCompany?.countryName\n      );\n      if (selectedCountry) {\n        form.country_name.value = selectedCompany?.countryName;\n        const stateList = await getStateMaster(selectedCountry?.id);\n        if (stateList) {\n          const stateNames = stateList?.map((state: any) => state.stateName);\n          form.state_name.options = stateNames || [];\n          form.state_name.value = null;\n        }\n        const addressDetails = JSON.parse(\n          selectedCountry?.addressAdditionalFields\n        );\n        const detailsForm = Object.keys(addressDetails)?.reduce(\n          (acc: any, item: any, index: any) => {\n            acc[index] = {\n              inputType: \"inputtext\",\n              label: addressDetails[item],\n              value: null,\n              validation: {\n                required: true,\n              },\n              fieldWidth: \"col-md-4\",\n            };\n            return acc;\n          },\n          {}\n        );\n        setAdditionalDetailsForm(detailsForm);\n      }\n    }\n    setCompanyLocationForm(form);\n  };\n\n  const additionalDetailsFormHandler = async (form: FormType) => {\n    setAdditionalDetailsForm(form);\n  };\n\n  const onUpdate = async (data: any) => {\n    setStateData(data);\n    const selectedCountry = countryMaster?.find(\n      (item: any) => item?.name == data?.countryName\n    );\n    const stateList = await getStateMaster(selectedCountry?.id);\n    const stateNames = stateList?.map((state: any) => state.stateName);\n    updateCompanyLocationMaster(data, stateNames);\n    setFormPopup(true);\n    setIsEditCompanyLocation(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateCompanyLocationMaster = async (data: any, stateNames: any[]) => {\n    try {\n      companyLocationFieldStructure.companyName.value = data?.companyName;\n      companyLocationFieldStructure.companyName.disable = true;\n      companyLocationFieldStructure.country_name.value = data?.countryName;\n      companyLocationFieldStructure.state_name.options = stateNames;\n      companyLocationFieldStructure.state_name.value = data?.stateName;\n      companyLocationFieldStructure.address1.value = data?.address1;     \n      // companyLocationFieldStructure.companyCode.value = data?.companyCode;\n      companyLocationFieldStructure.address2.value = data?.address2;\n      companyLocationFieldStructure.address3.value = data?.address3;\n      companyLocationFieldStructure.gst_number.value = data?.gst_number;\n      companyLocationFieldStructure.isDefaultAddress.value = data?.isDefaultAddress == 1 ? true : false;\n      setCompanyLocationForm(_.cloneDeep(companyLocationFieldStructure));\n      const addressDetails = JSON.parse(data?.additionalAddressDetails);\n      const addressForm = Object.keys(addressDetails)?.reduce(\n        (acc: any, item: any, index: any) => {\n          acc[index] = {\n            inputType: \"inputtext\",\n            label: item,\n            value: addressDetails[item],\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4\",\n          };\n          return acc;\n        },\n        {}\n      );\n      setAdditionalDetailsForm(addressForm);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewCompanyLocation = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    console.log('CompanyLocationForm', CompanyLocationForm);\n\n    _.each(CompanyLocationForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyValidityFlag = companyValidityFlag && item.value;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    const companyId =\n      companyMaster.find(\n        (company: any) =>\n          company.companyName === CompanyLocationForm.companyName.value\n      )?.id ?? null;\n\n    const countryId =\n      countryMaster.find(\n        (country: any) =>\n          country.name === CompanyLocationForm.country_name.value\n      )?.id ?? null;\n\n    const stateId =\n      stateMaster.find(\n        (state: any) =>\n          state.stateName === CompanyLocationForm.state_name.value\n      )?.id ?? null;\n\n    if (CompanyLocationForm?.isDefaultAddress?.value == true) {\n      let defaultAccountFlag = false;\n      companyLocationMaster\n        ?.filter(\n          (acc: any) => acc?.companyName\n            == CompanyLocationForm.companyName.value\n        )\n        ?.forEach((item: any) => {\n          defaultAccountFlag = defaultAccountFlag || item?.isDefaultAddress;\n        });\n      if (defaultAccountFlag) {\n        ToasterService.show(\n          \"A default address for this company is already present\",\n          CONSTANTS.ERROR\n        );\n        return;\n      }\n    }\n\n    if (companyValidityFlag) {\n      const addressData = Object.keys(AdditionalDetailsForm)?.reduce(\n        (acc: any, item: any, index: any) => {\n          if (AdditionalDetailsForm[index]?.value != null) {\n            acc[AdditionalDetailsForm[index]?.label] =\n              AdditionalDetailsForm[index]?.value;\n          }\n          return acc;\n        },\n        {}\n      );\n      const obj = {\n        companyId: companyId,\n        countryId: countryId,\n        stateId: stateId,\n        address1: CompanyLocationForm?.address1?.value,\n        address2: CompanyLocationForm?.address2?.value,\n        address3: CompanyLocationForm?.address3?.value,\n        gst_number: CompanyLocationForm?.gst_number?.value,\n        // companyCode: CompanyLocationForm?.companyCode?.value,\n        additionalAddressDetails: addressData,\n        isDefaultAddress: CompanyLocationForm?.isDefaultAddress?.value == true ? 1 : 0,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        companyService\n          .createCompanyLocationMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, locationId: stateData?.id };\n\n        companyService\n          .updateCompanyLocationMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n        } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n      askForDeactivationDate: data?.isactive || data?.is_active || data?.isActive,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = (deactivationDate?: Date) => {\n    setLoader(true);\n    companyService\n      .deactivateCompanyLocationMaster({ ...patchData, loggedInUserId, deactivationDate: deactivationDate ? formatDate(deactivationDate) : null  })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Company Address record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const formatDate = (dateString: any) => {\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return \"\";\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}/${month}/${day}`;\n  };\n\n  const parseDateString = (dateString: any) => {\n    if (!dateString) return new Date();\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return new Date();\n    const year = date.getFullYear();\n    const month: any = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day: any = String(date.getDate()).padStart(2, \"0\");\n    return new Date(year, month - 1, day);\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditCompanyLocation(false);\n    setStateData({});\n    setCompanyLocationFieldStructure(_.cloneDeep(CompanyLocationFormFields));\n    setCompanyLocationForm(_.cloneDeep(CompanyLocationFormFields));\n    setAdditionalDetailsForm({});\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Company Location\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={companyLocationMaster}\n          column={CompanyLocationMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Company_Location\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n            loading={false}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditCompanyLocation ? 'Update' : 'Add New'} Company Location</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(CompanyLocationForm)}\n                formUpdateEvent={companyLocationFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n              <FormComponent\n                form={_.cloneDeep(AdditionalDetailsForm)}\n                formUpdateEvent={additionalDetailsFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewCompanyLocation}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default CompanyAddressMaster;\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class AccountTypeMasterService {\n  getAccountTypeMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_ACCOUNT_TYPE_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createAccountTypeMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_ACCOUNT_TYPE_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateAccountTypeMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_ACCOUNT_TYPE_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateAccountTypeMaster = async (data: any) => {\n    try {\n      const body = {\n        accountTypeId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_ACCOUNT_TYPE_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { AccountTypeMasterService } from \"../../services/masters/account-type-master/accountType.service\";\nimport { AccountsMasterService } from \"../../services/masters/accounts-master/accounts.service\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport moment from \"moment\";\n\nconst AccountMaster = () => {\n  const AccountFormFields = {\n    companyName: {\n      inputType: \"singleSelect\",\n      label: \"Company\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      disable: true,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    account_type: {\n      inputType: \"singleSelect\",\n      label: \"Bank Account Type\",\n      options: [],\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    bank_name: {\n      inputType: \"inputtext\",\n      label: \"Bank Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    bank_address: {\n      inputType: \"inputtext\",\n      label: \"Bank Address\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    account_no: {\n      inputType: \"inputNumber\",\n      label: \"Account Number\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    isDefaultAccount: {\n      inputType: \"inputSwitch\",\n      label: \"Is It Default Account\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4  mg-12-t\",\n    },\n  };\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const [accountTypeMaster, setAccountTypeMaster] = useState<any>([]);\n  const [accountMaster, setAccountMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditAccount, setIsEditAccount] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [accountFieldsStructure, setAccountFieldsStructure]: any =\n    useState(AccountFormFields);\n  const [AccountForm, setAccountForm] = useState<any>(\n    _.cloneDeep(accountFieldsStructure)\n  );\n  const [AdditionalDetailsForm, setAdditionalDetailsForm] = useState<any>({});\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const companyService = new CompanyMasterService();\n  const countryService = new CountryMasterService();\n  const accountTypeService = new AccountTypeMasterService();\n  const accountService = new AccountsMasterService();\n\n  const AccountMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Company\",\n      fieldName: \"companyName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"companyName\",\n      changeFilter: true,\n      placeholder: \"Company\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.companyName}\n          >\n            {rowData.companyName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"countryName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"countryName\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.countryName}\n          >\n            {rowData.countryName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Bank Account Type\",\n      fieldName: \"accountTypeName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"accountTypeName\",\n      changeFilter: true,\n      placeholder: \"Bank Account Type\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.accountTypeName}\n          >\n            {rowData.accountTypeName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Bank\",\n      fieldName: \"bankName\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.bankName}\n          >\n            {rowData.bankName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Bank Address\",\n      fieldName: \"bankAddress\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.bankAddress}\n          >\n            {rowData.bankAddress}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Account Number\",\n      fieldName: \"accountNumber\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.accountNumber}\n          >\n            {rowData.accountNumber}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Default Account\",\n      fieldName: \"isDefaultAccount\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.IECode}\n          >\n            {rowData.isDefaultAccount == 1 ? \"Yes\" : \"No\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Additional Details\",\n      fieldName: \"additionalFieldDetails\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.additionalFieldDetails}\n          >\n            {rowData.additionalFieldDetails != null &&\n            JSON.stringify(rowData.additionalFieldDetails) != \"null\" &&\n            JSON.stringify(rowData.additionalFieldDetails) != \"\"\n              ? JSON.stringify(rowData.additionalFieldDetails)\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getAccountMaster();\n      await getAccountTypeMaster();\n      const companies = await getCompanyMaster();\n      const countries = await getCountryMaster();\n      await formatCompanyDetails(companies);\n      await formatCountryDetails(countries);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getAccountMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await accountService.getAccountsMaster();\n      response?.companyAccounts?.forEach((el: any) => {\n        el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n       })\n      setAccountMaster(response?.companyAccounts);\n      return response?.companyAccounts;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getCompanyMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await companyService.getCompanyMaster();\n      const temp = response?.companies?.filter((item: any) => item?.isactive || item?.isActive)\n      setCompanyMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getAccountTypeMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await accountTypeService.getAccountTypeMaster();\n      const temp = response?.accountTypes?.filter((item: any) => item?.isactive || item?.isActive)\n      console.log('oooooooooooo', temp);\n      \n      setAccountTypeMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      setCountryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatCompanyDetails = async (companies: any = companyMaster) => {\n    const companyList = companies.map((company: any) => company?.companyName);\n    accountFieldsStructure.companyName.options = companyList;\n    setAccountFieldsStructure(accountFieldsStructure);\n  };\n\n  const formatCountryDetails = async (countries: any = countryMaster) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    accountFieldsStructure.country_name.options = countrylist;\n    await setAccountFieldsStructure(accountFieldsStructure);\n    await accountFormHandler(accountFieldsStructure);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const accountFormHandler = async (form: FormType) => {\n    // Clone the form to ensure immutability\n    const updatedForm = _.cloneDeep(form);\n  \n    console.log(\"we are there\", updatedForm);\n  \n    console.log(\n      \"Company Name --->\",\n      updatedForm?.companyName?.value,\n      AccountForm?.companyName?.value\n    );\n  \n    if (updatedForm?.companyName?.value !== AccountForm?.companyName?.value) {\n      const selectedCompany = companyMaster?.find(\n        (item: any) =>\n          item?.companyName === updatedForm?.companyName?.value\n      );\n  \n      const selectedCountry = countryMaster?.find(\n        (item: any) => item?.name === selectedCompany?.countryName\n      );\n  \n      if (selectedCountry) {\n        updatedForm.country_name.value = selectedCompany?.countryName;\n  \n        const accountTypes = accountTypeMaster\n          ?.filter(\n            (type: any) => type?.countryName === selectedCompany?.countryName\n          )\n          ?.map((item: any) => item?.accountTypeName);\n  \n        updatedForm.account_type.options = accountTypes;\n  \n        const addressDetails = JSON.parse(\n          selectedCountry?.bankAccAdditionalFields\n        );\n  \n        const detailsForm = Object.keys(addressDetails)?.reduce(\n          (acc: any, item: any, index: any) => {\n            acc[index] = {\n              inputType: \"inputtext\",\n              label: addressDetails[item],\n              value: null,\n              validation: {\n                required: true,\n              },\n              fieldWidth: \"col-md-4\",\n            };\n            return acc;\n          },\n          {}\n        );\n  \n        setAdditionalDetailsForm(detailsForm);\n      }\n    }\n  \n    // Update the state with the cloned and modified form\n    setAccountForm(updatedForm);\n  };\n  \n\n  const additionalDetailsFormHandler = async (form: FormType) => {\n    setAdditionalDetailsForm(form);\n  };\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    const accountTypes = accountTypeMaster\n      ?.filter((type: any) => type?.countryName == data?.countryName)\n      ?.map((item: any) => item?.accountTypeName);\n    updateStateMaster(data, accountTypes);\n    setFormPopup(true);\n    setIsEditAccount(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateStateMaster = (data: any, accountTypes: any) => {\n    try {\n      accountFieldsStructure.country_name.value = data?.countryName;\n      accountFieldsStructure.companyName.value = data?.companyName;\n      accountFieldsStructure.account_type.options = accountTypes;\n      accountFieldsStructure.account_type.value = data?.accountTypeName;\n      accountFieldsStructure.bank_name.value = data?.bankName;\n      accountFieldsStructure.bank_address.value = data?.bankAddress;\n      accountFieldsStructure.account_no.value = data?.accountNumber;\n      accountFieldsStructure.isDefaultAccount.value = data?.isDefaultAccount == 1 ? true : false;\n      setAccountForm(_.cloneDeep(accountFieldsStructure));\n      const bankDetails = data?.additionalFieldDetails;\n      const bankForm = Object.keys(bankDetails)?.reduce(\n        (acc: any, item: any, index: any) => {\n          acc[index] = {\n            inputType: \"inputtext\",\n            label: item,\n            value: bankDetails[item],\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4\",\n          };\n          return acc;\n        },\n        {}\n      );\n      setAdditionalDetailsForm(bankForm);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewAccount = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(AccountForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.value;\n      }\n    });\n\n    if (AccountForm?.isDefaultAccount?.value == true) {\n      let defaultAccountFlag = false;\n      accountMaster\n        ?.filter(\n          (acc: any) => acc?.companyName == AccountForm.companyName.value && !stateData?.id\n        )\n        ?.forEach((item: any) => {\n          defaultAccountFlag = defaultAccountFlag || item?.isDefaultAccount;\n        });\n      if (defaultAccountFlag) {\n        ToasterService.show(\n          \"A Default account for this company is already present\",\n          CONSTANTS.ERROR\n        );\n        return;\n      }\n    }\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const countryId =\n        countryMaster.find(\n          (country: any) => country.name === AccountForm.country_name.value\n        )?.id ?? null;\n\n      const companyId =\n        companyMaster.find(\n          (company: any) =>\n            company.companyName === AccountForm.companyName.value\n        )?.id ?? null;\n\n      const accountTypeId =\n        accountTypeMaster.find(\n          (type: any) => type.accountTypeName === AccountForm.account_type.value\n        )?.id ?? null;\n\n      const bankData = Object.keys(AdditionalDetailsForm)?.reduce(\n        (acc: any, item: any, index: any) => {\n          if (AdditionalDetailsForm[index]?.value != null) {\n            acc[AdditionalDetailsForm[index]?.label] =\n              AdditionalDetailsForm[index]?.value;\n          }\n          return acc;\n        },\n        {}\n      );\n      const obj = {\n        countryId: countryId,\n        companyId: companyId,\n        bankAccountTypeId: accountTypeId,\n        isDefaultAccount: AccountForm?.isDefaultAccount?.value == true ? 1 : 0,\n        bankName: AccountForm?.bank_name?.value,\n        bankAddress: AccountForm?.bank_address?.value,\n        accountNumber: AccountForm?.account_no?.value,\n        additionalFieldDetails: bankData,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        accountService\n          .createAccountsMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, accountId: stateData?.id };\n\n        accountService\n          .updateAccountsMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    accountService\n      .deactivateAccountsMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Account record ${\n            patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditAccount(false);\n    setStateData({});\n    setAccountFieldsStructure(_.cloneDeep(AccountFormFields));\n    setAccountForm(_.cloneDeep(AccountFormFields));\n    setAdditionalDetailsForm({});\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Account\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={accountMaster}\n          column={AccountMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Bank_Accounts\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditAccount ? 'Update' : 'Add New'} Account</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(AccountForm)}\n                formUpdateEvent={accountFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n              <FormComponent\n                form={_.cloneDeep(AdditionalDetailsForm)}\n                formUpdateEvent={additionalDetailsFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewAccount}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default AccountMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport moment from \"moment\";\n\nconst IndustryMaster = () => {\n  const IndustryFormFields = {\n    industryName: {\n      inputType: \"inputtext\",\n      label: \"Sub-Industry Name\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    subIndustryCategory : {\n      inputType: \"inputtext\",\n      label: \"Sub-Industry Category\",\n      value: null,\n      options: [],\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n  };\n  const [productionTypeMaster, setProductionTypeMaster] = useState<any>([]);\n  const [industryMaster, setIndustryMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [industryFieldsStructure, setIndustryFieldsStructure] = useState<any>(\n    _.cloneDeep(IndustryFormFields)\n  );\n  const [IndustryForm, setIndustryForm] = useState<any>(\n    _.cloneDeep(industryFieldsStructure)\n  );\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const industryService = new IndustryMasterService();\n\n  const IndustryMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Sub-Industry\",\n      fieldName: \"Sub-Industry\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"industryName\",\n      changeFilter: true,\n      placeholder: \"Industry\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.industryName}\n          >\n            {rowData.industryName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Sub Industry Categories\",\n      fieldName: \"subIndustryCategory \",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"subIndustryCategory \",\n      changeFilter: true,\n      placeholder: \"Industry\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.subIndustryCategory }\n          >\n            {rowData.subIndustryCategory }\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getIndustryMaster();\n      const productionTypes = await getProductionTypeMaster();\n      await formatProductionTypeDetails(productionTypes);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getIndustryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await industryService.getIndustryMaster();\n      response.industryMasters?.forEach((el: any) => {\n       el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n      })\n      setIndustryMaster(response?.industryMasters);\n      return response?.industryMasters;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getProductionTypeMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await industryService.getProductionTypeMaster();\n      setProductionTypeMaster(response?.productionTypes);\n      return response?.productionTypes;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatProductionTypeDetails = async (\n    productionTypes: any = productionTypeMaster\n  ) => {\n    // const typesList = productionTypes.map(\n    //   (types: any) => types?.productionTypeName\n    // );\n    // industryFieldsStructure.productionType.options = typesList;\n    await setIndustryFieldsStructure(industryFieldsStructure);\n    await industryFormHandler(industryFieldsStructure);\n  };\n\n  const openSaveForm = async () => {\n    setEditing(false);\n    setFormPopup(true);\n  };\n\n  const industryFormHandler = async (form: FormType) => {\n    setIndustryForm(form);\n  };\n\n  const onUpdate = (data: any) => {\n    console.log('here i ma')\n    setEditing(true);\n    setStateData(data);\n    updateIndustryMaster(data);\n    setFormPopup(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateIndustryMaster = (data: any) => {\n    try {\n      industryFieldsStructure.industryName.value = data?.industryName;\n      industryFieldsStructure.subIndustryCategory.value = data?.subIndustryCategory;\n      setIndustryForm(_.cloneDeep(industryFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewIndustry = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(IndustryForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      // let productionTypeIds = \"\";\n      // IndustryForm?.productionType?.value?.forEach((item: any) => {\n      //   const id =\n      //     productionTypeMaster?.find((types: any) => types?.productionTypeName == item)?.id ??\n      //     null;\n      //   if (id != null) {\n      //     productionTypeIds = productionTypeIds != \"\" ? productionTypeIds + \",\" + id : id;\n      //   }\n      // });\n      const obj = {\n        industryName: IndustryForm?.industryName?.value,\n        subIndustryCategory: IndustryForm?.subIndustryCategory?.value,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        industryService\n          .createIndustryMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, industryMasterId: stateData?.id };\n        industryService\n          .updateIndustryMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    industryService\n      .deactivateIndustryMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Industry record ${\n            patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setStateData({});\n    setIndustryFieldsStructure(_.cloneDeep(IndustryFormFields));\n    setIndustryForm(_.cloneDeep(IndustryFormFields));\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Sub-Industry\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={industryMaster}\n          column={IndustryMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Sub-Industry\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{!editing ? `Add New`:`Update`} Sub-Industry</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(IndustryForm)}\n                formUpdateEvent={industryFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewIndustry}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default IndustryMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport moment from \"moment\";\n\nconst IndustryGroupMaster = () => {\n  const IndustryGroupFormFields = {\n    industryGroupName: {\n      inputType: \"inputtext\",\n      label: \"Industry Group Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    industryNames: {\n      inputType: \"multiSelect\",\n      label: \"Industries\",\n      value: null,\n      options: [],\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n  };\n  const [industryMaster, setIndustryMaster] = useState<any>([]);\n  const [industryGroupMaster, setIndustryGroupMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditIndustryGroup, setIsEditIndustryGroup] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [industryGroupFieldsStructure, setIndustryGroupFieldsStructure] =\n    useState<any>(_.cloneDeep(IndustryGroupFormFields));\n  const [IndustryGroupForm, setIndustryGroupForm] = useState<any>(\n    _.cloneDeep(industryGroupFieldsStructure)\n  );\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const industryService = new IndustryMasterService();\n\n  const IndustryGroupMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Industry Group Name\",\n      fieldName: \"groupIndustryName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"groupIndustryName\",\n      changeFilter: true,\n      placeholder: \"Industry Group Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.groupIndustryName}\n          >\n            {rowData.groupIndustryName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Sub Industry\",\n      fieldName: \"industryNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"industryNames\",\n      changeFilter: true,\n      placeholder: \"Industry Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.industryNames}\n          >\n            {rowData.industryNames}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getIndustryGroupMaster();\n      const industries = await getIndustryMaster();\n      await formatIndustryDetails(industries);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getIndustryGroupMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await industryService.getIndustryGroupMaster();\n      response.groupIndustries?.forEach((el: any) => {\n      el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n      })\n      setIndustryGroupMaster(response?.groupIndustries);\n      return response?.groupIndustries;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getIndustryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await industryService.getIndustryMaster();\n      const temp = response?.industryMasters?.filter((item: any) => item?.isactive || item?.isActive)\n      setIndustryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatIndustryDetails = async (industries: any = industryMaster) => {\n    const industryList = industries.map(\n      (industry: any) => industry?.industryName\n    );\n    industryGroupFieldsStructure.industryNames.options = industryList;\n    await setIndustryGroupFieldsStructure(industryGroupFieldsStructure);\n    await industryGroupFormHandler(industryGroupFieldsStructure);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const industryGroupFormHandler = async (form: FormType) => {\n    setIndustryGroupForm(form);\n  };\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateIndustryGroupMaster(data);\n    setFormPopup(true);\n    setIsEditIndustryGroup(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateIndustryGroupMaster = (data: any) => {\n    try {\n      industryGroupFieldsStructure.industryGroupName.value =\n        data?.groupIndustryName;\n      industryGroupFieldsStructure.industryNames.value = data?.industryNames?.split(\",\") || [];\n      setIndustryGroupForm(_.cloneDeep(industryGroupFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewIndustryGroup = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(IndustryGroupForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      let industryIds = \"\";\n      IndustryGroupForm?.industryNames?.value?.forEach((item: any) => {\n        const id =\n          industryMaster?.find((industry: any) => industry?.industryName == item)?.id ??\n          null;\n        if (id != null) {\n          industryIds = industryIds != \"\" ? industryIds + \",\" + id : id;\n        }\n      });\n\n      const obj = {\n        groupIndustryName: IndustryGroupForm?.industryGroupName?.value,\n        industryIds: industryIds,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        industryService\n          .createIndustryGroupMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, groupIndustryId: stateData?.id };\n        industryService\n          .updateIndustryGroupMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    industryService\n      .deactivateIndustryGroupMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Industry Group record ${\n            patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditIndustryGroup(false);\n    setStateData({});\n    setIndustryGroupFieldsStructure(_.cloneDeep(IndustryGroupFormFields));\n    setIndustryGroupForm(_.cloneDeep(IndustryGroupFormFields));\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Industry Group\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={industryGroupMaster}\n          column={IndustryGroupMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Industry_Group\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditIndustryGroup ? 'Update' : 'Add New'} Industry Group</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(IndustryGroupForm)}\n                formUpdateEvent={industryGroupFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewIndustryGroup}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default IndustryGroupMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { RegionMasterService } from \"../../services/masters/region-master/region.service\";\nimport moment from \"moment\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { ValidationRegex } from \"../../constants/ValidationRegex\";\n\nconst IndustryHeadMaster = () => {\n  const IndustryHeadFormFields: any = {\n    industryHeadName: {\n      inputType: \"inputtext\",\n      label: \"Industry Head Name\",\n      value: null,\n      validation: {\n        required: true,\n        pattern:ValidationRegex.onlyCharacters.pattern,\n        patternHint:ValidationRegex.onlyCharacters.patternHint\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    code: {\n      inputType: \"inputtext\",\n      label: \"Industry Head Ecode\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    industry_head_email: {\n      inputType: \"inputtext\",\n      label: \"Industry Head Email\",\n      value: null,\n      validation: {\n        required: true,\n        email:true\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    industryNames: {\n      inputType: \"multiSelect\",\n      label: \"Industry Group\",\n      value: null,\n      options: [],\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    isRegionWise: {\n      inputType: \"inputSwitch\",\n      label: \"Region Wise\",\n      value: false,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4  mg-12-t\",\n    },\n    companyName: {\n      inputType: \"singleSelect\",\n      label: \"Company\",\n      disable:false,\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    region_code: {\n      inputType: \"multiSelect\",\n      label: \"Region\",\n      options: [],\n      value: null,\n      disable: true,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    state_name: {\n      inputType: \"multiSelect\",\n      label: \"State\",\n      options: [],\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    start_date: {\n      inputType: \"singleDatePicker\",\n      label: \"Start Date\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    end_date: {\n      inputType: \"singleDatePicker\",\n      label: \"End Date\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      disable: true,\n      fieldWidth: \"col-md-4\",\n    },\n  };\n  const [industryMaster, setIndustryMaster] = useState<any>([]);\n  const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [regionMaster, setRegionMaster] = useState<any>([]);\n  const [stateMaster, setStateMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditIndustryHead, setIsEditIndustryHead] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [industryHeadFieldsStructure, setIndustryHeadFieldsStructure] =\n    useState<any>(_.cloneDeep(IndustryHeadFormFields));\n  const [IndustryHeadForm, setIndustryHeadForm] = useState<any>(\n    _.cloneDeep(industryHeadFieldsStructure)\n  );\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const companyService = new CompanyMasterService();\n\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const industryService = new IndustryMasterService();\n  const countryService = new CountryMasterService();\n  const regionService = new RegionMasterService();\n  const stateService = new StateMasterService();\n\n  const IndustryHeadMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Name\",\n      fieldName: \"industryHeadName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"industryHeadName\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.industryHeadName}\n          >\n            {rowData.industryHeadName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n          label: \"Ecode\",\n          fieldName: \"code\",\n          textAlign: \"left\",\n          sort: true,\n          filter: true,\n          fieldValue: \"code\",\n          changeFilter: true,\n          placeholder: \"Ecode\",\n          body: (rowData: any) => (\n            <div>\n              <span\n                id={`companyNameTooltip-${rowData.id}`}\n              // data-pr-tooltip={rowData.code}\n              >\n                {rowData.code}\n              </span>\n              <Tooltip\n                target={`#companyNameTooltip-${rowData.id}`}\n                position=\"top\"\n              />\n            </div>\n          ),\n        },\n        {\n          label: \"Email\",\n          fieldName: \"industry_head_email\",\n          textAlign: \"left\",\n          sort: true,\n          filter: true,\n          fieldValue: \"industry_head_email\",\n          changeFilter: true,\n          placeholder: \"Email\",\n          body: (rowData: any) => (\n            <div>\n              <span\n                id={`companyNameTooltip-${rowData.id}`}\n              // data-pr-tooltip={rowData.code}\n              >\n                {rowData.industry_head_email}\n              </span>\n              <Tooltip\n                target={`#companyNameTooltip-${rowData.id}`}\n                position=\"top\"\n              />\n            </div>\n          ),\n        },\n    {\n      label: \"Industry Group\",\n      fieldName: \"industryNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"industryNames\",\n      changeFilter: true,\n      placeholder: \"Industry Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.industryNames}\n          >\n            {rowData.industryNames}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Company\",\n      fieldName: \"companyName\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.IECode}\n          >\n            {rowData.companyName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Region Wise\",\n      fieldName: \"isRegionWise\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.IECode}\n          >\n            {rowData.isRegionWise == 1 ? \"Yes\" : \"No\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"countryNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"countryNames\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.countryNames}\n          >\n            {rowData.countryNames}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Region\",\n      fieldName: \"regionNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"regionNames\",\n      changeFilter: true,\n      placeholder: \"State\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.region_name}\n          >\n            {rowData.regionNames != null && rowData.regionNames != \"\"\n              ? rowData.regionNames\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"State\",\n      fieldName: \"stateNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"stateNames\",\n      changeFilter: true,\n      placeholder: \"State\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.stateNames}\n          >\n            {rowData.stateNames != null && rowData.stateNames != \"\"\n              ? rowData.stateNames\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Start Date\",\n      fieldName: \"startDate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"startDate\",\n      changeFilter: true,\n      placeholder: \"State\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.startDate}\n          >\n            {rowData.viewStartDate}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"End Date\",\n      fieldName: \"endDate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"endDate\",\n      changeFilter: true,\n      placeholder: \"State\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.endDate}\n          >\n            {rowData.viewEndDate}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData.updated_at}\n             {/* {moment(rowData.updated_at).format('YYYY-MM-DD HH:mm:ss')} */}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  // Function to update the end_date min value dynamically\nuseEffect(() => {\n  console.log('start date changed', IndustryHeadForm?.start_date?.value, IndustryHeadForm?.end_date?.value);\n  // IndustryHeadForm.end_date.value = null;\n  setIndustryHeadForm((prevForm: any) => ({\n    ...prevForm,\n    end_date: {\n      ...prevForm.end_date,\n      min: prevForm.start_date?.value || null, // Set min as start_date value\n    },\n  }));\n}, [IndustryHeadForm?.start_date?.value]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getIndustryHeadMaster();\n      const industries = await getIndustryMaster();\n      const countries = await getCountryMaster();\n      const companies = await getCompanyMaster();\n      await formatCompanyDetails(companies);\n      await formatIndustryDetails(industries);\n      await formatCountryDetails(countries);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getCompanyMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await companyService.getCompanyMaster();\n      const temp = response?.companies?.filter((item: any) => item?.isactive || item?.isActive)\n      setCompanyMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getIndustryHeadMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await industryService.getIndustryHeadMaster();\n      response.industryHeads?.forEach((el: any) => {\n        el.viewStartDate = moment(el?.startDate).format(\"DD-MM-YYYY\")\n        el.viewEndDate = el?.endDate ? moment(el?.endDate).format(\"DD-MM-YYYY\") : null\n        el.startDate = moment(el?.startDate).format(\"DD-MM-YYYY\")\n        el.endDate = el?.endDate ? moment(el?.endDate).format(\"DD-MM-YYYY\") : null\n        el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n      })\n      \n      // const formattedDataForExcel = response?.industryHeads.map(({ startDate, endDate, ...rest }: any) => rest);\n      // console.log('formattedDataForExcel', formattedDataForExcel);\n      setIndustryHeadMaster(response.industryHeads);\n      return response?.industryHeads;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getIndustryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await industryService.getIndustryGroupMaster();\n      const temp = response?.groupIndustries?.filter((item: any) => item?.isactive || item?.isActive)\n      setIndustryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      setCountryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getRegionMaster = async (countryId: any) => {\n    // setLoader(true);\n    try {\n      const response = await regionService.getRegionMaster(countryId);\n      const temp = response?.regions?.filter((item: any) => item?.isactive || item?.isActive)\n      setRegionMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      //   setLoader(false);\n    }\n  };\n\n  const getStateMaster = async (countryId: any) => {\n    // setLoader(true);\n    try {\n      const response = await stateService.getStateMaster(countryId);\n      const temp = response?.states?.filter((item: any) => item?.isactive || item?.isActive)\n      setStateMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      //   setLoader(false);\n    }\n  };\n\n  const formatCompanyDetails = async (companies: any = companyMaster) => {\n    const companyList = companies.map((company: any) => company?.companyName);    \n    industryHeadFieldsStructure.companyName.options = companyList;\n    setIndustryHeadFieldsStructure(industryHeadFieldsStructure);\n  };\n\n  const formatIndustryDetails = async (industries: any = industryMaster) => {\n    const industryList = industries.map(\n      (industry: any) => industry?.groupIndustryName\n    );\n    industryHeadFieldsStructure.industryNames.options = industryList;\n    setIndustryHeadFieldsStructure(industryHeadFieldsStructure);\n    await industryHeadFormHandler(industryHeadFieldsStructure);\n  };\n\n  const formatCountryDetails = async (countries: any = countryMaster) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    industryHeadFieldsStructure.country_name.options = countrylist;\n    setIndustryHeadFieldsStructure(industryHeadFieldsStructure);\n    await industryHeadFormHandler(industryHeadFieldsStructure); \n  };\n\n  const formatRegionDetails = async (regions: any = regionMaster) => {\n    const regionlist = regions.map((region: any) => region.regionCode);\n    industryHeadFieldsStructure.region_code.options = regionlist;\n    setIndustryHeadFieldsStructure(industryHeadFieldsStructure);\n  };\n\n  const formatStateDetails = async (states: any = stateMaster) => {\n    const statelist = states.map((state: any) => state.stateName);\n    industryHeadFieldsStructure.state_name.options = statelist;\n    setIndustryHeadFieldsStructure(industryHeadFieldsStructure);\n  };\n\n  const formatDate = (dateString: any) => {\n    if(!dateString)return null;\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}/${month}/${day}`;\n  };\n\n  const parseDateString = (dateString: any) => {\n    if (!dateString) return new Date();\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return new Date();\n    const year = date.getFullYear();\n    const month: any = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day: any = String(date.getDate()).padStart(2, \"0\");\n    return new Date(year, month - 1, day);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const modifyFormRegionWise = async (selectedCountries: any) => {\n    let regionsList: any[] = [];\n    const regionPromises = selectedCountries?.map(async (item: any) => {\n      const country = countryMaster?.find(\n        (country: any) => country?.name === item\n      );\n      if (country) {\n        const regions = await getRegionMaster(country?.id);\n        return regions;\n      }\n      return [];\n    });\n    const allRegions = await Promise?.all(regionPromises);\n    regionsList = allRegions?.flat();\n    setRegionMaster(regionsList);\n    await formatRegionDetails(regionsList);\n    const regionCodes = regionsList?.map((item: any) => item?.regionCode);\n    return [regionCodes, regionsList];\n  };\n\n  const modifyFormStateWise = async (selectedCountries: any) => {\n    let statesList: any[] = [];\n    const statePromises = selectedCountries?.map(async (item: any) => {\n      const country = countryMaster?.find(\n        (country: any) => country?.name === item\n      );\n      if (country) {\n        const states = await getStateMaster(country?.id);\n        return states;\n      }\n      return [];\n    });\n    const allStates = await Promise?.all(statePromises);\n    statesList = allStates?.flat();\n    setStateMaster(statesList);\n    await formatStateDetails(statesList);\n    const stateNames = statesList?.map((item: any) => item?.stateName);\n    return stateNames;\n  };\n\n  const industryHeadFormHandler = async (form: FormType) => {\n    console.log(\"Form Update Triggered:\", form, stateMaster, regionMaster);\n  \n    const selectedCompany = companyMaster?.find(\n      (item: any) => item?.companyName === form?.companyName?.value\n    );\n    const selectedCountry = countryMaster?.find(\n      (item: any) => item?.name === selectedCompany?.countryName\n    );\n  \n    if (selectedCountry) {\n      form.country_name.value = selectedCompany?.countryName;\n  \n      // if (stateMaster.length === 0) {\n        const stateList = await getStateMaster(selectedCountry?.id);\n        form.state_name.options = stateList?.map((state: any) => state.stateName) || [];\n      // } else{\n      //   form.state_name.options = stateMaster?.map((state: any) => state.stateName) || [];\n      // }\n  \n      // if (regionMaster.length === 0) {\n        const regionList = await getRegionMaster(selectedCountry?.id);\n        form.region_code.options = regionList?.map((region: any) => region.regionCode) || [];\n      // } else{\n      //   form.region_code.options = regionMaster?.map((region: any) => region.regionCode) || [];\n      // }\n    }\n  \n    setIndustryHeadForm(form);\n  };\n  \n\n  const onUpdate = async (data: any) => {\n    setStateData(data);\n    console.log(\"Form Update Triggeredddddddddddd:\", data, stateMaster, regionMaster);\n  \n    let regionCodeList = [];\n    let regionList: any = [];\n    let regionNamesList = [];\n    let stateList = [];\n  \n    const countries = data?.countryNames?.split(\",\");\n  \n    if (data?.isRegionWise == 1) {\n      if (regionMaster.length === 0) {\n        [regionCodeList, regionList] = await modifyFormRegionWise(countries);\n      }\n      const regionNamesArray = data?.regionNames?.split(\",\") || [];\n      regionNamesList = regionNamesArray.map((regionName: any) => {\n        const region = regionList?.find((regionItem: any) => regionItem.regionName === regionName);\n        return region ? region.regionCode : null;\n      });\n    } else {\n      if (stateMaster.length === 0) {\n        stateList = await modifyFormStateWise(countries);\n      }\n    }\n  \n    updateIndustryHeadMaster(data, regionCodeList, regionNamesList, stateList);\n    setFormPopup(true);\n    setIsEditIndustryHead(true);\n  };\n  \n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateIndustryHeadMaster = (\n    data: any,\n    regionCodeList: any,\n    regionNamesList: any,\n    stateList: any\n  ) => {\n    console.log('llllllllllllllll', data);\n    \n    try {\n      industryHeadFieldsStructure.companyName.value = data?.companyName;\n      industryHeadFieldsStructure.industryHeadName.value =\n        data?.industryHeadName;\n        industryHeadFieldsStructure.code.value = data?.code;\n      industryHeadFieldsStructure.industry_head_email.value = data?.industry_head_email;\n      industryHeadFieldsStructure.industryNames.value =\n        data?.industryNames?.split(\",\");\n      industryHeadFieldsStructure.country_name.value =\n        data?.countryNames?.split(\",\");\n      industryHeadFieldsStructure.isRegionWise.value =\n        data?.isRegionWise == 1 ? true : false;\n      if (data?.isRegionWise == 1) {\n        industryHeadFieldsStructure.region_code.value = regionNamesList;\n        industryHeadFieldsStructure.region_code.options = regionCodeList;\n        industryHeadFieldsStructure.state_name.options = [];\n        industryHeadFieldsStructure.state_name.value = null;\n      } else {\n        industryHeadFieldsStructure.region_code.value = null;\n        industryHeadFieldsStructure.region_code.options = [];\n        industryHeadFieldsStructure.state_name.options = stateList;\n        industryHeadFieldsStructure.state_name.value =\n          data?.stateNames?.split(\",\") || null;\n      }\n      industryHeadFieldsStructure.start_date.value = parseDateString(\n        data?.startDate\n      );\n      industryHeadFieldsStructure.end_date.value = data?.endDate ? parseDateString(\n        data?.endDate\n      ) : null;\n      setIndustryHeadForm(_.cloneDeep(industryHeadFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewIndustryHead = (event: FormEvent) => {\n    console.log('IndustryHeadForm', IndustryHeadForm);\n    \n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(IndustryHeadForm, (item: any) => {\n      if (item?.validation?.required) {\n        // companyFormValid.push(item.valid);\n        companyValidityFlag =\n          companyValidityFlag &&\n          item.value;\n      }\n      // if (\n      //   (IndustryHeadForm?.isRegionWise?.value == false &&\n      //     IndustryHeadForm?.state_name?.value == null) ||\n      //   (IndustryHeadForm?.isRegionWise?.value == true &&\n      //     IndustryHeadForm?.region_code?.value == null)\n      // ) {\n      //   companyValidityFlag = false;\n      // }\n    });\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      let industryIds = \"\";\n      IndustryHeadForm?.industryNames?.value?.forEach((item: any) => {\n        const id =\n          industryMaster?.find(\n            (industry: any) => industry?.groupIndustryName == item\n          )?.id ?? null;\n        if (id != null) {\n          industryIds = industryIds != \"\" ? industryIds + \",\" + id : id;\n        }\n      });\n      // let countryIds = \"\";\n      // IndustryHeadForm?.country_name?.value?.forEach((item: any) => {\n      //   const id =\n      //     countryMaster?.find((country: any) => country?.name == item)?.id ??\n      //     null;\n      //   if (id != null) {\n      //     countryIds = countryIds != \"\" ? countryIds + \",\" + id : id;\n      //   }\n      // });\n      let regionIds = \"\";\n      IndustryHeadForm?.region_code?.value?.forEach((item: any) => {\n        const id =\n          regionMaster?.find((region: any) => region?.regionCode == item)?.id ??\n          null;\n        if (id != null) {\n          regionIds = regionIds != \"\" ? regionIds + \",\" + id : id;\n        }\n      });\n      let stateIds = \"\";\n      IndustryHeadForm?.state_name?.value?.forEach((item: any) => {\n        const id =\n          stateMaster?.find((state: any) => state?.stateName == item)?.id ??\n          null;\n        if (id != null) {\n          stateIds = stateIds != \"\" ? stateIds + \",\" + id : id;\n        }\n      });\n\n      const companyIds =\n      companyMaster.find(\n        (company: any) =>\n          company.companyName === IndustryHeadForm.companyName.value\n      )?.id ?? null;\n      console.log('IndustryHeadForm',companyIds, companyMaster);\n\n    const countryIds =\n      countryMaster.find(\n        (country: any) =>\n          country.name === IndustryHeadForm.country_name.value\n      )?.id ?? null;\n\n    // const stateIds =\n      // stateMaster.find(\n      //   (state: any) =>\n      //     state.stateName === IndustryHeadForm.state_name.value?.includes(state?.stateName)\n      // )?.id ?? null;\n\n      // stateMaster\n      // .filter((state: any) => IndustryHeadForm?.state_name?.value?.includes(state?.regionCode))\n      // .map((state: any) => state?.id);\n\n      // const regionIds = regionMaster\n      // .filter((region: any) => IndustryHeadForm?.region_ode?.value?.includes(region?.regionCode))\n      // .map((region: any) => region?.id);\n\n      const obj = {\n        companyId: companyIds,\n        industryHeadName: IndustryHeadForm?.industryHeadName?.value,\n        industryIds: industryIds,\n        code: IndustryHeadForm?.code?.value,\n        industry_head_email: IndustryHeadForm?.industry_head_email.value,\n        isRegionWise: IndustryHeadForm?.isRegionWise?.value == true ? 1 : 0,\n        countryIds: countryIds,\n        regionIds: regionIds != \"\" ? regionIds : null,\n        stateIds: stateIds != \"\" ? stateIds : null,\n        startDate: formatDate(IndustryHeadForm?.start_date?.value) || null,\n        endDate: IndustryHeadForm?.end_date?.value ? formatDate(IndustryHeadForm?.end_date?.value) : null,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        industryService\n          .createIndustryHeadMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, industryHeadId: stateData?.id };\n        industryService\n          .updateIndustryHeadMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    console.log('eeeeeeeeeeeee', data);\n    \n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n      askForDeactivationDate: data?.isactive || data?.is_active || data?.isActive,\n      minDate: data?.startDate,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = (deactivationDate?: Date) => {\n    setLoader(true);\n    console.log('deactivationDate', deactivationDate);\n    \n    industryService\n      .deactivateIndustryHeadMaster({ ...patchData, loggedInUserId, deactivationDate: deactivationDate ? formatDate(deactivationDate) : null, })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Industry Head record ${\n            patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditIndustryHead(false);\n    setStateData({});\n    setIndustryHeadFieldsStructure(_.cloneDeep(IndustryHeadFormFields));\n    setIndustryHeadForm(_.cloneDeep(IndustryHeadFormFields));\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Industry Head\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={industryHeadMaster}\n          column={IndustryHeadMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Industry_Head\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditIndustryHead ? 'Update' : 'Add New'} Industry Head</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(IndustryHeadForm)}\n                formUpdateEvent={industryHeadFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewIndustryHead}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default IndustryHeadMaster;","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { SalesMasterService } from \"../../services/masters/sales-master/sales.service\";\nimport moment from \"moment\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { ValidationRegex } from \"../../constants/ValidationRegex\";\n\nconst SalesMaster = () => {\n  const SalesFormFields = {\n    name: {\n      inputType: \"inputtext\",\n      label: \"Name\",\n      value: null,\n      validation: {\n        required: true,\n        pattern: ValidationRegex.onlyCharacters.pattern,\n        patternHint: ValidationRegex.onlyCharacters.patternHint\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    code: {\n      inputType: \"inputtext\",\n      label: \"Ecode\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    sales_manager_email: {\n      inputType: \"inputtext\",\n      label: \"Email\",\n      value: null,\n      validation: {\n        required: true,\n        email: true\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    companyName: {\n      inputType: \"singleSelect\",\n      label: \"Company\",\n      disable: false,\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    industryHeadNames: {\n      inputType: \"multiSelect\",\n      label: \"Industry Head\",\n      value: null,\n      options: [],\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    from_date: {\n      inputType: \"singleDatePicker\",\n      label: \"From Date\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    description: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n  const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n  const [salesMaster, setSalesMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [deactivatePopupIndustryHead, setDeactivatePopupIndustryHead] = useState(false);\n  const [deactivatePopup, setDeactivatePopup] = useState(false);\n  const [rowData, setRowData] = useState<any>(null);\n  const [isEditSalesManager, setIsEditSalesManager] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [isDeactivateFormValid, setIsDeactivateFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [deactivateIndustryHead, setDeactivateIndustryHead] = useState<any>([]);\n  const [industriesData, setIndustriesData] = useState<any>([]);\n  const [currRowData, setCurrRowData] = useState<any>([]);\n  const [salesFieldsStructure, setSalesFieldsStructure] = useState<any>(\n    _.cloneDeep(SalesFormFields)\n  );\n  const [SalesForm, setSalesForm] = useState<any>(\n    _.cloneDeep(salesFieldsStructure)\n  );\n\n  // const deactivateFormObject: any = {\n  //   deactivationDate: {\n  //     inputType: \"singleDatePicker\",\n  //     label: \"Select Deactivation Date\",\n  //     value: null,\n  //     min: new Date(new Date().getFullYear(), new Date().getMonth() - 6, new Date().getDate()),\n  //     max: new Date(new Date().getFullYear(), new Date().getMonth() + 6, new Date().getDate()),\n  //     validation: {\n  //       required: true,\n  //     },\n  //     fieldWidth: \"col-md-12\",\n  //   },\n  // }\n  const deactivateFormObject: any = {\n    deactivationDate: {\n      inputType: \"singleDatePicker\",\n      label: \"Select Deactivation Date\",\n      value: null,\n      min: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()),\n      max: new Date(new Date().getFullYear(), new Date().getMonth() + 6, new Date().getDate()),\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n    industry_head_name: {\n      inputType: \"multiSelect\",\n      label: \"Industry Head Name\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n  }\n\n  const [deactForm, setDeactivateForm] = useState<any>(_.cloneDeep(deactivateFormObject));\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  const [patchData, setPatchData] = useState<any>();\n  const industryService = new IndustryMasterService();\n  const salesService = new SalesMasterService();\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const companyService = new CompanyMasterService();\n\n  // const onDeactivate = (rowData: any) => {\n  //   console.log('here we are')\n  //   setRowData(rowData);\n  //   if (rowData.isActive == 1) {\n  //     setDeactivatePopup(true);\n  //   }\n  //   else {\n  //     onDelete(rowData);\n  //   }\n  // }\n\n  const handleDeactivate = (data: any) => {\n    console.log(`jjjjjjj`,data)\n    // patchData = data;\n    // setCurrRowData(data);\n    if(data?.isActive == 1){\n      console.log(`active non active 1`,data)\n      setDeactivatePopupIndustryHead(true);\n      console.log('this is rowdata', data);\n      \n      // Get industry head names from rowData\n      const industryHeadNames = data.industryHeadNames?.split(',') || [];\n      \n      // Update the deactivate form with industry head names as options\n      const updatedForm = _.cloneDeep(deactForm);\n      updatedForm.industry_head_name.options = industryHeadNames;\n      setDeactivateForm(updatedForm); \n      console.log(`dasdawdas`,updatedForm,patchData)\n    }\n    else{\n      const temp = { ...data }; // Make a shallow copy if needed\n      data.industryHeadIds = temp?.deactivatedIndustryIds\n        ?.split(',')\n        .map(Number);\n      console.log(`asdasdasdasdasdas`,data,patchData)\n      setActionPopupToggle({\n        displayToggle: false,\n        title: \"Delete\",\n        message: `Are you sure you want to activate this record?`,\n        acceptFunction: () => confirmDelete(data),\n        rejectFunction: onPopUpClose,\n        askForDeactivationDate: data?.isactive || data?.is_active || data?.isActive,\n        minDate: data?.fromDate,\n      });\n      setShowConfirmDialogue(true);\n      }\n    setPatchData(data)\n  };\n  \n\n  const SalesMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => handleDeactivate(rowData)}\n          ></span>\n          {/* <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span> */}\n        </div>\n      ),\n    },\n    {\n      label: \"Sales Manager Name\",\n      fieldName: \"name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"name\",\n      changeFilter: true,\n      placeholder: \"Sales Manager Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.name}\n          >\n            {rowData.name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Sales Manager Ecode\",\n      fieldName: \"code\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"code\",\n      changeFilter: true,\n      placeholder: \"Sales Manager Ecode\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.code}\n          >\n            {rowData.code}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Sales Manager Email\",\n      fieldName: \"sales_manager_email\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"sales_manager_email\",\n      changeFilter: true,\n      placeholder: \"Sales Manager Email\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.code}\n          >\n            {rowData.sales_manager_email}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Company\",\n      fieldName: \"companyName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"companyName\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.companyName}\n          >\n            {rowData.companyName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Industry Head Names\",\n      fieldName: \"industryHeadNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"industryHeadNames\",\n      changeFilter: true,\n      placeholder: \"Industry Head Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.industryHeadNames}\n          >\n            {rowData.industryHeadNames}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"description\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.description}\n          >\n            {rowData.description != null &&\n              rowData.description != \"null\" &&\n              rowData.description != \"\"\n              ? rowData.description\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"From Date\",\n      fieldName: \"fromDate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"fromDate\",\n      changeFilter: true,\n      placeholder: \"From Date\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.fromDate}\n          >\n            {rowData.fromDate}\n            {/* {moment(rowData.fromDate).format(\"YYYY-MM-DD\")} */}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"To Date\",\n      fieldName: \"deactivationDate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"deactivationDate\",\n      changeFilter: true,\n      placeholder: \"To Date\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.fromDate}\n          >\n            {rowData.deactivationDate}\n\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData.updated_at}\n            {/* {moment(rowData.updated_at).format('YYYY-MM-DD HH:mm:ss')} */}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getSalesMaster();\n      const industries = await getIndustryHeadMaster();\n      setIndustriesData(industries)\n      await formatIndustryHeadDetails(industries);\n      const companies = await getCompanyMaster();\n      await formatCompanyDetails(companies);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false && deactivatePopupIndustryHead == false){\n      const timeoutId = setTimeout(() => {\n        fetchData();\n      }, 100);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [storeFormPopup, showConfirmDialogue,deactivatePopupIndustryHead]);\n\n  const getCompanyMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await companyService.getCompanyMaster();\n      const temp = response?.companies?.filter((item: any) => item?.isactive || item?.isActive)\n      setCompanyMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatCompanyDetails = async (companies: any = companyMaster) => {\n    const companyList = companies.map((company: any) => company?.companyName);\n    salesFieldsStructure.companyName.options = companyList;\n  };\n\n  const getSalesMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await salesService.getSalesMaster();\n      response.salesManagers?.forEach((el: any) => {\n        el.fromDate = el?.fromDate ? moment(el?.fromDate).format(\"DD-MM-YYYY\") : null;\n        el.deactivationDate = el?.deactivationDate ? moment(el?.deactivationDate).format(\"DD-MM-YYYY\") : null\n        el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n      })\n      setSalesMaster(response?.salesManagers);\n      return response?.salesManagers;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getIndustryHeadMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await industryService.getIndustryHeadMaster();\n      const temp = response?.industryHeads?.filter((item: any) => item?.isactive || item?.isActive)\n      setIndustryHeadMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatIndustryHeadDetails = async (\n    industries: any = industryHeadMaster\n  ) => {\n    const industryHeadList = industries.map(\n      (industryHead: any) => industryHead?.industryHeadName\n    );\n    salesFieldsStructure.industryHeadNames.options = industryHeadList;\n    setSalesFieldsStructure(salesFieldsStructure);\n    await salesFormHandler(salesFieldsStructure);\n  };\n\n  const formatDate = (dateString: any) => {\n    if(!dateString)return null;\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return \"\";\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}/${month}/${day}`;\n  };\n\n  const parseDateString = (dateString: any) => {\n    if (!dateString) return new Date();\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return new Date();\n    const year = date.getFullYear();\n    const month: any = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day: any = String(date.getDate()).padStart(2, \"0\");\n    return new Date(year, month - 1, day);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const salesFormHandler = async (form: FormType) => {\n    setSalesForm(form);\n  };\n  const deactivationFormHandler = async (form: FormType) => {\n    // deactivateFormObject.deactivationDate.value = form.deactivationDate.value;\n    // deactivateFormObject.country_name.value = form.country_name.value;\n    // console.log(`asdasdasdasa`,deactivateFormObject.deactivationDate.value,deactivateFormObject.country_name.value);\n    setDeactivateForm(form);\n  }\n  \n  const submitDeactivateHeadFormHandler = (event: FormEvent) => {\n    console.log(`Submitting updated row data:`,patchData);\n    event.preventDefault();\n    const selectedHeadNames = deactForm.industry_head_name.value;\n    let selectedHeadIds: number[] = [];\n  \n    if (selectedHeadNames && Array.isArray(selectedHeadNames)) {\n      selectedHeadIds = selectedHeadNames.map((headName: string) => {\n        const matchedHead = industryHeadMaster.find(\n          (head: any) => head.industryHeadName === headName\n        );\n        return matchedHead ? matchedHead.id : null;\n      }).filter(id => id !== null);\n    } else if (selectedHeadNames) {\n      const matchedHead = industryHeadMaster.find(\n        (head: any) => head.industryHeadName === selectedHeadNames\n      );\n      if (matchedHead) {\n        selectedHeadIds = [matchedHead.id];\n      }\n    }\n  \n    // Clone the CurrRowData object\n    const updatedRowData = {\n      ...patchData,\n      deactivationDate: deactForm.deactivationDate.value,\n      industryHeadIds: selectedHeadIds\n    };\n  \n   \n    confirmDelete(updatedRowData);\n    setDeactivatePopupIndustryHead(false);\n    setDeactivateForm(_.cloneDeep(deactivateFormObject));\n    resetForm();\n  };\n  \n\n  // const submitDeactivateFormHandler = (event: FormEvent) => {\n  //   event.preventDefault();\n  //   let validity = true;\n  //   const deactivateFolrmValidaity: boolean[] = [];\n  //   console.log('jjjjjjjjjjjj', deactForm);\n\n  //   _.each(deactForm, (item: any) => {\n  //     if (item?.validation?.required) {\n  //       deactivateFolrmValidaity.push(item.valid);\n  //       validity = validity && item.valid;\n  //     }\n  //   });\n\n  //   setIsDeactivateFormValid(validity);\n  //   if (validity) {\n  //     onDelete(rowData)\n  //   }\n  // }\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateSalesMaster(data);\n    setFormPopup(true);\n    setIsEditSalesManager(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    closeDeactivation()\n    setShowConfirmDialogue(false);\n  };\n\n  const updateSalesMaster = (data: any) => {\n    try {\n      salesFieldsStructure.name.value = data?.name;\n      salesFieldsStructure.code.value = data?.code;\n      salesFieldsStructure.sales_manager_email.value = data?.sales_manager_email;\n      salesFieldsStructure.industryHeadNames.value =\n        data?.industryHeadNames?.split(\",\") || [];\n      salesFieldsStructure.description.value =\n        data?.description != null && data?.description != \"null\"\n          ? data?.description\n          : \"\";\n      salesFieldsStructure.from_date.value = parseDateString(data?.fromDate);\n      salesFieldsStructure.companyName.value = data?.companyName;\n\n      setSalesForm(_.cloneDeep(salesFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewSales = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n    console.log('jjjjjjjjjjjj', SalesForm);\n\n    _.each(SalesForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.value;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      let industryHeadIds = \"\";\n      SalesForm?.industryHeadNames?.value?.forEach((item: any) => {\n        const id =\n          industryHeadMaster?.find(\n            (industryHead: any) => industryHead?.industryHeadName == item\n          )?.id ?? null;\n        if (id != null) {\n          industryHeadIds =\n            industryHeadIds != \"\" ? industryHeadIds + \",\" + id : id;\n        }\n      });\n\n      const companyId =\n        companyMaster.find(\n          (company: any) =>\n            company.companyName === SalesForm.companyName.value\n        )?.id ?? null;\n\n\n      const obj = {\n        name: SalesForm?.name?.value,\n        code: SalesForm?.code?.value,\n        sales_manager_email: SalesForm.sales_manager_email.value,\n        fromDate: formatDate(SalesForm?.from_date?.value),\n        description: SalesForm?.description?.value,\n        industryHeadIds: industryHeadIds,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n        companyId: companyId,\n      };\n\n      if (!stateData?.id) {\n        salesService\n          .createSalesMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, salesManagerId: stateData?.id };\n        salesService\n          .updateSalesMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  // const onDelete = (data: any) => {\n  //   // patchData = data;\n  //   setActionPopupToggle({\n  //     displayToggle: false,\n  //     title: \"Delete\",\n  //     message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n  //       ? \"activate\"\n  //       : \"deactivate\"\n  //       } this record?`,\n  //     acceptFunction: confirmDelete,\n  //     rejectFunction: onPopUpClose,\n  //     askForDeactivationDate: data?.isactive || data?.is_active || data?.isActive,\n  //     minDate: data?.fromDate,\n  //   });\n  //   setShowConfirmDialogue(true);\n  // };\n\n  const confirmDelete = (data:any) => {\n    setLoader(true);\n    console.log(`datatattatatat`,currRowData,data,patchData)\n    salesService\n      .deactivateSalesMaster({ \n        ...data, \n        loggedInUserId, \n        deactivationDate: data?.deactivationDate ? formatDate(data.deactivationDate) : null,\n        industryHeadIds: data?.industryHeadIds ? data.industryHeadIds : [0]\n      })\n      .then((response) => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        if (response.statusCode === 200) {\n          closeDeactivation();\n          ToasterService.show(\n            `Sales Manager record ${data?.isActive ? \"deactivated\" : \"activated\"} successfully`,\n            CONSTANTS.SUCCESS\n          );\n        }\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const resetForm = () => {\n    setSalesForm(_.cloneDeep(SalesFormFields));\n    setDeactivateForm(_.cloneDeep(deactivateFormObject));\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditSalesManager(false);\n    setStateData({});\n    setSalesFieldsStructure(_.cloneDeep(SalesFormFields));\n    setSalesForm(_.cloneDeep(SalesFormFields));\n  };\n  const closeDeactivation = () => {\n    setRowData(null)\n    setDeactivatePopup(false);\n    setIsDeactivateFormValid(true);\n    setDeactivateForm(_.cloneDeep(deactivateFormObject));\n  }\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Sales Manager\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={salesMaster}\n          column={SalesMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Sales_Manager\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditSalesManager ? 'Update' : 'Add New'} Sales Manager</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(SalesForm)}\n                formUpdateEvent={salesFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewSales}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n       {deactivatePopupIndustryHead ? (\n      <div className=\"popup-overlay md-popup-overlay\">\n        <div style={{maxWidth:'360px'}} className=\"popup-body md-popup-body stretchLeft\">\n          <div className=\"popup-header\">\n            <div\n              className=\"popup-close\"\n              onClick={() => {\n   \n                setDeactivatePopupIndustryHead(false);\n                resetForm();\n              }}\n            >\n              <i className=\"pi pi-angle-left\"></i>\n              <h4 className=\"popup-heading\">Deactivate Industry Head</h4>\n            </div>\n            <div\n              className=\"popup-right-close\"\n              onClick={() => {\n                setDeactivatePopupIndustryHead(false);\n                resetForm();\n              }}\n            >\n              &times;\n            </div>\n          </div>\n          <div className=\"popup-content\"  style={{paddingBottom:'0rem',maxHeight:\"calc(100vh - 452px)\" }}>\n            <FormComponent\n              form={_.cloneDeep(deactForm)}\n              formUpdateEvent={deactivationFormHandler}\n              isFormValidFlag={isDeactivateFormValid}\n            ></FormComponent>\n          </div>\n\n          <div className=\"popup-lower-btn\">\n            <ButtonComponent\n              label=\"Submit\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              submitEvent={submitDeactivateHeadFormHandler}\n            />\n          </div>\n        </div>\n      </div>\n    ) : null}\n      {/* {deactivatePopup ? (\n      <div className=\"popup-overlay md-popup-overlay\">\n        <div style={{maxWidth:'360px'}} className=\"popup-body md-popup-body stretchLeft\">\n          <div className=\"popup-header\">\n            <div\n              className=\"popup-close\"\n              onClick={() => {\n   \n                closeDeactivation()\n              }}\n            >\n              <i className=\"pi pi-angle-left\"></i>\n              <h4 className=\"popup-heading\">Deactivate Sales Manager</h4>\n            </div>\n            <div\n              className=\"popup-right-close\"\n              onClick={() => {\n                closeDeactivation()\n            \n              }}\n            >\n              &times;\n            </div>\n          </div>\n          <div className=\"popup-content\"  style={{paddingBottom:'0rem',maxHeight:\"calc(100vh - 535px)\" }}>\n            <FormComponent\n              form={_.cloneDeep(deactForm)}\n              formUpdateEvent={deactivationFormHandler}\n              isFormValidFlag={isDeactivateFormValid}\n            ></FormComponent>\n          </div>\n\n          <div className=\"popup-lower-btn\">\n            <ButtonComponent\n              label=\"Submit\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              submitEvent={submitDeactivateFormHandler}\n            />\n          </div>\n        </div>\n      </div>\n    ) : null} */}\n    </>\n  );\n};\n\nexport default SalesMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { AccountMasterService } from \"../../services/masters/account-manager-master/accountManager.service\";\nimport moment from \"moment\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { ValidationRegex } from \"../../constants/ValidationRegex\";\n\nconst AccountManagerMaster = () => {\n  const AccountFormFields = {\n    name: {\n      inputType: \"inputtext\",\n      label: \"Name\",\n      value: null,\n      validation: {\n        required: true,\n        pattern: ValidationRegex.onlyCharacters.pattern,\n        patternHint: ValidationRegex.onlyCharacters.patternHint\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    code: {\n      inputType: \"inputtext\",\n      label: \"Ecode\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    account_manager_email: {\n      inputType: \"inputtext\",\n      label: \"Email\",\n      value: null,\n      validation: {\n        required: true,\n        email: true\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    companyName: {\n      inputType: \"singleSelect\",\n      label: \"Company\",\n      disable: false,\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    industryHeadNames: {\n      inputType: \"multiSelect\",\n      label: \"Industry Head\",\n      value: null,\n      options: [],\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    from_date: {\n      inputType: \"singleDatePicker\",\n      label: \"From Date\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    description: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n  const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n  const [accountMaster, setAccountMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditAccManager, setIsEditAccManager] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [isDeactivateFormValid, setIsDeactivateFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [accountFieldsStructure, setAccountFieldsStructure] = useState<any>(\n    _.cloneDeep(AccountFormFields)\n  );\n  const [AccountForm, setAccountForm] = useState<any>(\n    _.cloneDeep(accountFieldsStructure)\n  );\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const companyService = new CompanyMasterService();\n  const [patchData, setPatchData] = useState<any>();\n\n  const [deactivatePopup, setDeactivatePopup] = useState(false);\n  const [deactivatePopupIndustryHead, setDeactivatePopupIndustryHead] = useState(false);\n  const [rowData, setRowData] = useState<any>(null);\n\n\n  const deactivateFormObject: any = {\n    deactivationDate: {\n      inputType: \"singleDatePicker\",\n      label: \"Select Deactivation Date\",\n      value: null,\n      min: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()),\n      max: new Date(new Date().getFullYear(), new Date().getMonth() + 6, new Date().getDate()),\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n    industry_head_name: {\n      inputType: \"multiSelect\",\n      label: \"Industry Head Name\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n  }\n\n  const [deactForm, setDeactivateForm] = useState<any>(_.cloneDeep(deactivateFormObject));\n\n  // const onDeactivate = (rowData: any) => {\n  //   console.log('here we are')\n  //   setRowData(rowData);\n  //   if (rowData.isActive == 1) {\n  //     setDeactivatePopup(true);\n  //   }\n  //   else {\n  //     onDelete(rowData);\n  //   }\n\n  // }\n\nconst handleDeactivate = (data: any) => {\n    console.log(`jjjjjjj`,data)\n    // patchData = data;\n    // setCurrRowData(data);\n    if(data?.isActive == 1){\n      console.log(`active non active 1`,data)\n      setDeactivatePopupIndustryHead(true);\n      console.log('this is rowdata', data);\n      \n      // Get industry head names from rowData\n      const industryHeadNames = data.industryHeadNames?.split(',') || [];\n      \n      // Update the deactivate form with industry head names as options\n      const updatedForm = _.cloneDeep(deactForm);\n      updatedForm.industry_head_name.options = industryHeadNames;\n      setDeactivateForm(updatedForm); \n      console.log(`dasdawdas`,updatedForm,patchData)\n    }\n    else{\n      const temp = { ...data }; // Make a shallow copy if needed\n      data.industryHeadIds = temp?.deactivatedIndustryIds\n        ?.split(',')\n        .map(Number);\n      console.log(`asdasdasdasdasdas`,data,patchData)\n      setActionPopupToggle({\n        displayToggle: false,\n        title: \"Delete\",\n        message: `Are you sure you want to activate this record?`,\n        acceptFunction: () => confirmDelete(data),\n        rejectFunction: onPopUpClose,\n        askForDeactivationDate: data?.isactive || data?.is_active || data?.isActive,\n        minDate: data?.fromDate,\n      });\n      setShowConfirmDialogue(true);\n      }\n      setPatchData(data)\n  };\n\n  const loggedInUserId = userInfo?.userId;\n  // let patchData: any;\n  const industryService = new IndustryMasterService();\n  const accountService = new AccountMasterService();\n\n  const AccountMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => handleDeactivate(rowData)}\n          ></span>\n          {/* <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span> */}\n        </div>\n      ),\n    },\n    {\n      label: \"Account Manager Name\",\n      fieldName: \"name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"name\",\n      changeFilter: true,\n      placeholder: \"Account Manager Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.name}\n          >\n            {rowData.name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Account Manager Ecode\",\n      fieldName: \"code\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"code\",\n      changeFilter: true,\n      placeholder: \"Account Manager Ecode\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.code}\n          >\n            {rowData.code}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Account Manager Email\",\n      fieldName: \"account_manager_email\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"account_manager_email\",\n      changeFilter: true,\n      placeholder: \"Account Manager Email\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.code}\n          >\n            {rowData.account_manager_email}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Company\",\n      fieldName: \"companyName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"companyName\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.companyName}\n          >\n            {rowData.companyName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Industry Head Names\",\n      fieldName: \"industryHeadNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"industryHeadNames\",\n      changeFilter: true,\n      placeholder: \"Industry Head Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.industryHeadNames}\n          >\n            {rowData.industryHeadNames}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"description\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.description}\n          >\n            {rowData.description != null &&\n              rowData.description != \"null\" &&\n              rowData.description != \"\"\n              ? rowData.description\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"From Date\",\n      fieldName: \"fromDate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"fromDate\",\n      changeFilter: true,\n      placeholder: \"From Date\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.fromDate}\n          >\n            {rowData.fromDate}\n            {/* {moment(rowData.fromDate).format(\"YYYY-MM-DD\")} */}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"To Date\",\n      fieldName: \"deactivationDate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"deactivationDate\",\n      changeFilter: true,\n      placeholder: \"To Date\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.fromDate}\n          >\n            {rowData.deactivationDate}\n\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData.updated_at}\n            {/* {moment(rowData.updated_at).format('YYYY-MM-DD HH:mm:ss')} */}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getAccountMaster();\n      const industries = await getIndustryHeadMaster();\n      await formatIndustryHeadDetails(industries);\n      const companies = await getCompanyMaster();\n      await formatCompanyDetails(companies);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false && deactivatePopupIndustryHead == false){\n      const timeoutId = setTimeout(() => {\n        fetchData();\n      }, 100);\n\n      return () => clearTimeout(timeoutId);\n    }\n\n  }, [storeFormPopup, showConfirmDialogue,deactivatePopupIndustryHead]);\n\n  const getCompanyMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await companyService.getCompanyMaster();\n      const temp = response?.companies?.filter((item: any) => item?.isactive || item?.isActive)\n      setCompanyMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatCompanyDetails = async (companies: any = companyMaster) => {\n    const companyList = companies.map((company: any) => company?.companyName);\n    accountFieldsStructure.companyName.options = companyList;\n  };\n\n  const getAccountMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await accountService.getAccountMaster();\n      // const temp = response?.accountManagers?.filter((item: any) => item?.isactive || item?.isActive)\n      response?.accountManagers?.forEach((el: any) => {\n        el.fromDate = el?.fromDate ? moment(el?.fromDate).format(\"DD-MM-YYYY\") : null;\n        el.deactivationDate = el?.deactivationDate ? moment(el?.deactivationDate).format(\"DD-MM-YYYY\") : null\n        el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n      })\n      setAccountMaster(response?.accountManagers);\n      return response?.accountManagers;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getIndustryHeadMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await industryService.getIndustryHeadMaster();\n      const temp = response?.industryHeads?.filter((item: any) => item?.isactive || item?.isActive)\n      setIndustryHeadMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatIndustryHeadDetails = async (\n    industries: any = industryHeadMaster\n  ) => {\n    const industryHeadList = industries.map(\n      (industryHead: any) => industryHead?.industryHeadName\n    );\n    accountFieldsStructure.industryHeadNames.options = industryHeadList;\n    setAccountFieldsStructure(accountFieldsStructure);\n    await accountFormHandler(accountFieldsStructure);\n  };\n\n  const formatDate = (dateString: any) => {\n    if(!dateString)return null;\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}/${month}/${day}`;\n  };\n\n  // const parseDateString = (dateString: any) => {\n  //   const [year, month, day] = dateString?.split(\"/\")?.map(Number);\n  //   return new Date(year, month - 1, day);\n  // };.\n\n  const parseDateString = (dateString: any) => {\n    if (!dateString) return new Date();\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return new Date();\n    const year = date.getFullYear();\n    const month: any = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day: any = String(date.getDate()).padStart(2, \"0\");\n    return new Date(year, month - 1, day);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const accountFormHandler = async (form: FormType) => {\n    setAccountForm(form);\n  };\n  const deactivationFormHandler = async (form: FormType) => {\n    setDeactivateForm(form);\n  }\n  // const submitDeactivateFormHandler = (event: FormEvent) => {\n  //   event.preventDefault();\n  //   let validity = true;\n  //   const deactivateFolrmValidaity: boolean[] = [];\n  //   console.log('jjjjjjjjjjjj', deactForm);\n\n  //   _.each(deactForm, (item: any) => {\n  //     if (item?.validation?.required) {\n  //       deactivateFolrmValidaity.push(item.valid);\n  //       validity = validity && item.valid;\n  //     }\n  //   });\n\n  //   setIsDeactivateFormValid(validity);\n  //   if (validity) {\n  //     onDelete(rowData)\n  //   }\n  // }\n\n   const resetForm = () => {\n      setAccountForm(_.cloneDeep(AccountFormFields))\n      setDeactivateForm(_.cloneDeep(deactivateFormObject));\n    };\n\n   const submitDeactivateHeadFormHandler = (event: FormEvent) => {\n      console.log(`Submitting updated row data:`,patchData);\n      event.preventDefault();\n      const selectedHeadNames = deactForm.industry_head_name.value;\n      let selectedHeadIds: number[] = [];\n    \n      if (selectedHeadNames && Array.isArray(selectedHeadNames)) {\n        selectedHeadIds = selectedHeadNames.map((headName: string) => {\n          const matchedHead = industryHeadMaster.find(\n            (head: any) => head.industryHeadName === headName\n          );\n          return matchedHead ? matchedHead.id : null;\n        }).filter(id => id !== null);\n      } else if (selectedHeadNames) {\n        const matchedHead = industryHeadMaster.find(\n          (head: any) => head.industryHeadName === selectedHeadNames\n        );\n        if (matchedHead) {\n          selectedHeadIds = [matchedHead.id];\n        }\n      }\n    \n      // Clone the CurrRowData object\n      const updatedRowData = {\n        ...patchData,\n        deactivationDate: deactForm.deactivationDate.value,\n        industryHeadIds: selectedHeadIds\n      };\n    \n      console.log(`updated row is `,updatedRowData)\n      confirmDelete(updatedRowData);\n      setDeactivatePopupIndustryHead(false);\n      setDeactivateForm(_.cloneDeep(deactivateFormObject));\n      resetForm();\n    }\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateAccountMaster(data);\n    setFormPopup(true);\n    setIsEditAccManager(true);\n  };\n\n  const closeDeactivation = () => {\n    setRowData(null)\n    setDeactivatePopup(false);\n    setIsDeactivateFormValid(true);\n    setDeactivateForm(_.cloneDeep(deactivateFormObject));\n  }\n\n  const onPopUpClose = (e?: any) => {\n    closeDeactivation()\n    setShowConfirmDialogue(false);\n  };\n\n  const updateAccountMaster = (data: any) => {\n    try {\n      accountFieldsStructure.name.value = data?.name;\n      accountFieldsStructure.code.value = data?.code;\n      accountFieldsStructure.account_manager_email.value = data?.account_manager_email;\n      accountFieldsStructure.industryHeadNames.value =\n        data?.industryHeadNames?.split(\",\");\n      accountFieldsStructure.description.value =\n        data?.description != null && data?.description != \"null\"\n          ? data?.description\n          : \"\";\n      accountFieldsStructure.from_date.value = parseDateString(data?.fromDate);\n      // accountFieldsStructure.fromDate.value = parseDateString(data?.fromDate);\n      accountFieldsStructure.companyName.value = data?.companyName;\n      setAccountForm(_.cloneDeep(accountFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewAccount = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(AccountForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      let industryHeadIds = \"\";\n      AccountForm?.industryHeadNames?.value?.forEach((item: any) => {\n        const id =\n          industryHeadMaster?.find(\n            (industryHead: any) => industryHead?.industryHeadName == item\n          )?.id ?? null;\n        if (id != null) {\n          industryHeadIds =\n            industryHeadIds != \"\" ? industryHeadIds + \",\" + id : id;\n        }\n      });\n\n      const companyId =\n        companyMaster.find(\n          (company: any) =>\n            company.companyName === AccountForm.companyName.value\n        )?.id ?? null;\n\n      const obj = {\n        name: AccountForm?.name?.value,\n        code: AccountForm?.code?.value,\n        account_manager_email: AccountForm?.account_manager_email.value,\n        fromDate: formatDate(AccountForm?.from_date?.value),\n        description: AccountForm?.description?.value,\n        industryHeadIds: industryHeadIds,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n        companyId: companyId,\n      };\n\n      if (!stateData?.id) {\n        accountService\n          .createAccountMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, accountManagerId: stateData?.id };\n        accountService\n          .updateAccountMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  // const onDelete = (data: any) => {\n  //   patchData = data;\n  //   setActionPopupToggle({\n  //     displayToggle: false,\n  //     title: \"Delete\",\n  //     message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n  //       ? \"activate\"\n  //       : \"deactivate\"\n  //       } this record?`,\n  //     acceptFunction: confirmDelete,\n  //     rejectFunction: onPopUpClose,\n  //     askForDeactivationDate: data?.isactive || data?.is_active || data?.isActive,\n  //     minDate: data?.fromDate,\n  //   });\n  //   setShowConfirmDialogue(true);\n  // };\n\n  // const confirmDelete = (deactivationDate?: Date) => {\n  //   setLoader(true);\n  //   accountService\n  //     // .deactivateAccountMaster({ ...patchData, loggedInUserId,deactivationDate:deactForm.deactivationDate.value })\n  //     .deactivateAccountMaster({ ...patchData, loggedInUserId, deactivationDate: deactivationDate ? formatDate(deactivationDate) : null })\n  //     .then((response) => {\n  //       setLoader(false);\n  //       setShowConfirmDialogue(false);\n  //       if (response.statusCode === 200) {\n  //         closeDeactivation();\n\n  //         ToasterService.show(\n  //           `Account Manager record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n  //           } successfully`,\n  //           CONSTANTS.SUCCESS\n  //         );\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       setLoader(false);\n  //       return false;\n  //     });\n  // };\n\n  const confirmDelete = (data:any) => {\n      setLoader(true);\n      console.log(`datatattatatat`,data,patchData)\n      accountService\n        .deactivateAccountMaster({ \n          ...data, \n          loggedInUserId, \n          deactivationDate: data?.deactivationDate ? formatDate(data.deactivationDate) : null,\n          industryHeadIds: data?.industryHeadIds ? data.industryHeadIds : [0]\n        })\n        .then((response) => {\n          setLoader(false);\n          setShowConfirmDialogue(false);\n          if (response.statusCode === 200) {\n            closeDeactivation();\n            ToasterService.show(\n              `Sales Manager record ${data?.isActive ? \"deactivated\" : \"activated\"} successfully`,\n              CONSTANTS.SUCCESS\n            );\n          }\n        })\n        .catch((error) => {\n          setLoader(false);\n          return false;\n        });\n    };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditAccManager(false);\n    setStateData({});\n    setAccountFieldsStructure(_.cloneDeep(AccountFormFields));\n    setAccountForm(_.cloneDeep(AccountFormFields));\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Account Manager\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={accountMaster}\n          column={AccountMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Account_Manager\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditAccManager ? 'Update' : 'Add New'} Account Manager</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(AccountForm)}\n                formUpdateEvent={accountFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewAccount}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n        {deactivatePopupIndustryHead ? (\n      <div className=\"popup-overlay md-popup-overlay\">\n        <div style={{maxWidth:'360px'}} className=\"popup-body md-popup-body stretchLeft\">\n          <div className=\"popup-header\">\n            <div\n              className=\"popup-close\"\n              onClick={() => {\n   \n                setDeactivatePopupIndustryHead(false);\n                resetForm();\n              }}\n            >\n              <i className=\"pi pi-angle-left\"></i>\n              <h4 className=\"popup-heading\">Deactivate Industry Head</h4>\n            </div>\n            <div\n              className=\"popup-right-close\"\n              onClick={() => {\n                setDeactivatePopupIndustryHead(false);\n                resetForm();\n              }}\n            >\n              &times;\n            </div>\n          </div>\n          <div className=\"popup-content\"  style={{paddingBottom:'0rem',maxHeight:\"calc(100vh - 452px)\" }}>\n            <FormComponent\n              form={_.cloneDeep(deactForm)}\n              formUpdateEvent={deactivationFormHandler}\n              isFormValidFlag={isDeactivateFormValid}\n            ></FormComponent>\n          </div>\n\n          <div className=\"popup-lower-btn\">\n            <ButtonComponent\n              label=\"Submit\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              submitEvent={submitDeactivateHeadFormHandler}\n            />\n          </div>\n        </div>\n      </div>\n    ) : null}\n      {/* {deactivatePopup ? (\n      <div className=\"popup-overlay md-popup-overlay\">\n        <div style={{maxWidth:'360px'}} className=\"popup-body md-popup-body stretchLeft\">\n          <div className=\"popup-header\">\n            <div\n              className=\"popup-close\"\n              onClick={() => {\n   \n                closeDeactivation()\n              }}\n            >\n              <i className=\"pi pi-angle-left\"></i>\n              <h4 className=\"popup-heading\">Deactivate Account Manager</h4>\n            </div>\n            <div\n              className=\"popup-right-close\"\n              onClick={() => {\n                closeDeactivation()\n            \n              }}\n            >\n              &times;\n            </div>\n          </div>\n          <div className=\"popup-content\"  style={{paddingBottom:'0rem',maxHeight:\"calc(100vh - 535px)\" }}>\n            <FormComponent\n              form={_.cloneDeep(deactForm)}\n              formUpdateEvent={deactivationFormHandler}\n              isFormValidFlag={isDeactivateFormValid}\n            ></FormComponent>\n          </div>\n\n          <div className=\"popup-lower-btn\">\n            <ButtonComponent\n              label=\"Submit\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              submitEvent={submitDeactivateFormHandler}\n            />\n          </div>\n        </div>\n      </div>\n    ) : null} */}\n    </>\n  );\n};\n\nexport default AccountManagerMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { TechnologyMasterService } from \"../../services/masters/technology-master/technology.service\";\nimport moment from \"moment\";\n\nconst TechGroupMaster = () => {\n  const TechGroupFormFields = {\n    name: {\n      inputType: \"inputtext\",\n      label: \"Technology Group Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    description: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n  const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n  const [techGroupMaster, setTechGroupMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditTechGroup, setIsEditTechGroup] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [techGroupFieldsStructure, setTechGroupFieldsStructure] = useState<any>(\n    _.cloneDeep(TechGroupFormFields)\n  );\n  const [TechGroupForm, setTechGroupForm] = useState<any>(\n    _.cloneDeep(techGroupFieldsStructure)\n  );\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const technologyService = new TechnologyMasterService();\n\n  const TechGroupMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Technology Group\",\n      fieldName: \"name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"name\",\n      changeFilter: true,\n      placeholder: \"Technology Group Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.name}\n          >\n            {rowData.name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"description\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.description}\n          >\n            {rowData.description != null &&\n            rowData.description != \"null\" &&\n            rowData.description != \"\"\n              ? rowData.description\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getTechGroupMaster();\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getTechGroupMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await technologyService.getTechnologyGroupMaster();\n      response?.groups?.forEach((el: any) => {\n        el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n        });\n      setTechGroupMaster(response?.groups);\n      return response?.groups;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const techGroupFormHandler = async (form: FormType) => {\n    setTechGroupForm(form);\n  };\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateTechGroupMaster(data);\n    setFormPopup(true);\n    setIsEditTechGroup(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateTechGroupMaster = (data: any) => {\n    try {\n      techGroupFieldsStructure.name.value = data?.name;\n      techGroupFieldsStructure.description.value =\n        data?.description != null && data?.description != \"null\"\n          ? data?.description\n          : \"\";\n      setTechGroupForm(_.cloneDeep(techGroupFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewTechGroup = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(TechGroupForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const obj = {\n        name: TechGroupForm?.name?.value,\n        description: TechGroupForm?.description?.value,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        technologyService\n          .createTechnologyGroupMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, groupId: stateData?.id };\n        technologyService\n          .updateTechnologyGroupMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    technologyService\n      .deactivateTechnologyGroupMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Technology Group record ${\n            patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditTechGroup(false);\n    setStateData({});\n    setTechGroupFieldsStructure(_.cloneDeep(TechGroupFormFields));\n    setTechGroupForm(_.cloneDeep(TechGroupFormFields));\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Technology Group\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={techGroupMaster}\n          column={TechGroupMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Technology_Group\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditTechGroup ? 'Update' : 'Add New'} Technology Group</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(TechGroupForm)}\n                formUpdateEvent={techGroupFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewTechGroup}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default TechGroupMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { TechnologyMasterService } from \"../../services/masters/technology-master/technology.service\";\nimport moment from \"moment\";\n\nconst TechSubGroupMaster = () => {\n  const TechSubGroupFormFields = {\n    name: {\n      inputType: \"inputtext\",\n      label: \"Technology SubGroup Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    group_name: {\n      inputType: \"singleSelect\",\n      label: \"Technology Group\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    description: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n  const [techSubGroupMaster, setTechSubGroupMaster] = useState<any>([]);\n  const [techGroupMaster, setTechGroupMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditSubTechGroup, setIsEditSubTechGroup] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [techSubGroupFieldsStructure, setTechSubGroupFieldsStructure] =\n    useState<any>(_.cloneDeep(TechSubGroupFormFields));\n  const [TechSubGroupForm, setTechSubGroupForm] = useState<any>(\n    _.cloneDeep(techSubGroupFieldsStructure)\n  );\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const technologyService = new TechnologyMasterService();\n\n  const TechSubGroupMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Technology Sub-Group\",\n      fieldName: \"name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"name\",\n      changeFilter: true,\n      placeholder: \"Technology SubGroup Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.name}\n          >\n            {rowData.name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Technology Group\",\n      fieldName: \"techGroupNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"techGroupNames\",\n      changeFilter: true,\n      placeholder: \"Technology Group\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.techGroupNames}\n          >\n            {rowData.techGroupNames}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"description\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.description}\n          >\n            {rowData.description != null &&\n            rowData.description != \"null\" &&\n            rowData.description != \"\"\n              ? rowData.description\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getTechSubGroupMaster();\n      const techGroups = await getTechGroupMaster();\n      await formatGroupDetails(techGroups);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getTechSubGroupMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await technologyService.getTechnologySubGroupMaster();\n      response?.subgroups?.forEach((el: any) => {\n        el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n        });\n      setTechSubGroupMaster(response?.subgroups);\n      return response?.subgroups;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getTechGroupMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await technologyService.getTechnologyGroupMaster();\n      const temp = response?.groups?.filter((item: any) => item?.isactive || item?.isActive)\n      setTechGroupMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatGroupDetails = async (techGroups: any = techGroupMaster) => {\n    const grouplist = techGroups.map((group: any) => group?.name);\n    techSubGroupFieldsStructure.group_name.options = grouplist;\n    setTechSubGroupFieldsStructure(techSubGroupFieldsStructure);\n    await techSubGroupFormHandler(techSubGroupFieldsStructure);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const techSubGroupFormHandler = async (form: FormType) => {\n    setTechSubGroupForm(form);\n  };\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateTechSubGroupMaster(data);\n    setFormPopup(true);\n    setIsEditSubTechGroup(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateTechSubGroupMaster = (data: any) => {\n    try {\n      techSubGroupFieldsStructure.name.value = data?.name;\n      techSubGroupFieldsStructure.group_name.value =\n        data?.techGroupNames;\n      techSubGroupFieldsStructure.description.value =\n        data?.description != null && data?.description != \"null\"\n          ? data?.description\n          : \"\";\n      setTechSubGroupForm(_.cloneDeep(techSubGroupFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewTechSubGroup = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(TechSubGroupForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const techGroup = techGroupMaster?.find((group: any) => group?.name == TechSubGroupForm?.group_name?.value)\n      const obj = {\n        name: TechSubGroupForm?.name?.value,\n        techGroupIds: techGroup?.id || null,\n        description: TechSubGroupForm?.description?.value,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        technologyService\n          .createTechnologySubGroupMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, subgroupId: stateData?.id };\n        technologyService\n          .updateTechnologySubGroupMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    technologyService\n      .deactivateTechnologySubGroupMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Technology SubGroup record ${\n            patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditSubTechGroup(false);\n    setStateData({});\n    setTechSubGroupFieldsStructure(_.cloneDeep(TechSubGroupFormFields));\n    setTechSubGroupForm(_.cloneDeep(TechSubGroupFormFields));\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Technology Sub-Group\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={techSubGroupMaster}\n          column={TechSubGroupMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Technology_Sub-Group\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditSubTechGroup ? 'Update' : 'Add New'} Technology SubGroup</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(TechSubGroupForm)}\n                formUpdateEvent={techSubGroupFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewTechSubGroup}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default TechSubGroupMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { TechnologyMasterService } from \"../../services/masters/technology-master/technology.service\";\nimport moment from \"moment\";\n\nconst TechMaster = () => {\n  const TechFormFields = {\n    techName: {\n      inputType: \"inputtext\",\n      label: \"Technology Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    group_name: {\n      inputType: \"singleSelect\",\n      label: \"Technology Group\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    subGroup_name: {\n      inputType: \"multiSelect\",\n      label: \"Technology SubGroup\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    description: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n  const [techMaster, setTechMaster] = useState<any>([]);\n  const [techSubGroupMaster, setTechSubGroupMaster] = useState<any>([]);\n  const [techGroupMaster, setTechGroupMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditTechnology, setIsEditTechnology] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [techFieldsStructure, setTechFieldsStructure] = useState<any>(\n    _.cloneDeep(TechFormFields)\n  );\n  const [TechForm, setTechForm] = useState<any>(\n    _.cloneDeep(techFieldsStructure)\n  );\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const technologyService = new TechnologyMasterService();\n\n  const TechMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Technology\",\n      fieldName: \"techName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"techName\",\n      changeFilter: true,\n      placeholder: \"Technology Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.techName}\n          >\n            {rowData.techName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Technology Sub-Group\",\n      fieldName: \"techSubgroupNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"techSubgroupNames\",\n      changeFilter: true,\n      placeholder: \"Technology SubGroup Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.techSubgroupNames}\n          >\n            {rowData.techSubgroupNames}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Technology Group\",\n      fieldName: \"techGroupNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"techGroupNames\",\n      changeFilter: true,\n      placeholder: \"Technology Group\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.techGroupNames}\n          >\n            {rowData.techGroupNames}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n\n    {\n      label: \"Description\",\n      fieldName: \"description\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.description}\n          >\n            {rowData.description != null &&\n              rowData.description != \"null\" &&\n              rowData.description != \"\"\n              ? rowData.description\n              : \"NA\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getTechMaster();\n      const techGroups = await getTechGroupMaster();\n      await formatGroupDetails(techGroups);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getTechMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await technologyService.getTechnologyMaster();\n      response?.subgroups?.forEach((el: any) => {\n        el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n        });\n      setTechMaster(response?.subgroups);\n      return response?.subgroups;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getTechSubGroupMaster = async (techGroupId: any) => {\n    // setLoader(true);\n    try {\n      const response = await technologyService.getTechnologySubGroupMaster(\n        techGroupId\n      );\n      setTechSubGroupMaster(response?.subgroups);\n      await formatSubGroupDetails(response?.subgroups, techGroupId);\n      return response?.subgroups;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      //   setLoader(false);\n    }\n  };\n\n  const getTechGroupMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await technologyService.getTechnologyGroupMaster();\n      const temp = response?.groups?.filter((item: any) => item?.isactive || item?.isActive)\n      setTechGroupMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatSubGroupDetails = async (\n    techSubGroups: any = techSubGroupMaster,\n    techGroupId: any\n  ) => {\n    const subGrouplist = techSubGroups\n      ?.filter((item: any) => item?.techGroupIds == techGroupId)\n      ?.map((subGroup: any) => subGroup?.name);\n    techFieldsStructure.subGroup_name.options = subGrouplist;\n    setTechFieldsStructure(techFieldsStructure);\n  };\n\n  const formatGroupDetails = async (techGroups: any = techGroupMaster) => {\n    const grouplist = techGroups.map((group: any) => group?.name);\n    techFieldsStructure.group_name.options = grouplist;\n    setTechFieldsStructure(techFieldsStructure);\n    await techFormHandler(techFieldsStructure);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const modifyFormTechGroup = async (selectGroup: any) => {\n    const groups = techGroupMaster?.find(\n      (group: any) => group?.name === selectGroup\n    );\n    if (groups) {\n      const subGroups = await getTechSubGroupMaster(groups?.id);\n      const subGroupList = subGroups\n        ?.filter((item: any) => item?.techGroupIds == groups?.id)\n        .map((subGroup: any) => subGroup?.name);\n      return subGroupList;\n    }\n    return [];\n  };\n\n  const techFormHandler = async (form: FormType) => {\n    const updatedForm = { ...form }\n    const techGroupAreUnequal =\n      updatedForm?.group_name?.value !== TechForm?.group_name?.value;\n\n    // if (techGroupAreUnequal) {\n    const subGroupList = await modifyFormTechGroup(updatedForm?.group_name?.value);\n    if (subGroupList) {\n      updatedForm.subGroup_name.options = subGroupList;\n      // updatedForm.subGroup_name.value = null;\n    }\n    // }\n    // setTechForm(updatedForm);\n    // Only update the state if the form has truly changed\n    if (!_.isEqual(form, TechForm)) {\n      setTechForm({ ...form });\n    }\n  };\n\n  const onUpdate = async (data: any) => {\n    setStateData(data);\n    const subGroupList = await modifyFormTechGroup(data?.techGroupNames);\n    updateTechMaster(data, subGroupList);\n    setFormPopup(true);\n    setIsEditTechnology(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateTechMaster = (data: any, subGroupList: any) => {\n    try {\n      console.log(\"here data\", data);\n      console.log(\"here subGroupList\", subGroupList);\n\n      techFieldsStructure.techName.value = data?.techName;\n      techFieldsStructure.group_name.value = data?.techGroupNames;\n      techFieldsStructure.subGroup_name.options = subGroupList;\n      techFieldsStructure.subGroup_name.value = data?.techSubgroupNames?.split(',');\n      techFieldsStructure.description.value =\n        data?.description != null && data?.description != \"null\"\n          ? data?.description\n          : \"\";\n      setTechForm(_.cloneDeep(techFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewTech = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(TechForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const techGroup = techGroupMaster?.find(\n        (group: any) => group?.name == TechForm?.group_name?.value\n      );\n      const techSubGroup = techSubGroupMaster?.find(\n        (subGroup: any) => subGroup?.name == TechForm?.subGroup_name?.value\n      );\n\n      let techSubGroupId = \"\";\n      TechForm?.subGroup_name?.value?.forEach((item: any) => {\n        const id =\n        techSubGroupMaster?.find((tech: any) => tech?.name == item)?.id ??\n          null;\n        if (id != null) {\n          techSubGroupId = techSubGroupId != \"\" ? techSubGroupId + \",\" + id : id;\n        }\n      });\n\n      const obj = {\n        techName: TechForm?.techName?.value,\n        techGroupIds: techGroup?.id || null,\n        techSubgroupIds: techSubGroupId || null,\n        description: TechForm?.description?.value,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        technologyService\n          .createTechnologyMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, id: stateData?.id };\n        technologyService\n          .updateTechnologyMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n        } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    technologyService\n      .deactivateTechnologyMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Technology record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditTechnology(false);\n    setStateData({});\n    setTechFieldsStructure(_.cloneDeep(TechFormFields));\n    setTechForm(_.cloneDeep(TechFormFields));\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Technology\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={techMaster}\n          column={TechMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Technology\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditTechnology ? 'Update' : 'Add New'} Technology</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={techFieldsStructure}\n                formUpdateEvent={techFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewTech}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default TechMaster;\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport default class OemMasterService {\n  getOemMasterData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_OEM_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createOemMasterData = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id ? APIURLS.UPDATE_OEM_MASTER:APIURLS.CREATE_OEM_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  activateDeactivateOemMaster = async (data: any) => {\n    try {\n      const body = {\n        id: data.id,\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_OEM_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { TechnologyMasterService } from \"../../services/masters/technology-master/technology.service\";\nimport OemMasterService from \"../../services/masters/oem-master/oemMaster.service\";\nimport moment from \"moment\";\n\nconst OemMaster = () => {\n  const OemFormFields = {\n    oemName: {\n      inputType: \"inputtext\",\n      label: \"OEM Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    productName: {\n      inputType: \"inputtext\",\n      label: \"Product Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    type: {\n      inputType: \"singleSelect\",\n      label: \"Type\",\n      options: ['License','AMC'],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    // subGroup_name: {\n    //   inputType: \"singleSelect\",\n    //   label: \"Technology SubGroup\",\n    //   options: [],\n    //   value: null,\n    //   validation: {\n    //     required: true,\n    //   },\n    //   fieldWidth: \"col-md-4\",\n    // },\n    // description: {\n    //   inputType: \"inputtextarea\",\n    //   label: \"Description\",\n    //   value: null,\n    //   validation: {\n    //     required: false,\n    //   },\n    //   fieldWidth: \"col-md-12\",\n    //   rows: 3,\n    // },\n  };\n  const [OemMaster, setOemMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [rowData,setRowData] = useState<any>(null);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [oemFieldsStructure, setOemFieldStructure] = useState<any>(\n    _.cloneDeep(OemFormFields)\n  );\n  const [oemForm, setOemForm] = useState<any>(\n    _.cloneDeep(oemFieldsStructure)\n  );\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  \n  const oemMasterService = new OemMasterService();\n\n  const oemMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Oem Name\",\n      fieldName: \"oemName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"oemName\",\n      changeFilter: true,\n      placeholder: \"OEM Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.techName}\n          >\n            {rowData.oemName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Product Names\",\n      fieldName: \"productName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"productName\",\n      changeFilter: true,\n      placeholder: \"Product Names\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.productName}\n          >\n            {rowData.productName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n   \n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n   getOemMaster();\n  }, []);\n\n  const getOemMaster = async () => {\n   try {\n    const response = await oemMasterService.getOemMasterData();\n    if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n      response?.oems?.forEach((el: any) => {\n        el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n        });\n      setOemMaster(response.oems);\n     }\n   } catch (error:any) {\n    ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n   }\n  };\n\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n    setRowData(null);\n  };\n\n\n\n  const oemFormHandler = async (form: FormType) => {\n    const updatedForm = {...form}\n    setOemForm(updatedForm);\n  };\n\n  const onUpdate = async (data: any) => {\n      setRowData(data);\n      oemFieldsStructure.oemName.value = data?.oemName;\n      oemFieldsStructure.productName.value = data?.productName;\n      oemFieldsStructure.type.value = data.type || \"\";\n      setOemForm(_.cloneDeep(oemFieldsStructure));\n      setFormPopup(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n\n\n  const createNewOem = async (event: FormEvent) => {\n    event.preventDefault();\n    const obj:any = {\n      oemName: oemForm?.oemName?.value,\n      productName: oemForm?.productName?.value,\n      type:oemForm?.type.value,\n      isActive: 1,\n      updatedBy: loggedInUserId,  \n    };\n    if( rowData && rowData?.id){\n      obj['id'] = rowData.id\n    }\n    try {\n      const response = await oemMasterService.createOemMasterData(obj);\n       if (response?.statusCode === HTTP_RESPONSE.CREATED ||response?.statusCode === HTTP_RESPONSE.SUCCESS ) {\n                    closeFormPopup();\n                    getOemMaster();\n                    ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n           }\n               \n    } catch (error:any) {\n      ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n    } \n  };\n\n  const onDelete = (data: any) => {\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: () => confirmDelete(data),\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = (rowData:any) => {\n    setLoader(true);\n    oemMasterService\n      .activateDeactivateOemMaster({ id:rowData.id,isActive:rowData.isActive == 0?1:0 ,loggedInUserId:loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        getOemMaster();\n        ToasterService.show(\n          `Oem record ${\n            rowData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setRowData(null);\n    setOemFieldStructure(_.cloneDeep(OemFormFields));\n    setOemForm(_.cloneDeep(OemFormFields));\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New OEM\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={OemMaster}\n          column={oemMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"OEM\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{rowData?`Update`:`Add New`} OEM</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={oemFieldsStructure}\n                formUpdateEvent={oemFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewOem}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default OemMaster;\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport default class PolestarProductMasterService {\n  getPolestarProductMasterData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_POLESTAR_PRODUCT_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createPolestarProductMasterData = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id ? APIURLS.UPDATE_POLESTAR_PRODUCT_MASTER:APIURLS.CREATE_POLESTAR_PRODUCT_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  activateDeactivatePolestarProductMaster = async (data: any) => {\n    try {\n      const body = {\n        id: data.id,\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_POLESTAR_PRODUCT_MASTER_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\n\nimport PolestarProductMasterService from \"../../services/masters/polestar-product-master/polestarProductMaster.service\";\nimport moment from \"moment\";\n\nconst PolestarProductSalesMaster = () => {\n  const formObj = {\n    productName: {\n      inputType: \"inputtext\",\n      label: \"Product Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    description: {\n      inputType: \"inputtext\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    }\n  \n  };\n  const [PolestarProductSalesMaster, setPolestarProductSalesMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [rowData,setRowData] = useState<any>({});\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [formObjState, setFormObjState] = useState<any>(\n    _.cloneDeep(formObj)\n  );\n\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const polestarProductService = new PolestarProductMasterService();\n\n  const polestarProductSalesColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Product Name\",\n      fieldName: \"productName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"productName\",\n      changeFilter: true,\n      placeholder: \"Product Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.techName}\n          >\n            {rowData.productName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"description\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"description\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.description}\n          >\n            {rowData.description}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n   \n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n       getPolestarProductSalesMaster();  \n  }, []);\n\n  const getPolestarProductSalesMaster = async () => {\n    try {\n      const response = await polestarProductService.getPolestarProductMasterData();\n       if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                    closeFormPopup();\n                    response?.products?.forEach((el: any) => {\n                      el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n                      });\n                    setPolestarProductSalesMaster(response.products);\n                    // ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n           }\n               \n    } catch (error:any) {\n      ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n    }\n   \n  };\n\n  const openSaveForm = async () => {\n    setRowData(null);\n    setFormPopup(true);  \n  };\n\n\n\n  const polestarProductHandler = async (form: FormType) => {\n    const updatedForm = {...form}\n    setFormObjState(updatedForm);\n  };\n\n  const onUpdate = async (data: any) => {\n    setRowData(data);\n    updatePolestarProductSalesMaster(data);\n    setFormPopup(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updatePolestarProductSalesMaster = (data: any) => {\n    formObjState.productName.value = data.productName;\n    formObjState.description.value = data.description;\n    \n  };\n\n  const createNewRecord = async (event: FormEvent) => {\n    event.preventDefault();\n        const obj:any = {\n          productName: formObjState?.productName?.value,\n          description:formObjState?.description.value,\n          isActive: 1,\n          updatedBy: loggedInUserId,  \n        };\n        if( rowData && rowData?.id){\n          obj['id'] = rowData.id\n        }\n        try {\n          const response = await polestarProductService.createPolestarProductMasterData(obj);\n           if (response?.statusCode === HTTP_RESPONSE.CREATED ||response?.statusCode === HTTP_RESPONSE.SUCCESS ) {\n                        closeFormPopup();\n                        getPolestarProductSalesMaster();\n                        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n               }\n                   \n        } catch (error:any) {\n          ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n        }\n    \n    \n  };\n\n  const onDelete = (data: any) => {\n    \n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: () => confirmDelete(data),\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = (data:any) => {\n    setLoader(true);\n    polestarProductService\n      .activateDeactivatePolestarProductMaster( { id:data.id,isActive:data.isActive == 0?1:0 ,loggedInUserId:loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        getPolestarProductSalesMaster();\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Polestar product record ${\n            data?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setFormObjState(_.cloneDeep(formObj));\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Product\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={PolestarProductSalesMaster}\n          column={polestarProductSalesColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Polestar_Product_Sales\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{rowData?'Update':`Add New`} Product</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(formObjState)}\n                formUpdateEvent={polestarProductHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewRecord}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default PolestarProductSalesMaster;\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport default class ProjectServiceMasterService {\n  getProjectServiceMasterData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PROJECT_SERVICE_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createProjectServiceMasterData = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id ? APIURLS.UPDATE_PROJECT_SERVICE_MASTER : APIURLS.CREATE_PROJECT_SERVICE_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  activateDeactivateProjectServiceMaster = async (data: any) => {\n    try {\n      const body = {\n        id: data.id,\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_PROJECT_SERVICE_MASTER_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\n\nimport ProjectServiceMasterService from \"../../services/masters/project-service-master/projectServiceMaster.service\";\nimport moment from \"moment\";\n\nconst ProjectServiceMaster = () => {\n  const formObj = {\n    name: {\n      inputType: \"inputtext\",\n      label: \"Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    description: {\n      inputType: \"inputtext\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    }\n  };\n\n  const [projectServiceMaster, setProjectServiceMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [rowData, setRowData] = useState<any>({});\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [formObjState, setFormObjState] = useState<any>(\n    _.cloneDeep(formObj)\n  );\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  const projectService = new ProjectServiceMasterService();\n\n  const projectServiceColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Name\",\n      fieldName: \"name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"name\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`nameTooltip-${rowData.id}`}>\n            {rowData.name}\n          </span>\n          <Tooltip target={`#nameTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"description\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"description\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData.description}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    getProjectServiceMaster();\n  }, []);\n\n  const getProjectServiceMaster = async () => {\n    try {\n      const response = await projectService.getProjectServiceMasterData();\n      if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n        closeFormPopup();\n        response?.records?.forEach((el: any) => {\n          el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n          });\n        setProjectServiceMaster(response.records);\n      }\n    } catch (error: any) {\n      ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n    }\n  };\n\n  const openSaveForm = async () => {\n    setRowData(null);\n    setFormPopup(true);\n  };\n\n  const projectServiceHandler = async (form: FormType) => {\n    const updatedForm = { ...form };\n    setFormObjState(updatedForm);\n  };\n\n  const onUpdate = async (data: any) => {\n    setRowData(data);\n    updateProjectServiceMaster(data);\n    setFormPopup(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateProjectServiceMaster = (data: any) => {\n    formObjState.name.value = data.name;\n    formObjState.description.value = data.description;\n  };\n\n  const createNewRecord = async (event: FormEvent) => {\n    event.preventDefault();\n    const obj: any = {\n      name: formObjState?.name?.value,\n      description: formObjState?.description.value,\n      isActive: 1,\n      updatedBy: loggedInUserId,\n    };\n    if (rowData && rowData?.id) {\n      obj['id'] = rowData.id;\n    }\n    try {\n      const response = await projectService.createProjectServiceMasterData(obj);\n      if (response?.statusCode === HTTP_RESPONSE.CREATED || response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n        closeFormPopup();\n        getProjectServiceMaster();\n        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n      }\n    } catch (error: any) {\n      ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: () => confirmDelete(data),\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = (data: any) => {\n    setLoader(true);\n    projectService\n      .activateDeactivateProjectServiceMaster({ id: data.id, isActive: data.isActive == 0 ? 1 : 0, loggedInUserId: loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        getProjectServiceMaster();\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Project service record ${data?.isActive ? \"deactivated\" : \"activated\"} successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setFormObjState(_.cloneDeep(formObj));\n  };\n\n  return loader ? (\n    <Loader />\n\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Project/Service Master\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={projectServiceMaster}\n          column={projectServiceColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Project/Service_Master\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{rowData?'Update':`Add New`} Project/Service Master</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(formObjState)}\n                formUpdateEvent={projectServiceHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewRecord}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default ProjectServiceMaster;\n","import moment from 'moment';\nimport { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport default class RegionHeadMasterService {\n    getRegionHeadMaster = async (companyId?: any) => {\n        try {\n            const response = await HTTPService.postRequest(\n                APIURLS.GET_REGION_HEAD_MASTER,\n                { companyId: companyId ? companyId : null }\n            );\n            return response?.data;\n        } catch (err) {\n            return err;\n        }\n    };\n\n    createRegionHeadMaster = async (formData: any) => {\n        try {\n            const response = await HTTPService.postRequest(\n                APIURLS.CREATE_REGION_HEAD_MASTER,\n                formData\n            );\n\n            return response?.data;\n        } catch (error) {\n            return error;\n        }\n    };\n\n    updateRegionHeadMaster = async (formData: any) => {\n        try {\n            const response = await HTTPService.postRequest(\n                APIURLS.UPDATE_REGION_HEAD_MASTER,\n                formData\n            );\n\n            return response?.data;\n        } catch (error) {\n            return error;\n        }\n    };\n\n    deactivateRegionHeadMaster = async (data: any) => {\n        try {\n          const body = {\n            regionHeadId: data.id,\n            isActive: !data.isActive,\n            updatedBy: data?.loggedInUserId,\n            deactivationDate:data?.deactivationDate?moment(new Date(data?.deactivationDate)).format('YYYY-MM-DD'): null\n          };\n          const response = await HTTPService.postRequest(\n            APIURLS.TOGGLE_REGION_HEAD_STATUS,\n            body\n          );\n          return response?.data;\n        } catch (err) {\n          return err;\n        }\n      };\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { RegionMasterService } from \"../../services/masters/region-master/region.service\";\nimport RegionHeadMasterService from \"../../services/masters/region-head-master/regionHeadMaster.service\";\nimport moment from \"moment\";\nimport { ValidationRegex } from \"../../constants/ValidationRegex\";\n\nconst RegionHeadMaster = () => {\n  const [stateData, setStateData] = useState<any>();\n  const CompanyLocationFormFields = {\n    companyName: {\n      inputType: \"singleSelect\",\n      label: \"Company\",\n      disable: false,\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      disable: true,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    regionCode: {\n      inputType: \"multiSelect\",\n      label: \"Region\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    regionHeadName: {\n      inputType: \"inputtext\",\n      label: \"Region Head Name\",\n      value: null,\n      validation: {\n        required: true,\n        pattern:ValidationRegex.onlyCharacters.pattern,\n        patternHint:ValidationRegex.onlyCharacters.patternHint\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    regionHeadEcode: {\n      inputType: \"inputtext\",\n      label: \"Region Head Ecode\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    regionHeadEmail: {\n      inputType: \"inputtext\",\n      label: \"Region Head Email\",\n      value: null,\n      validation: {\n        required: true,\n        email:true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    fromDate: {\n      inputType: \"singleDatePicker\",\n      label: \"From Date\",\n      value: null,\n      min: new Date(new Date().setMonth(new Date().getMonth() - 3)), // 3 months before today\n      max: new Date(new Date().setMonth(new Date().getMonth() + 3)), // 3 months after today\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    }\n  };\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [stateMaster, setStateMaster] = useState<any>([]);\n  const [companyLocationMaster, setCompanyLocationMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [isEditCompanyLocation, setIsEditCompanyLocation] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [regionMaster, setRegionMaster] = useState<any>([]);\n\n\n  const [deactivatePopup, setDeactivatePopup] = useState(false);\n  const [rowData,setRowData] = useState<any>(null);\n  const [isDeactivateFormValid,setIsDeactivateFormValid] = useState(true);\n\n\n  const deactivateFormObject:any = {\n    deactivationDate: {\n      inputType: \"singleDatePicker\",\n      label: \"Select Deactivation Date\",\n      value: null,\n      min:new Date(new Date().getFullYear(), new Date().getMonth() - 6, new Date().getDate()),\n      max:new Date(new Date().getFullYear(), new Date().getMonth() + 6, new Date().getDate()),\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n  }\n\n  const [deactForm,setDeactivateForm] = useState<any>(_.cloneDeep(deactivateFormObject));\n\n\n  const [companyLocationFieldStructure, setCompanyLocationFieldStructure] =\n    useState<any>(_.cloneDeep(CompanyLocationFormFields));\n  const [CompanyLocationForm, setCompanyLocationForm] = useState<any>(\n    _.cloneDeep(companyLocationFieldStructure)\n  );\n  const [AdditionalDetailsForm, setAdditionalDetailsForm] = useState<any>({});\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const companyService = new CompanyMasterService();\n  const countryService = new CountryMasterService();\n  const stateService = new StateMasterService();\n  const regionService = new RegionMasterService();\n  const regionHeadMasterService = new RegionHeadMasterService();\n\n  const onDeactivate = (rowData:any) => {\n    console.log('here we are')\n    setRowData(rowData);\n    if(rowData.isActive == 1){\n    setDeactivatePopup(true);\n    }\n    else{\n      onDelete(rowData);\n    }\n\n  }\n\n\n  const CompanyLocationMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDeactivate(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Company\",\n      fieldName: \"companyName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"companyName\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.companyName}\n          >\n            {rowData.companyName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"countryName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"countryName\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.countryName}\n          >\n            {rowData.countryName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Region Names\",\n      fieldName: \"regionNames\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"regionNames\",\n      changeFilter: true,\n      placeholder: \"State\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.stateName}\n          >\n            {rowData.regionNames}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Region Head Name\",\n      fieldName: \"regionHeadName\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address}\n          >\n            {rowData.regionHeadName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Region Head Ecode\",\n      fieldName: \"regionHeadEcode\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address}\n          >\n            {rowData.regionHeadEcode}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Region Head Email\",\n      fieldName: \"regionHeadEmail\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address}\n          >\n            {rowData.regionHeadEmail}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"From Date\",\n      fieldName: \"fromDate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"fromDate\",\n      changeFilter: true,\n      placeholder: \"From Date\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.fromDate}\n          >\n            {/* {rowData.fromDate} */}\n            {rowData?.fromDate}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"To Date\",\n      fieldName: \"deactivationDate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"deactivationDate\",\n      changeFilter: true,\n      placeholder: \"To Date\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.fromDate}\n          >\n            {rowData.deactivationDate}\n           \n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getRegionHeadMaster();\n      const companies = await getCompanyMaster();\n      const countries = await getCountryMaster();\n      await formatCompanyDetails(companies);\n      await formatCountryDetails(countries);\n    };\n    if (storeFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [storeFormPopup, showConfirmDialogue]);\n\n  const getCompanyMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await companyService.getCompanyMaster();\n      const temp = response?.companies?.filter((item: any) => item?.isactive || item?.isActive)\n      setCompanyMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getRegionHeadMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await regionHeadMasterService.getRegionHeadMaster();\n      response?.regionHeads?.forEach((el: any) => {\n        el.fromDate = el?.fromDate ? moment(el?.fromDate).format(\"DD-MM-YYYY\") : null\n        el.deactivationDate = el?.deactivationDate ? moment(el?.deactivationDate).format(\"DD-MM-YYYY\") : null\n        el.updated_at = el?.updated_at ? moment(el?.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null\n       })\n      setCompanyLocationMaster(response?.regionHeads);\n      return response?.regionHeads;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      setCountryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  // const getStateMaster = async (countryId: any) => {\n  //   // setLoader(true);\n  //   try {\n  //     const response = await stateService.getStateMaster(countryId);\n  //     setStateMaster(response?.states);\n  //     await formatStateDetails(response?.states);\n  //     return response?.states;\n  //   } catch (error) {\n  //     console.error(error);\n  //   } finally {\n  //     //   setLoader(false);\n  //   }\n  // };\n\n  const getRegionMaster = async (countryId: any) => {\n    // setLoader(true);\n    try {\n      const response = await regionService.getRegionMaster(countryId);\n      const temp = response?.regions?.filter((item: any) => item?.isactive || item?.isActive)\n      setRegionMaster(temp);\n      await formatRegionDetails(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      //   setLoader(false);\n    }\n  };\n\n  const formatCompanyDetails = async (companies: any = companyMaster) => {\n    const companyList = companies.map((company: any) => company?.companyName);\n    companyLocationFieldStructure.companyName.options = companyList;\n    setCompanyLocationFieldStructure(companyLocationFieldStructure);\n  };\n\n  const formatCountryDetails = async (countries: any = countryMaster) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    companyLocationFieldStructure.country_name.options = countrylist;\n    setCompanyLocationFieldStructure(companyLocationFieldStructure);\n    await companyLocationFormHandler(companyLocationFieldStructure);\n  };\n\n  const formatStateDetails = async (states: any = stateMaster) => {\n    const statelist = states.map((state: any) => state.stateName);\n    companyLocationFieldStructure.state_name.options = statelist;\n    setCompanyLocationFieldStructure(companyLocationFieldStructure);\n  };\n\n  const formatRegionDetails = async (regions: any = regionMaster) => {\n    const regionlist = regions.map((region: any) => region.regionCode);\n    companyLocationFieldStructure.regionCode.options = regionlist;\n    setCompanyLocationFieldStructure(companyLocationFieldStructure);\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const companyLocationFormHandler = async (currentForm: FormType) => {\n    const form = _.cloneDeep(currentForm);\n    console.log('form------->', form);\n    if (form?.companyName?.value != CompanyLocationForm?.companyName?.value) {\n      const selectedCompany = companyMaster?.find(\n        (item: any) => item?.companyName == form?.companyName?.value\n      );\n      const selectedCountry = countryMaster?.find(\n        (item: any) => item?.name == selectedCompany?.countryName\n      );\n\n      if (selectedCountry) {\n        form.country_name.value = selectedCompany?.countryName;\n        const stateList = await getRegionMaster(selectedCountry?.id);\n\n        if (stateList) {\n          const regionNames = stateList?.map((state: any) => state.regionCode);\n          form.regionCode.options = regionNames || [];\n          // form.state_name.value = null;\n        }\n        // const addressDetails = JSON.parse(\n        //   selectedCountry?.addressAdditionalFields\n        // );\n        // const detailsForm = Object.keys(addressDetails)?.reduce(\n        //   (acc: any, item: any, index: any) => {\n        //     acc[index] = {\n        //       inputType: \"inputtext\",\n        //       label: addressDetails[item],\n        //       value: null,\n        //       validation: {\n        //         required: true,\n        //       },\n        //       fieldWidth: \"col-md-4\",\n        //     };\n        //     return acc;\n        //   },\n        //   {}\n        // );\n        // setAdditionalDetailsForm(detailsForm);\n      }\n    }\n    setCompanyLocationForm(form);\n  };\n\n  // const additionalDetailsFormHandler = async (form: FormType) => {\n  //   setAdditionalDetailsForm(form);\n  // };\n\n  const onUpdate = async (data: any) => {\n    setStateData(data);\n    const selectedCountry = countryMaster?.find(\n      (item: any) => item?.name == data?.countryName\n    );\n    const regionList = await getRegionMaster(selectedCountry?.id);\n    const regionNames = regionList?.map((region: any) => region.regionCode);\n    \n    updateCompanyLocationMaster(data, regionNames);\n    setFormPopup(true);\n    setIsEditCompanyLocation(true);\n  };\n\n  \n  const closeDeactivation = () => {\n    setRowData(null)\n    setDeactivatePopup(false);\n    setIsDeactivateFormValid(true);\n    setDeactivateForm(_.cloneDeep(deactivateFormObject));\n  }\n\n  const onPopUpClose = (e?: any) => {\n    closeDeactivation()\n    setShowConfirmDialogue(false);\n  };\n\n  const deactivationFormHandler = async(form:FormType) => {\n    setDeactivateForm(form);\n  }\n\n  const submitDeactivateFormHandler = (event: FormEvent) => {\n    event.preventDefault();\n    let validity = true;\n    const deactivateFolrmValidaity: boolean[] = [];\n    console.log('jjjjjjjjjjjj', deactForm);\n\n    _.each(deactForm, (item: any) => {\n      if (item?.validation?.required) {\n        deactivateFolrmValidaity.push(item.valid);\n        validity = validity && item.valid;\n      }\n    });\n\n    setIsDeactivateFormValid(validity);\n    if(validity){\n    onDelete(rowData)\n    }\n  }\n\n  \n\n\n  const formatDate = (dateString: any) => {\n    if(!dateString)return null;\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return \"\";\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}/${month}/${day}`;\n  };\n\n  const parseDateString = (dateString: any) => {\n    if (!dateString) return new Date();\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return new Date();\n    const year = date.getFullYear();\n    const month: any = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day: any = String(date.getDate()).padStart(2, \"0\");\n    return new Date(year, month - 1, day);\n  };\n\n  const updateCompanyLocationMaster = async (data: any, regionNames: any[]) => {\n    try {\n      companyLocationFieldStructure.companyName.value = data?.companyName;\n      companyLocationFieldStructure.companyName.disable = true;\n      companyLocationFieldStructure.country_name.value = data?.countryName;\n      companyLocationFieldStructure.regionCode.options = regionNames;\n      companyLocationFieldStructure.regionCode.value = data?.regionCodes.split(',');\n      companyLocationFieldStructure.regionHeadEcode.value = data?.regionHeadEcode;\n      companyLocationFieldStructure.regionHeadEmail.value = data?.regionHeadEmail;\n      companyLocationFieldStructure.regionHeadName.value = data?.regionHeadName;\n      companyLocationFieldStructure.fromDate.value = parseDateString(data?.fromDate);\n\n      setCompanyLocationForm(_.cloneDeep(companyLocationFieldStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const createNewCompanyLocation = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    console.log('oooooooooooo->>>>>>>>>', CompanyLocationForm);\n    \n    _.each(CompanyLocationForm, (item: any, key:string) => {\n      if (item?.validation?.required) {\n        // companyValidityFlag = companyValidityFlag && item.value;\n        if (key === 'regionCode' && (!item.value || item.value.length === 0)) {\n          companyValidityFlag = false;\n        } else {\n          companyValidityFlag = companyValidityFlag && !!item.value;\n        }\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    const companyId =\n      companyMaster.find(\n        (company: any) =>\n          company.companyName === CompanyLocationForm.companyName.value\n      )?.id ?? null;\n\n    const countryId =\n      countryMaster.find(\n        (country: any) =>\n          country.name === CompanyLocationForm.country_name.value\n      )?.id ?? null;\n\n    const regionId = regionMaster\n      .filter((region: any) => CompanyLocationForm?.regionCode?.value?.includes(region?.regionCode))\n      .map((region: any) => region?.id);\n\n    if (companyValidityFlag) {\n      const obj = {\n        companyId: companyId,\n        countryId: countryId,\n        regionId: regionId.toString(),\n        regionHeadName: CompanyLocationForm?.regionHeadName?.value,\n        regionHeadEcode: CompanyLocationForm?.regionHeadEcode?.value,\n        regionHeadEmail: CompanyLocationForm?.regionHeadEmail?.value,\n        fromDate: formatDate(CompanyLocationForm?.fromDate?.value),\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        regionHeadMasterService\n          .createRegionHeadMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, regionHeadId: stateData?.id };\n\n        regionHeadMasterService\n          .updateRegionHeadMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n        } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    regionHeadMasterService\n      .deactivateRegionHeadMaster({ ...patchData, loggedInUserId,deactivationDate:deactForm.deactivationDate.value })\n      .then((response) => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n       if(response.statusCode === 200){\n        closeDeactivation();\n        ToasterService.show(\n          `Region Head record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      }\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setIsEditCompanyLocation(false);\n    setStateData({});\n    setCompanyLocationFieldStructure(_.cloneDeep(CompanyLocationFormFields));\n    setCompanyLocationForm(_.cloneDeep(CompanyLocationFormFields));\n    // setAdditionalDetailsForm({});\n  };\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Region Head\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={companyLocationMaster}\n          column={CompanyLocationMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Region_Head\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n            loading={false}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditCompanyLocation ? 'Update' : 'Add New'} Region Head</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(CompanyLocationForm)}\n                formUpdateEvent={companyLocationFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewCompanyLocation}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n{deactivatePopup ? (\n      <div className=\"popup-overlay md-popup-overlay\">\n        <div style={{maxWidth:'360px'}} className=\"popup-body md-popup-body stretchLeft\">\n          <div className=\"popup-header\">\n            <div\n              className=\"popup-close\"\n              onClick={() => {\n   \n                closeDeactivation()\n              }}\n            >\n              <i className=\"pi pi-angle-left\"></i>\n              <h4 className=\"popup-heading\">Deactivate Region Head</h4>\n            </div>\n            <div\n              className=\"popup-right-close\"\n              onClick={() => {\n                closeDeactivation()\n            \n              }}\n            >\n              &times;\n            </div>\n          </div>\n          <div className=\"popup-content\"  style={{paddingBottom:'0rem',maxHeight:\"calc(100vh - 535px)\" }}>\n            <FormComponent\n              form={_.cloneDeep(deactForm)}\n              formUpdateEvent={deactivationFormHandler}\n              isFormValidFlag={isDeactivateFormValid}\n            ></FormComponent>\n          </div>\n\n          <div className=\"popup-lower-btn\">\n            <ButtonComponent\n              label=\"Submit\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              submitEvent={submitDeactivateFormHandler}\n            />\n          </div>\n        </div>\n      </div>\n    ) : null}\n\n    </>\n  );\n};\n\nexport default RegionHeadMaster;\n","import { APIURLS } from '../../../constants/ApiUrls';\nimport { AuthService } from '../../auth-service/auth.service';\nimport { HTTPService } from '../../http-service/http-service';\n\nexport default class FinancialYearMasterService {\n  /**\n   * Fetches financial year master data\n   * @returns Financial year master records\n   */\n  getFinancialYearMasterData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_FINANCIAL_YEAR_MASTER);\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  /**\n   * Creates or updates financial year master record\n   * @param formData Form data for financial year\n   * @returns Created or updated record\n   */\n  createFinancialYearMasterData = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id ? APIURLS.UPDATE_FINANCIAL_YEAR_MASTER : APIURLS.CREATE_FINANCIAL_YEAR_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  /**\n   * Activates or deactivates financial year master record\n   * @param data Activation or deactivation details\n   * @returns Response data\n   */\n  activateDeactivateFinancialYearMaster = async (data: any) => {\n    try {\n      const body = {\n        id: data.id,\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_FINANCIAL_YEAR_MASTER_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport moment from \"moment\";\n\nimport FinancialYearMasterService from \"../../services/masters/financial-year-master/financialYearMaster.service\";\nimport { UtilityService } from \"../../services/utility-service/utility.service\";\n\nconst FinancialYearMaster = () => {\n  const [yearsRange, setYearsRange] = useState<any>(['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028', '2029', '2030', '2031', '2032', '2033', '2034', '2035', '2036', '2037', '2038', '2039', '2040'])\n  const formObj = {\n    startYear: {\n      inputType: \"singleDatePicker\",\n      label: \"Start Date\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n\n    },\n    financialYearName: {\n      inputType: \"inputtext\",\n      label: \"Financial Year\",\n      value: null,\n      disable: true,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    // endYear: {\n    //     inputType: \"singleDatePicker\",\n    //   label: \"End Time\",\n    //   value: null,\n    //   validation: {\n    //     required: true,\n    //   },\n    //   fieldWidth: \"col-md-6\",\n\n    // },\n    // description: {\n    //   inputType: \"inputtext\",\n    //   label: \"Description\",\n    //   value: null,\n    //   validation: {\n    //     required: false,\n    //   },\n    //   fieldWidth: \"col-md-6\",\n    // },\n  };\n\n  const [financialYearMaster, setFinancialYearMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [rowData, setRowData] = useState<any>({});\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [formObjState, setFormObjState] = useState<any>(_.cloneDeep(formObj));\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n  const loggedInUserId = userInfo?.userId;\n\n  const financialYearService = new FinancialYearMasterService();\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const confirmDelete = (data: any) => {\n    setLoader(true);\n    financialYearService\n      .activateDeactivateFinancialYearMaster({ id: data.id, isActive: data.isActive == 0 ? 1 : 0, loggedInUserId: loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        getFinancialYearMaster();\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Financial year record ${data?.isActive ? \"deactivated\" : \"activated\"} successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const onDelete = (data: any) => {\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n        } this record?`,\n      acceptFunction: () => confirmDelete(data),\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const financialYearColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Financial Year\",\n      fieldName: \"financialYearName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"financialYearName\",\n      changeFilter: true,\n      placeholder: \"Financial Year Name\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`financialYearNameTooltip-${rowData.id}`}>\n            {rowData.financialYearName}\n          </span>\n          <Tooltip\n            target={`#financialYearNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n\n    {\n      label: \"Start Date\",\n      fieldName: \"startYear\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"startYear\",\n      changeFilter: true,\n      placeholder: \"Start Year\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData.startYear}\n          </span>\n          <Tooltip\n            target={`#descriptionTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"End Date\",\n      fieldName: \"endYear\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"endYear\",\n      changeFilter: true,\n      placeholder: \"End Year\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData.endYear}\n          </span>\n          <Tooltip\n            target={`#descriptionTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    getFinancialYearMaster();\n  }, []);\n\n  const getFinancialYearMaster = async () => {\n    try {\n      const response = await financialYearService.getFinancialYearMasterData();\n      if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n        closeFormPopup();\n        console.log(`this is financial response`,response.records)\n        response.records?.forEach((el: any) => {\n          el.startYear = el?.startYear ?  moment(el.startYear).format(\"DD-MM-YYYY\") : null;\n          el.endYear = el?.endYear ? moment(el.endYear)?.format('DD-MM-YYYY')  : null;\n          el.updated_at = el?.updated_at ? moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n      });\n        setFinancialYearMaster(response.records);\n      }\n    } catch (error: any) {\n      ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n    }\n  };\n\n  const openSaveForm = async () => {\n    setRowData(null);\n    setFormPopup(true);\n  };\n\n  const financialYearHandler = async (form: FormType) => {\n    console.log(\"fy form: \", form);\n\n    // Extract the startYear value from the form\n    const startYear: any = form?.startYear?.value;\n    if (startYear) {\n      const startYearDate = new Date(startYear); // Convert startYear to a Date object\n      const startYearFormatted = startYearDate.getFullYear(); // Extract the year from the start date\n      const endYearFormatted = startYearFormatted + 1; // Calculate the end year (next year)\n\n      // Construct the financial year name (e.g., FY 25-26)\n      const financialYearName = `FY ${startYearFormatted % 100}-${endYearFormatted % 100}`;\n\n      // Update the form with the calculated values\n      const updatedForm = {\n        ...form,\n        financialYearName: { ...form.financialYearName, value: financialYearName },\n      };\n\n      // Set the updated form state\n      setFormObjState(updatedForm);\n    }\n  };\n\n\n  const onUpdate = async (data: any) => {\n    setRowData(data);\n    updateFinancialYearMaster(data);\n    setFormPopup(true);\n  };\n  const getRequiredFormat = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-GB\", {\n      day: \"2-digit\",\n      month: \"short\",\n      year: \"numeric\"\n    })\n  }\n\n  const formatDate = (dateString: any) => {\n    console.log(\"dateString\",dateString)\n    if(!dateString)return null;\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}/${month}/${day}`;\n  };\n\n  const parseDateString = (dateString: any) => {\n    if (!dateString) return new Date();\n    const date: any = new Date(dateString);\n    if (isNaN(date)) return new Date();\n    const year = date.getFullYear();\n    const month: any = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day: any = String(date.getDate()).padStart(2, \"0\");\n    return new Date(year, month - 1, day);\n  };\n\n  const updateFinancialYearMaster = (data: any) => {\n    console.log('data there --->', data)\n    formObjState.financialYearName.value = data.financialYearName;\n    formObjState.startYear.value = parseDateString(data.startYear)\n    // formObjState.startYear.value = new Date(data.startYear)\n    // data.startYear.toString();\n    // formObjState.endYear.value = new Date(data.endYear);\n    // formObjState.description.value = data.description;\n  };\n\n  const createNewRecord = async (event: FormEvent) => {\n    event.preventDefault();\n    console.log('data there --->', formObjState)\n\n    // Extract startYear from the form state\n    const startYear = formObjState?.startYear?.value;\n\n    // Calculate financialYearName and format endYear if startYear is provided\n    let financialYearName = \"\";\n    let endYear:any = \"\";\n\n    if (startYear) {\n      const startYearDate = new Date(startYear); // Convert to Date object\n      const startYearFormatted = startYearDate.getFullYear(); // Extract year\n      const endYearFormatted = startYearFormatted + 1; // Calculate next year\n\n      // Construct financialYearName\n      // financialYearName = `FY ${startYearFormatted % 100}-${endYearFormatted % 100}`;\n\n      // Calculate endYear as 31/03 of the next year and format it\n      const calculatedEndYear = new Date(`03/31/${endYearFormatted}`);\n      endYear = formatDate(calculatedEndYear.toISOString());\n    }\n\n    const obj: any = {\n      financialYearName: formObjState?.financialYearName?.value,\n      startYear: formatDate(formObjState?.startYear?.value),\n      endYear: endYear,\n      //   description: formObjState?.description?.value,\n      isActive: 1,\n      updatedBy: loggedInUserId,\n    };\n    if (rowData && rowData?.id) {\n      obj[\"id\"] = rowData.id;\n    }\n    console.log('object----->', obj);\n    try {\n      const response =\n        await financialYearService.createFinancialYearMasterData(obj);\n      if (\n        response?.statusCode === HTTP_RESPONSE.CREATED ||\n        response?.statusCode === HTTP_RESPONSE.SUCCESS\n      ) {\n        closeFormPopup();\n        getFinancialYearMaster();\n        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n      }\n    } catch (error: any) {\n      ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n    }\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setFormObjState(_.cloneDeep(formObj));\n  };\n\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Financial Year\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={financialYearMaster}\n          column={financialYearColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Financial_Year\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={closeFormPopup}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">\n                  {rowData ? \"Update\" : \"Add New\"} Financial Year\n                </h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(formObjState)}\n                formUpdateEvent={financialYearHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewRecord}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default FinancialYearMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport moment from \"moment\";\n\nimport CurrencyMasterService from \"../../services/masters/currency-master/currency.service\";\n\nconst CurrencyMaster = () => {\n  const formObj = {\n    currencyCode: {\n      inputType: \"inputtext\",\n      label: \"Code\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    description: {\n      inputType: \"inputtext\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n  };\n\n  const [currencyMaster, setCurrencyMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [rowData, setRowData] = useState<any>({});\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [currencyHistoryPopup, setCurrencyHistoryPopup] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [formObjState, setFormObjState] = useState<any>(_.cloneDeep(formObj));\n\n  const [currencyHistoryData, setCurrencyHistoryData] = useState<any>([]);\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  const currencyService = new CurrencyMasterService();\n\n  const showThisCurrencyCodeHistory = async (currencyCode: any) => {\n    setCurrencyHistoryPopup(true);\n    try {\n      const response = await currencyService.getCurrencyHistoryData({\n        currencyCode: currencyCode,\n      });\n      setCurrencyHistoryData(Array.isArray(response) ? response : []);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const getExchangeRateValueWithOneUnit = (data: any) => {\n    return data.exchangeRate ? (\n      <span\n        // className=\"clickable-span\"\n        // onClick={() => showThisCurrencyCodeHistory(data.currencyCode)}\n      >\n        {(1 / data.exchangeRate).toFixed(4)}\n      </span>\n    ) : (\n      \"NA\"\n    );\n  };\n\n  const currencyMasterColumns = [\n    // {\n    //   label: \"Action\",\n    //   fieldName: \"action\",\n    //   textAlign: \"left\",\n    //   body: (rowData: any) => (\n    //     <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n    //       <span\n    //         className=\"pi pi-pencil\"\n    //         style={{ cursor: \"pointer\" }}\n    //         title=\"Update\"\n    //         onClick={() => onUpdate(rowData)}\n    //       ></span>\n    //       <span\n    //         className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n    //         style={{ cursor: \"pointer\" }}\n    //         title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n    //         onClick={() => onDelete(rowData)}\n    //       ></span>\n    //     </div>\n    //   ),\n    // },\n    {\n      label: \"Currency Code\",\n      fieldName: \"currencyCode\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"currencyCode\",\n      changeFilter: true,\n      placeholder: \"Currency Code\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.techName}\n          >\n            {rowData.currencyCode}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    // {\n    //   label: \"Description\",\n    //   fieldName: \"description\",\n    //   textAlign: \"left\",\n    //   sort: true,\n    //   filter: true,\n    //   fieldValue: \"description\",\n    //   changeFilter: true,\n    //   placeholder: \"Description\",\n    //   body: (rowData: any) => (\n    //     <div>\n    //       <span\n    //         id={`companyNameTooltip-${rowData.id}`}\n    //         // data-pr-tooltip={rowData.description}\n    //       >\n    //         {rowData.description}\n    //       </span>\n    //       <Tooltip\n    //         target={`#companyNameTooltip-${rowData.id}`}\n    //         position=\"top\"\n    //       />\n    //     </div>\n    //   ),\n    // },\n    {\n      label: \"Exchange Rate In INR\",\n      fieldName: \"exchangeRate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"exchangeRate\",\n      changeFilter: true,\n      placeholder: \"Exchange Rate In Rs\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.description}\n          >\n            {rowData?.exchangeRateInINR || 'NA'}\n            {/* {getExchangeRateValueWithOneUnit(rowData)} */}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n\n    {\n      label: \"Date\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span>\n          {rowData.updated_at}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n\n  const currencyHistoryColumns = [\n    {\n      label: \"Currency Code\",\n      fieldName: \"currencyCode\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"currencyCode\",\n      changeFilter: true,\n      placeholder: \"Currency Code\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.techName}\n          >\n            {rowData.currencyCode}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n\n    {\n      label: \"Exchange Rate In INR\",\n      fieldName: \"exchangeRate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"exchangeRate\",\n      changeFilter: true,\n      placeholder: \"Exchange Rate In Rs\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n            // data-pr-tooltip={rowData.description}\n          >\n            {rowData?.exchangeRateInINR || 'NA'}\n            {/* {getExchangeRateValueWithOneUnit(rowData)} */}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n\n    {\n      label: \"Date\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span>\n           {rowData.updated_at}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    getCurrencyMaster();\n  }, []);\n\n  const getCurrencyMaster = async () => {\n    try {\n      const response = await currencyService.getCurrencyMasterData();\n      if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n        closeFormPopup();\n        response.data.forEach((element: any) => {\n          element.exchangeRateInINR = (1 / element?.exchangeRate).toFixed(4);\n          element.updated_at = moment(rowData.updated_at).format('DD-MM-YYYY HH:mm:ss');\n        });\n        const formattedDataForExcel = response?.data.map(({ exchangeRate, ...rest }: any) => rest);\n        console.log('response.data', formattedDataForExcel);\n        setCurrencyMaster(formattedDataForExcel);\n      }\n    } catch (error: any) {\n      ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n    }\n  };\n\n  const openSaveForm = () => {\n    setRowData(null);\n    setFormPopup(true);\n  };\n\n  const currencyHandler = async (form: FormType) => {\n    const updatedForm = { ...form };\n    setFormObjState(updatedForm);\n  };\n\n  const onUpdate = async (data: any) => {\n    setRowData(data);\n    updateCurrencyMaster(data);\n    setFormPopup(true);\n  };\n\n  const onPopUpClose = () => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateCurrencyMaster = (data: any) => {\n    formObjState.currencyCode.value = data.currencyCode;\n    formObjState.description.value = data.description;\n  };\n\n  const createNewRecord = async (event: FormEvent) => {\n    event.preventDefault();\n    const obj: any = {\n      currencyCode: formObjState?.currencyCode?.value,\n      description: formObjState?.description?.value,\n      isActive: 1,\n      updatedBy: loggedInUserId,\n    };\n    if (rowData?.id) {\n      obj[\"id\"] = rowData.id;\n    }\n    try {\n      const response = await currencyService.createCurrencyMasterData(obj);\n      if (\n        response?.statusCode === HTTP_RESPONSE.CREATED ||\n        response?.statusCode === HTTP_RESPONSE.SUCCESS\n      ) {\n        closeFormPopup();\n        getCurrencyMaster();\n        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n      }\n    } catch (error: any) {\n      ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    setActionPopupToggle({\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        data?.isActive ? \"deactivate\" : \"activate\"\n      } this record?`,\n      acceptFunction: () => confirmDelete(data),\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = (data: any) => {\n    setLoader(true);\n    currencyService\n      .activateDeactivateCurrencyMaster({\n        id: data.id,\n        isActive: data.isActive === 0 ? 1 : 0,\n        loggedInUserId: loggedInUserId,\n      })\n      .then(() => {\n        setLoader(false);\n        getCurrencyMaster();\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Currency record ${\n            data.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch(() => {\n        setLoader(false);\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setFormObjState(_.cloneDeep(formObj));\n  };\n\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      {/* <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Currency\"\n          icon=\"pi pi-plus\"\n          submitEvent={openSaveForm}\n        />\n      </div> */}\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={currencyMaster}\n          column={currencyMasterColumns}\n          showGridlines\n          resizableColumns\n          rows={20}\n          paginator\n          sortable\n          headerRequired\n          downloadedfileName={\"Currency_Table\"}\n        />\n        {showConfirmDialogue && (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        )}\n      </p>\n      {storeFormPopup && (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body\">\n\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{rowData ? \"Update\" : \"Add New\"} Currency</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\">\n              <FormComponent\n                form={_.cloneDeep(formObjState)}\n                formUpdateEvent={currencyHandler}\n                isFormValidFlag={isFormValid}\n              />\n            </div>\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                submitEvent={createNewRecord}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {currencyHistoryPopup && (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body\">\n            <div className=\"popup-header\">\n              <h4 className=\"popup-heading\"> Exchange Rate History</h4>\n              <span\n                className=\"popup-close\"\n                onClick={() => setCurrencyHistoryPopup(false)}\n              >\n                &times;\n              </span>\n            </div>\n            <div className=\"popup-content\">\n              <p className=\"m-0\">\n                <DataTableBasicDemo\n                  data={currencyHistoryData}\n                  column={currencyHistoryColumns}\n                  showGridlines\n                  resizableColumns\n                  rows={20}\n                  paginator\n                  sortable\n                  headerRequired\n                />\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default CurrencyMaster;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\n\nimport {TaxMasterService} from \"../../services/masters/tax-service-master/taxMaster.service\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport moment from \"moment\";\n\nconst TaxMaster = () => {\n    const [countriesList,setCountriesList] = useState<any>([]);\n  const formObj = {\n    countryCode: {\n        inputType: \"singleSelect\",  \n        label: \"Select Country\",\n        options: countriesList,\n        value: null,\n        validation: {\n          required: true,\n        },\n        fieldWidth: \"col-md-6\",\n    },\n    taxType: {\n        inputType: \"singleSelect\",\n        label: \"Select Tax Type\",\n        options: ['Exempt','Export','Intra-State','Inter-State'],\n        value: null,\n        validation: {\n          required: true,\n        },\n        fieldWidth: \"col-md-6\",\n    },\n    taxFieldName: {\n      inputType: \"inputtext\",\n      label: \"Tax Field Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    taxPercentage: {\n      inputType: \"inputNumber\",\n      label: \"Tax Percentage\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      inputNumberOptions:{\n        mode:'decimal',\n        maxFractionDigits:2\n      },\n      fieldWidth: \"col-md-6\",\n    }\n  };\n\n  const [taxMaster, setTaxMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [rowData, setRowData] = useState<any>({});\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [formObjState, setFormObjState] = useState<any>(_.cloneDeep(formObj));\n \n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  const taxService = new TaxMasterService();\n  const countryService = new CountryMasterService()\n\n  const taxMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"countryName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"countryName\",\n      changeFilter: true,\n      placeholder: \"Country Name\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`countryCodeTooltip-${rowData.id}`}>\n            {rowData.countryName}\n          </span>\n          <Tooltip target={`#countryCodeTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Tax Type\",\n      fieldName: \"taxType\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"taxType\",\n      changeFilter: true,\n      placeholder: \"Tax Type\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`taxTypeTooltip-${rowData.id}`}>\n            {rowData.taxType}\n          </span>\n          <Tooltip target={`#taxTypeTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Tax Field Name\",\n      fieldName: \"taxFieldName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"taxFieldName\",\n      changeFilter: true,\n      placeholder: \"Tax Field Name\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`taxFieldNameTooltip-${rowData.id}`}>\n            {rowData.taxFieldName}\n          </span>\n          <Tooltip target={`#taxFieldNameTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Tax Percentage\",\n      fieldName: \"taxPercentage\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"taxPercentage\",\n      changeFilter: true,\n      placeholder: \"Tax Percentage\",\n      body: (rowData: any) => (\n        <div>\n          <span>{rowData.taxPercentage}%</span>\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n    {\n      label: \"Updated By\",\n      fieldName: \"updated_by\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_by\",\n      changeFilter: true,\n      placeholder: \"Updated By\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n            {rowData?.updated_by}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n    {\n      label: \"Updated At\",\n      fieldName: \"updated_at\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"updated_at\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span id={`descriptionTooltip-${rowData.id}`}>\n             {rowData.updated_at}\n          </span>\n          <Tooltip target={`#descriptionTooltip-${rowData.id}`} position=\"top\" />\n        </div>\n      ),\n    },\n  ];\n  const getCountryList = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      console.log('countriesList------>',response?.countries);\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      const countryList = await temp?.map((item:any) => {\n        return {\n           label:item.name,\n           value:item.id.toString()\n        }\n     });\n      setCountriesList(countryList);\n      formObj.countryCode.options = countryList\n      setFormObjState(_.cloneDeep(formObj))\n      return response?.countries;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  useEffect(() => {\n    getCountryList();\n    getTaxMaster();\n  }, []);\n\n  const getTaxMaster = async () => {\n    try {\n      const response = await taxService.getTax();\n      if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n        console.log('response data----> ',response.data);\n        response?.data?.forEach((el: any) => {\n          el.created_at = el.created_at ?  moment(el.created_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n          el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n          });\n        setTaxMaster(response.data);\n        closeFormPopup();\n      }\n    } catch (error: any) {\n      ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n    }\n  };\n\n  const openSaveForm = async () => {\n    setRowData(null);\n    setFormPopup(true);\n  };\n\n  const taxMasterHandler = async (form: FormType) => {\n    const updatedForm = { ...form };\n    setFormObjState(updatedForm);\n  };\n\n  const onUpdate = async (data: any) => {\n    setRowData(data);\n    updateTaxMaster(data);\n    setFormPopup(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateTaxMaster = (data: any) => {\n    formObjState.countryCode.options = countriesList;\n    formObjState.countryCode.value = data.countryCode;\n    formObjState.taxType.value = data.taxType;\n    formObjState.taxFieldName.value = data.taxFieldName;\n    formObjState.taxPercentage.value = Number(data.taxPercentage);\n  };\n\n  const createNewRecord = async (event: FormEvent) => {\n    event.preventDefault();\n    const obj: any = {\n      countryCode: formObjState?.countryCode?.value,\n      taxType: formObjState?.taxType?.value,\n      taxFieldName: formObjState?.taxFieldName?.value,\n      taxPercentage: formObjState?.taxPercentage?.value,\n      isActive: 1,\n      updatedBy: loggedInUserId,\n    };\n    if (rowData && rowData?.id) {\n      obj['id'] = rowData.id;\n    }\n    try {\n        console.log('we reached there',obj)\n      const response = await taxService.createTax(obj);\n      if (response?.statusCode === HTTP_RESPONSE.CREATED || response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n        closeFormPopup();\n        getTaxMaster();\n        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n      }\n    } catch (error: any) {\n      ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${\n        !(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n      } this record?`,\n      acceptFunction: () => confirmDelete(data),\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = (data: any) => {\n    setLoader(true);\n    taxService\n      .activatedeactivateTax({ id: data.id, isActive: data.isActive == 0 ? 1 : 0, loggedInUserId: loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        getTaxMaster();\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Tax record ${data?.isActive ? \"deactivated\" : \"activated\"} successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error:any) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setFormObjState(_.cloneDeep(formObj));\n  };\n\n  return loader ? (\n    <Loader />\n\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Tax\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={taxMaster}\n          column={taxMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Tax\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {storeFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header\">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{rowData?'Update':`Add New`} Tax</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(formObjState)}\n                formUpdateEvent={taxMasterHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createNewRecord}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default TaxMaster;\n","/* eslint-disable no-unexpected-multiline */\nimport React, { FormEvent, useEffect, useState } from \"react\";\nimport \"primeicons/primeicons.css\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\n\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { AccountsMasterService } from \"../../services/masters/accounts-master/accounts.service\";\nimport { ProductMasterService } from \"../../services/masters/product-master/product.service\";\nimport { ProjectMasterService } from \"../../services/masters/projects-master/project.service\";\nimport { TaxMasterService } from \"../../services/masters/tax-master/tax.service\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { ClientMasterService } from \"../../services/masters/client-master/client.service\";\n\nimport { TabView, TabPanel } from \"primereact/tabview\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\n\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Master.module.scss\";\nimport _ from \"lodash\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { AuthService } from \"../../services/auth-service/auth.service\";\nimport { FILE_TYPES } from \"../../enums/file-types.enum\";\nimport { ImageUrl } from \"../../utils/ImageUrl\";\nimport { Chip } from \"primereact/chip\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport Cookies from \"universal-cookie\";\nimport { TechnologyMasterService } from \"../../services/masters/technology-master/technology.service\";\nimport CountryMaster from \"./CountryMaster\";\nimport StateMaster from \"./StateMaster\";\nimport RegionMaster from \"./RegionMaster\";\nimport CompanyMaster from \"./CompanyMaster\";\nimport CompanyAddressMaster from \"./CompanyAddressMaster\";\nimport AccountTypeMaster from \"./AccountTypeMaster\";\nimport AccountMaster from \"./AccountMaster\";\nimport ProductionTypeMaster from \"./ProductionTypeMaster\";\nimport IndustryMaster from \"./IndustryMaster\";\nimport IndustryGroupMaster from \"./IndustryGroupMaster\";\nimport IndustryHeadMaster from \"./IndustryHeadMaster\";\nimport SalesMaster from \"./SalesManagerMaster\";\nimport AccountManagerMaster from \"./AccountManagerMaster\";\nimport TechGroupMaster from \"./TechGroupMaster\";\nimport TechSubGroupMaster from \"./TechSubGroupMaster\";\nimport TechMaster from \"./TechMaster\";\nimport OemMaster from \"./OemMaster\";\nimport PolestarProductSalesMaster from \"./PolestarProductSalesMaster\";\nimport ProjectServiceMaster from \"./ProjectServiceMaster\";\nimport RegionHeadMaster from \"./RegionHeadMaster\";\nimport FinancialYearMaster from \"./FinancialYearMaster\";\nimport CurrencyMaster from \"./CurrencyMaster\";\nimport TaxMaster from \"./TaxMaster\";\nimport ClientTypeMaster from \"./ClientTypeMaster\";\n\nconst Master: React.FC = () => {\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const [companyLocationMaster, setCompanyLocationMaster] = useState<any>([]);\n  const [currencyMaster, setCurrencyMaster] = useState([]);\n  const [industryMaster, setIndustryMaster] = useState<any>([]);\n  const [accountsMaster, setAccountsMaster] = useState<any>([]);\n  const [technologyMaster, setTechnologyMaster] = useState([]);\n  const [productsMaster, setProductsMaster] = useState([]);\n  const [projectsMaster, setProjectsMaster] = useState([]);\n  const [taxMaster, setTaxMaster] = useState([]);\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [stateMaster, setStateMaster] = useState<any>([]);\n  const [clientMaster, setClientMaster] = useState<any>([]);\n  const [clientBillToMaster, setClientBillToMaster] = useState<any>([]);\n  const [clientShipToMaster, setClientShipToMaster] = useState<any>([]);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeClientIndex, setActiveClientIndex] = useState(0);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [storeFormPopup, setFormPopup] = useState(false);\n  const [openClientForm, setOpenClientForm] = useState(false);\n  const [attachments, setAttachments]: any = useState([]);\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n\n  let patchData: any;\n\n  const companyService = new CompanyMasterService();\n  ;\n  const industryService = new IndustryMasterService();\n  const accountsService = new AccountsMasterService();\n  const technologyService = new TechnologyMasterService();\n  const productService = new ProductMasterService();\n  const projectService = new ProjectMasterService();\n  const taxService = new TaxMasterService();\n  const countryService = new CountryMasterService();\n  const stateService = new StateMasterService();\n  const clientService = new ClientMasterService();\n\n  useEffect(() => {\n    let companies: any = [];\n    let companyAddresses: any = [];\n    let countries: any = [];\n    let states: any = [];\n    let clients: any = [];\n    const fetchData = async () => {\n      switch (activeIndex) {\n        case 0:\n          countries = await getCountryMaster();\n          // companies = await getCompanyMaster();\n          break;\n        case 1:\n          companyAddresses = await getCompanyLocationMaster();\n          companies = await getCompanyMaster();\n          countries = await getCountryMaster();\n          states = await getStateMaster();\n          await formatCompanyDetails(companies);\n          await formatCountry_ClientDetails(countries);\n          await formatState_ClientDetails(states);\n          break;\n        case 3:\n          await getAccountsMaster();\n          companies = await getCompanyMaster();\n          await formatCompanyDetails(companies);\n          break;\n        case 4:\n          await getIndustryMaster();\n          break;\n        case 5:\n          await getTechnologyMaster();\n          break;\n        case 6:\n          await getProductMaster();\n          break;\n        case 7:\n          await getProjectMaster();\n          break;\n        case 8:\n          await getTaxMaster();\n          break;\n        case 9:\n          // countries = await getCountryMaster();\n          break;\n        case 10:\n          await getStateMaster();\n          countries = await getCountryMaster();\n          await formatCountry_StateDetails(countries);\n          break;\n        case 11:\n          setOpenClientForm(false);\n          setActiveClientIndex(0);\n          clients = await getClientMaster();\n          await getIndustryMaster();\n          await getAccountsMaster();\n          await formatIndustry_ClientDetails();\n          await formatAccount_ClientDetails();\n          break;\n        case 12:\n          await getClientBillToMaster();\n          clients = await getClientMaster();\n          countries = await getCountryMaster();\n          states = await getStateMaster();\n          await formatCountry_ClientDetails(countries);\n          await formatState_ClientDetails(states);\n          await formatClient_BillDetails(clients);\n          break;\n        case 13:\n          await getClientShipToMaster();\n          clients = await getClientMaster();\n          countries = await getCountryMaster();\n          states = await getStateMaster();\n          await formatCountry_Client_ShipDetails(countries);\n          await formatState_Client_ShipDetails(states);\n          await formatClient_ShipDetails(clients);\n          break;\n        default:\n          break;\n      }\n    };\n    if (\n      storeFormPopup == false &&\n      openClientForm == false &&\n      showConfirmDialogue == false\n    ) {\n      // fetchData();\n    }\n  }, [activeIndex, storeFormPopup, openClientForm, showConfirmDialogue]);\n\n  const onTabChange = (e: any) => {\n    setActiveIndex(e.index);\n  };\n\n  const onClientTabChange = (e: any) => {\n    setActiveClientIndex(e.index);\n  };\n\n  const formatCompanyDetails = async (companies: any = companyMaster) => {\n    const companyList = companies?.map((company: any) => company?.companyName);\n    switch (activeIndex) {\n      case 1:\n        companyLocationFieldsStructure.companyName.options = companyList;\n        await setCompanyLocationFieldsStructure(companyLocationFieldsStructure);\n        await companyLocationFormHandler(companyLocationFieldsStructure);\n        break;\n      case 3:\n        accountFieldsStructure.companyName.options = companyList;\n        await setAccountFieldsStructure(accountFieldsStructure);\n        await accountsFormHandler(accountFieldsStructure);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const formatIndustry_ClientDetails = async () => {\n    const industryList = industryMaster.map(\n      (industry: any) => industry?.industryName\n    );\n    clientFieldsStructure.industry_name.options = industryList;\n    await setClientFieldsStructure(clientFieldsStructure);\n    await clientFormHandler(clientFieldsStructure);\n  };\n\n  const formatCountry_ClientDetails = async (\n    countries: any = countryMaster\n  ) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    switch (activeIndex) {\n      case 1:\n        companyLocationFieldsStructure.country_name.options = countrylist;\n        await setCompanyLocationFieldsStructure(companyLocationFieldsStructure);\n        await companyLocationFormHandler(companyLocationFieldsStructure);\n        break;\n      case 12:\n        clientBillFieldsStructure.country_name.options = countrylist;\n        await setClientBillFieldsStructure(clientBillFieldsStructure);\n        await clientBillFormHandler(clientBillFieldsStructure);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const formatState_ClientDetails = async (states: any = stateMaster) => {\n    const statelist = states.map((state: any) => state.state_name);\n    switch (activeIndex) {\n      case 1:\n        companyLocationFieldsStructure.state_name.options = statelist;\n        await setCompanyLocationFieldsStructure(companyLocationFieldsStructure);\n        await companyLocationFormHandler(companyLocationFieldsStructure);\n        break;\n      case 12:\n        clientBillFieldsStructure.state_name.options = statelist;\n        await setClientBillFieldsStructure(clientBillFieldsStructure);\n        await clientBillFormHandler(clientBillFieldsStructure);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const formatCountry_StateDetails = async (countries: any = countryMaster) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    statesFieldsStructure.country_name.options = countrylist;\n    await setStatesFieldsStructure(statesFieldsStructure);\n    await statesFormHandler(statesFieldsStructure);\n  };\n\n  const formatAccount_ClientDetails = async () => {\n    const accountslist = accountsMaster.map(\n      (account: any) => account?.account_no\n    );\n\n    clientFieldsStructure.polestar_bank_account_number.options = accountslist;\n    await setClientFieldsStructure(clientFieldsStructure);\n    await clientFormHandler(clientFieldsStructure);\n  };\n\n  const formatCountry_Client_ShipDetails = async (\n    countries: any = countryMaster\n  ) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    clientShipFieldsStructure.client_ship_to_country_name.options = countrylist;\n    await setClientShipFieldsStructure(clientShipFieldsStructure);\n    await clientShipFormHandler(clientShipFieldsStructure);\n  };\n\n  const formatState_Client_ShipDetails = async (states: any = stateMaster) => {\n    const statelist = states.map((state: any) => state?.state_name);\n    clientShipFieldsStructure.client_ship_to_state_name.options = statelist;\n    await setClientShipFieldsStructure(clientShipFieldsStructure);\n    await clientShipFormHandler(clientShipFieldsStructure);\n  };\n\n  const formatClient_BillDetails = async (clients: any = clientMaster) => {\n    const clientlist = clients.map((client: any) => client?.name);\n\n    clientBillFieldsStructure.client_name.options = clientlist;\n    await setClientBillFieldsStructure(clientBillFieldsStructure);\n    await clientBillFormHandler(clientBillFieldsStructure);\n  };\n\n  const formatClient_ShipDetails = async (clients: any = clientMaster) => {\n    const clientlist = clients.map((client: any) => client?.name);\n\n    clientShipFieldsStructure.client_name.options = clientlist;\n    await setClientShipFieldsStructure(clientShipFieldsStructure);\n    await clientShipFormHandler(clientShipFieldsStructure);\n  };\n\n  const getCompanyMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await companyService.getCompanyMaster();\n      setCompanyMaster(response?.companies);\n      return response?.companies;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getCompanyLocationMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await companyService.getCompanyLocationMaster();\n      setCompanyLocationMaster(response?.addresses);\n      return response?.addresses;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n\n\n  const getIndustryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await industryService.getIndustryMaster();\n      setIndustryMaster(response?.industries);\n      return response?.industries;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getAccountsMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await accountsService.getAccountsMaster();\n      setAccountsMaster(response?.accounts);\n      return response?.accounts;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getTechnologyMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await technologyService.getTechnologyMaster();\n      setTechnologyMaster(response?.technologies);\n      return response?.technologies;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getProductMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await productService.getProductMaster();\n      setProductsMaster(response?.products);\n      return response?.products;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getProjectMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await projectService.getProjectMaster();\n      setProjectsMaster(response?.projects);\n      return response?.projects;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getTaxMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await taxService.getTaxMaster();\n      setTaxMaster(response?.taxes);\n      return response?.taxes;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      setCountryMaster(response?.countries);\n      return response?.countries;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getStateMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await stateService.getStateMaster();\n      setStateMaster(response?.states);\n      return response?.states;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getClientMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientService.getClientMaster();\n      setClientMaster(response?.clients);\n      return response?.clients;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getClientBillToMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientService.getClientBillToMaster();\n      setClientBillToMaster(response?.billingInfo);\n      return response?.billingInfo;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const getClientShipToMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientService.getClientShipToMaster();\n      setClientShipToMaster(response?.shippingInfo);\n      return response?.shippingInfo;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const deactivateCompanyMaster = () => {\n    setLoader(true);\n    companyService\n      .deactivateCompanyMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Company record ${patchData?.isactive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateCompanyLocationMaster = () => {\n    setLoader(true);\n    companyService\n      .deactivateCompanyLocationMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Company record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n\n\n  const deactivateIndustryMaster = () => {\n    setLoader(true);\n    industryService\n      .deactivateIndustryMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Industry record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateAccountsMaster = () => {\n    setLoader(true);\n    accountsService\n      .deactivateAccountsMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Accounts record ${patchData?.is_active ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error: any) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateTechnologyMaster = () => {\n    setLoader(true);\n    technologyService\n      .deactivateTechnologyMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Technology record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateProductMaster = () => {\n    setLoader(true);\n    productService\n      .deactivateProductMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Product record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateProjectMaster = () => {\n    setLoader(true);\n    projectService\n      .deactivateProjectMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Project record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateTaxMaster = () => {\n    setLoader(true);\n    taxService\n      .deactivateTaxMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Tax record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateCountryMaster = () => {\n    setLoader(true);\n    countryService\n      .deactivateCountryMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `States record ${patchData?.isactive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateStatesMaster = () => {\n    setLoader(true);\n    stateService\n      .deactivateStateMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `States record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateClientMaster = () => {\n    setLoader(true);\n    clientService\n      .deactivateClientMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Client record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateClientBillToMaster = () => {\n    setLoader(true);\n    clientService\n      .deactivateClientBillToMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Client Bill To record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const deactivateClientShipToMaster = () => {\n    setLoader(true);\n    clientService\n      .deactivateClientShipToMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Client Ship To record ${patchData?.isactive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const openSaveForm = async () => {\n    setFormPopup(true);\n  };\n\n  const openClientFormButton = async () => {\n    await formatIndustry_ClientDetails();\n    await formatAccount_ClientDetails();\n    setOpenClientForm(true);\n  };\n\n  const closeClientForm = () => {\n    setOpenClientForm(false);\n  };\n\n  // const selectAttachment = (files: any) => {\n  //   console.log(\"files\", files);\n\n  //   setAttachments([]);\n  //   if (files && files[0]) {\n  //     _.each(files, (eventList) => {\n  //       if (\n  //         eventList.name\n  //           .split(\".\")\n  //           [eventList.name.split(\".\").length - 1].toLowerCase() ===\n  //         FILE_TYPES.PDF\n  //       ) {\n  //         if (eventList.size > 10485760) {\n  //           return ToasterService.show(\n  //             \"file size is too large, allowed maximum size is 10 MB.\",\n  //             \"error\"\n  //           );\n  //         } else {\n  //           const fileWithUrl = {\n  //             ...eventList,\n  //             preview: URL.createObjectURL(eventList),\n  //           };\n  //           setAttachments((prevVals: any) => [...prevVals, fileWithUrl]);\n  //         }\n  //       } else {\n  //         ToasterService.show(\n  //           `Invalid file format. You can only attach PNG files here!`,\n  //           \"error\"\n  //         );\n  //         eventList = null;\n  //       }\n  //     });\n  //   }\n  // };\n  const selectAttachment = (files: any) => {\n    setAttachments([]);\n    if (files && files[0]) {\n      _.each(files, (eventList) => {\n        if (\n          eventList.name\n            .split(\".\")\n          [eventList.name.split(\".\").length - 1].toLowerCase() ===\n          FILE_TYPES.PNG\n        ) {\n          if (eventList.size > 10485760) {\n            return ToasterService.show(\n              \"file size is too large, allowed maximum size is 10 MB.\",\n              \"error\"\n            );\n          } else {\n            setAttachments((prevVals: any) => [...prevVals, eventList]);\n          }\n        } else {\n          ToasterService.show(\n            `Invalid file format you can only attach the pdf here!`,\n            \"error\"\n          );\n          eventList = null;\n        }\n      });\n    }\n  };\n\n  const removeFileHandler = () => {\n    setAttachments([]);\n  };\n\n  const confirmDelete = () => {\n    switch (activeIndex) {\n      case 0:\n        // deactivateCompanyMaster();\n        deactivateCountryMaster();\n        break;\n      case 1:\n        deactivateCompanyLocationMaster();\n        break;\n\n      case 3:\n        deactivateAccountsMaster();\n        break;\n      case 4:\n        deactivateIndustryMaster();\n        break;\n      case 5:\n        deactivateTechnologyMaster();\n        break;\n      case 6:\n        deactivateProductMaster();\n        break;\n      case 7:\n        deactivateProjectMaster();\n        break;\n      case 8:\n        deactivateTaxMaster();\n        break;\n      case 10:\n        deactivateStatesMaster();\n        break;\n      case 11:\n        deactivateClientMaster();\n        break;\n      case 12:\n        deactivateClientBillToMaster();\n        break;\n      case 13:\n        deactivateClientShipToMaster();\n        break;\n      default:\n        break;\n    }\n  };\n\n  const CurrencyMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Currency\",\n      fieldName: \"currencyName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"currencyName\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.currencyName}\n          >\n            {rowData.currencyName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"currencyDescription\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"currencyDescription\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.currencyDescription}\n          >\n            {rowData.currencyDescription}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n  const TechnologyMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Technology\",\n      fieldName: \"technologyName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"technologyName\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.productName}\n          >\n            {rowData.technologyName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"description\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"description\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.productDescription}\n          >\n            {rowData.description}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n  const ProductsMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Product\",\n      fieldName: \"productName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"productName\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.productName}\n          >\n            {rowData.productName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"productDescription\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"productDescription\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.productDescription}\n          >\n            {rowData.productDescription}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n  const ProjectsMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Project\",\n      fieldName: \"projectName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"projectName\",\n      changeFilter: true,\n      placeholder: \"Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.projectName}\n          >\n            {rowData.projectName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Description\",\n      fieldName: \"projectDescription\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"projectDescription\",\n      changeFilter: true,\n      placeholder: \"Description\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.projectDescription}\n          >\n            {rowData.projectDescription}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n  const TaxMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Type\",\n      fieldName: \"taxType\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"taxType\",\n      changeFilter: true,\n      placeholder: \"Type\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.taxType}\n          >\n            {rowData.taxType}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Percentage\",\n      fieldName: \"taxPercentage\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"taxPercentage\",\n      changeFilter: true,\n      placeholder: \"Percentage\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.taxPercentage}\n          >\n            {rowData.taxPercentage}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Effective Date\",\n      fieldName: \"effectiveDate\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"effectiveDate\",\n      changeFilter: true,\n      placeholder: \"Effective Date\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.effectiveDate}\n          >\n            {rowData.effectiveDate}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n  const ClientMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Industry\",\n      fieldName: \"industry_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"industry_name\",\n      changeFilter: true,\n      placeholder: \"Industry\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.industry_name}\n          >\n            {rowData.industry_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Client Name\",\n      fieldName: \"name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"name\",\n      changeFilter: true,\n      placeholder: \"Client Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.name}\n          >\n            {rowData.name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Alias Name\",\n      fieldName: \"alias\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"alias\",\n      changeFilter: true,\n      placeholder: \"Alias Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.alias}\n          >\n            {rowData.alias}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"PAN Number\",\n      fieldName: \"pan_no\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"pan_no\",\n      changeFilter: true,\n      placeholder: \"PAN Number\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.pan_no}\n          >\n            {rowData.pan_no}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Polestar Bank Account Number\",\n      fieldName: \"polestar_bank_account_number\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"polestar_bank_account_number\",\n      changeFilter: true,\n      placeholder: \"Polestar Bank Account Number\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.polestar_bank_account_number}\n          >\n            {rowData.polestar_bank_account_number}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Salutation\",\n      fieldName: \"salutation\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"salutation\",\n      changeFilter: true,\n      placeholder: \"Salutation\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.salutation}\n          >\n            {rowData.salutation}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"First Name\",\n      fieldName: \"first_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"first_name\",\n      changeFilter: true,\n      placeholder: \"First Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.first_name}\n          >\n            {rowData.first_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Last Name\",\n      fieldName: \"last_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"last_name\",\n      changeFilter: true,\n      placeholder: \"Last Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.last_name}\n          >\n            {rowData.last_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Email\",\n      fieldName: \"email\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"email\",\n      changeFilter: true,\n      placeholder: \"Email\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.email}\n          >\n            {rowData.email}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Phone Number\",\n      fieldName: \"phone\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"phone\",\n      changeFilter: true,\n      placeholder: \"Phone Number\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.phone}\n          >\n            {rowData.phone}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"MSA Flag\",\n      fieldName: \"msa_flag\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"msa_flag\",\n      changeFilter: true,\n      placeholder: \"MSA Flag\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.msa_flag}\n          >\n            <span>{rowData?.msa_flag === 1 ? \"Yes\" : \"No\"}</span>\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"GSTN Number\",\n      fieldName: \"gstn\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"gstn\",\n      changeFilter: true,\n      placeholder: \"GSTN Number\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.gstn}\n          >\n            {rowData.gstn}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"MSA Start Date\",\n      fieldName: \"msa_start_date\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"msa_start_date\",\n      changeFilter: true,\n      placeholder: \"MSA Start Date\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.msa_start_date}\n          >\n            {rowData.msa_start_date}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"MSA End Date\",\n      fieldName: \"msa_end_date\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"msa_end_date\",\n      changeFilter: true,\n      placeholder: \"MSA End Date\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.msa_end_date}\n          >\n            {rowData.msa_end_date}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Non Solicitation Clause\",\n      fieldName: \"non_solicitation_clause\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"non_solicitation_clause\",\n      changeFilter: true,\n      placeholder: \"Non Solicitation Clause\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.non_solicitation_clause}\n          >\n            <span>{rowData?.non_solicitation_clause === 1 ? \"Yes\" : \"No\"}</span>\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Use Logo Permission\",\n      fieldName: \"use_logo_permission\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"use_logo_permission\",\n      changeFilter: true,\n      placeholder: \"Use Logo Permission\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.use_logo_permission}\n          >\n            <span>{rowData?.use_logo_permission === 1 ? \"Yes\" : \"No\"}</span>\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Client Category\",\n      fieldName: \"client_category\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"client_category\",\n      changeFilter: true,\n      placeholder: \"Client Category\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.client_category}\n          >\n            {rowData.client_category}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Servicing Type\",\n      fieldName: \"servicing_type\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"servicing_type\",\n      changeFilter: true,\n      placeholder: \"Servicing Type\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.servicing_type}\n          >\n            {rowData.servicing_type}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Missing MSA Deadline\",\n      fieldName: \"missing_msa_deadline\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"missing_msa_deadline\",\n      changeFilter: true,\n      placeholder: \"Missing MSA Deadline\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.missing_msa_deadline}\n          >\n            <span>{rowData?.missing_msa_deadline === 1 ? \"Yes\" : \"No\"}</span>\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"MSA Missing?\",\n      fieldName: \"is_msa_missing\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"is_msa_missing\",\n      changeFilter: true,\n      placeholder: \"MSA Missing?\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.is_msa_missing}\n          >\n            <span>{rowData?.is_msa_missing === 1 ? \"Yes\" : \"No\"}</span>\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive === 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive === 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n  const ClientBillToMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Client\",\n      fieldName: \"client_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"client_name\",\n      changeFilter: true,\n      placeholder: \"Client\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.client_name}\n          >\n            {rowData.client_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 1\",\n      fieldName: \"address1\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"address1\",\n      changeFilter: true,\n      placeholder: \"Address 1\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address1}\n          >\n            {rowData.address1}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 2\",\n      fieldName: \"address2\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"address2\",\n      changeFilter: true,\n      placeholder: \"Address 2\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address2}\n          >\n            {rowData.address2}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 3\",\n      fieldName: \"address3\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"address3\",\n      changeFilter: true,\n      placeholder: \"Address 3\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address3}\n          >\n            {rowData.address3}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"PIN Number\",\n      fieldName: \"pin\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"pin\",\n      changeFilter: true,\n      placeholder: \"PIN Number\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.pin}\n          >\n            {rowData.pin}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"country_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"country_name\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.country_name}\n          >\n            {rowData.country_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"State\",\n      fieldName: \"state_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"state_name\",\n      changeFilter: true,\n      placeholder: \"State\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.state_name}\n          >\n            {rowData.state_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive === 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive === 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n  const ClientShipToMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n      frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Client\",\n      fieldName: \"client_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"client_name\",\n      changeFilter: true,\n      placeholder: \"Client\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.client_name}\n          >\n            {rowData.client_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Shipping Address 1\",\n      fieldName: \"client_ship_to_address1\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"client_ship_to_address1\",\n      changeFilter: true,\n      placeholder: \"Shipping Address 1\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.client_ship_to_address1}\n          >\n            {rowData.client_ship_to_address1}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Shipping Address 2\",\n      fieldName: \"client_ship_to_address2\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"client_ship_to_address2\",\n      changeFilter: true,\n      placeholder: \"Shipping Address 2\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.client_ship_to_address2}\n          >\n            {rowData.client_ship_to_address2}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Shipping Address 3\",\n      fieldName: \"client_ship_to_address3\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"client_ship_to_address3\",\n      changeFilter: true,\n      placeholder: \"Shipping Address 3\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.client_ship_to_address3}\n          >\n            {rowData.client_ship_to_address3}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Shipping PIN\",\n      fieldName: \"client_ship_to_pin\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"client_ship_to_pin\",\n      changeFilter: true,\n      placeholder: \"Shipping PIN\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.client_ship_to_pin}\n          >\n            {rowData.client_ship_to_pin}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Shipping Country\",\n      fieldName: \"country_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"country_name\",\n      changeFilter: true,\n      placeholder: \"Shipping Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.country_name}\n          >\n            {rowData.country_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Shipping State\",\n      fieldName: \"state_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"state_name\",\n      changeFilter: true,\n      placeholder: \"Shipping State\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.state_name}\n          >\n            {rowData.state_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Shipping GSTN Number\",\n      fieldName: \"client_ship_to_gstn\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"client_ship_to_gstn\",\n      changeFilter: true,\n      placeholder: \"Shipping GSTN Number\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.client_ship_to_gstn}\n          >\n            {rowData.client_ship_to_gstn}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive === 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive === 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n          ? \"activate\"\n          : \"deactivate\"\n        } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const [stateData, setStateData] = useState<any>();\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    switch (activeIndex) {\n      case 0:\n        updateCountryMaster(data);\n        // updateCompanyMaster(data);\n        break;\n      case 1:\n        updateCompanyLocationMaster(data);\n        break;\n      case 2:\n        updateCurrencyMaster(data);\n        break;\n      case 3:\n        updateAccountsMaster(data);\n        break;\n      case 4:\n        updateIndustryMaster(data);\n        break;\n      case 5:\n        updateTechnologyMaster(data);\n        break;\n      case 6:\n        updateProductMaster(data);\n        break;\n      case 7:\n        updateProjectMaster(data);\n        break;\n      case 8:\n        updateTaxMaster(data);\n        break;\n      case 10:\n        updateStateMaster(data);\n        break;\n      case 11:\n        updateClientMaster(data);\n        setOpenClientForm(true);\n        break;\n      case 12:\n        updateClientBillToMaster(data);\n        break;\n      case 13:\n        updateClientShipToMaster(data);\n        break;\n      default:\n        break;\n    }\n    setFormPopup(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const CountryFormFields = {\n    name: {\n      inputType: \"inputtext\",\n      label: \"Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    code: {\n      inputType: \"inputtext\",\n      label: \"Code\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    language: {\n      inputType: \"inputtext\",\n      label: \"Language\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    phoneCode: {\n      inputType: \"inputtext\",\n      label: \"Phone Code\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n  };\n\n  const updateCountryMaster = (data: any) => {\n    try {\n      CountryFormFields.name.value = data?.name;\n      CountryFormFields.code.value = data?.code;\n      CountryFormFields.language.value = data?.language;\n      CountryFormFields.phoneCode.value = data?.phoneCode;\n      setCountryForm(_.cloneDeep(CountryFormFields));\n      const addressDetails = JSON.parse(data?.addressAdditionalFields);\n      const addressForm = Object.keys(addressDetails)?.reduce(\n        (acc: any, item: any, index: any) => {\n          acc[index] = {\n            inputType: \"inputtext\",\n            label: `Option ${index + 1}`,\n            value: addressDetails[`key${index + 1}`],\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4\",\n          };\n          return acc;\n        },\n        {}\n      );\n      setCountryAddressForm(addressForm);\n      const bankDetails = JSON.parse(data?.bankAccAdditionalFields);\n      const bankForm = Object.keys(bankDetails)?.reduce(\n        (acc: any, item: any, index: any) => {\n          acc[index] = {\n            inputType: \"inputtext\",\n            label: `Option ${index + 1}`,\n            value: bankDetails[`key${index + 1}`],\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4\",\n          };\n          return acc;\n        },\n        {}\n      );\n      setCountryBankForm(bankForm);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const CompanyFormFields = {\n    companyName: {\n      inputType: \"inputtext\",\n      label: \"Company Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    Website: {\n      inputType: \"inputtext\",\n      label: \"Website\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    CINNO: {\n      inputType: \"inputtext\",\n      label: \"CINNO\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    IECode: {\n      inputType: \"inputtext\",\n      label: \"IECode\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    Email: {\n      inputType: \"inputtext\",\n      label: \"Email\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    description: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n\n  const updateCompanyMaster = (data: any) => {\n    try {\n      CompanyFormFields.companyName.value = data?.companyName;\n      CompanyFormFields.Website.value = data?.Website;\n      CompanyFormFields.CINNO.value = data?.CINNO;\n      CompanyFormFields.IECode.value = data?.IECode;\n      CompanyFormFields.Email.value = data?.Email;\n      CompanyFormFields.description.value =\n        data?.description != null ? data?.description : \"\";\n      setCompanyForm(_.cloneDeep(CompanyFormFields));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const CompanyLocationFormFields = {\n    companyName: {\n      inputType: \"singleSelect\",\n      label: \"Company\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    state_name: {\n      inputType: \"singleSelect\",\n      label: \"State\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    address1: {\n      inputType: \"inputtext\",\n      label: \"Address 1\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    address2: {\n      inputType: \"inputtext\",\n      label: \"Address 2\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    address3: {\n      inputType: \"inputtext\",\n      label: \"Address 3\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    pin: {\n      inputType: \"inputtext\",\n      label: \"PIN\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    PAN: {\n      inputType: \"inputtext\",\n      label: \"PAN\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    GST: {\n      inputType: \"inputtext\",\n      label: \"GST\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n  };\n\n  const updateCompanyLocationMaster = async (data: any) => {\n    try {\n      companyLocationFieldsStructure.companyName.value = data?.company;\n      companyLocationFieldsStructure.country_name.value = data?.country;\n      companyLocationFieldsStructure.state_name.value = data?.state;\n      companyLocationFieldsStructure.address1.value = data?.address1;\n      companyLocationFieldsStructure.address2.value = data?.address2;\n      companyLocationFieldsStructure.address3.value = data?.address3;\n      companyLocationFieldsStructure.pin.value = data?.pin;\n      companyLocationFieldsStructure.PAN.value = data?.PAN;\n      companyLocationFieldsStructure.GST.value = data?.GST;\n      setCompanyLocationForm(_.cloneDeep(companyLocationFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const [\n    companyLocationFieldsStructure,\n    setCompanyLocationFieldsStructure,\n  ]: any = useState(CompanyLocationFormFields);\n\n  const CurrencyFormFields = {\n    currencyName: {\n      inputType: \"inputtext\",\n      label: \"Currency Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n    currencyDescription: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      row: 3,\n    },\n  };\n\n  const updateCurrencyMaster = (data: any) => {\n    try {\n      CurrencyFormFields.currencyName.value = data?.currencyName;\n      CurrencyFormFields.currencyDescription.value = data?.currencyDescription;\n      setCurrencyForm(_.cloneDeep(CurrencyFormFields));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const AccountsFormFields = {\n    companyName: {\n      inputType: \"singleSelect\",\n      label: \"Company\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    account_type: {\n      inputType: \"singleSelect\",\n      label: \"Bank Account Type\",\n      options: [\"Savings\", \"Current\"],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    bank_name: {\n      inputType: \"inputtext\",\n      label: \"Bank Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    bank_address: {\n      inputType: \"inputtext\",\n      label: \"Bank Address\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    account_no: {\n      inputType: \"inputtext\",\n      label: \"Account Number\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    ifsc_code: {\n      inputType: \"inputtext\",\n      label: \"IFSC Code\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    micr_code: {\n      inputType: \"inputtext\",\n      label: \"MICR Code\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n      rows: 3,\n    },\n    routing_no_swift_code: {\n      inputType: \"inputtext\",\n      label: \"Swift Code\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n      rows: 3,\n    },\n    bank_code: {\n      inputType: \"inputtext\",\n      label: \"Bank Code\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n      rows: 3,\n    },\n  };\n\n  const updateAccountsMaster = (data: any) => {\n    try {\n      accountFieldsStructure.companyName.value = data?.company_name;\n      accountFieldsStructure.account_type.value = data?.account_type;\n      accountFieldsStructure.bank_name.value = data?.bank_name;\n      accountFieldsStructure.bank_address.value = data?.bank_address;\n      accountFieldsStructure.account_no.value = data?.account_no;\n      accountFieldsStructure.account_no.value = data?.account_no;\n      accountFieldsStructure.ifsc_code.value = data?.ifsc_code;\n      accountFieldsStructure.micr_code.value = data?.micr_code;\n      accountFieldsStructure.routing_no_swift_code.value =\n        data?.routing_no_swift_code;\n      accountFieldsStructure.bank_code.value = data?.bank_code;\n      accountFieldsStructure.bank_code.value = data?.bank_code;\n      setAccountForm(_.cloneDeep(accountFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const [accountFieldsStructure, setAccountFieldsStructure]: any =\n    useState(AccountsFormFields);\n\n  const IndustryFormFields = {\n    industryName: {\n      inputType: \"inputtext\",\n      label: \"Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    industryHead: {\n      inputType: \"inputtext\",\n      label: \"Industry Head\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    description: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n\n  const updateIndustryMaster = (data: any) => {\n    try {\n      IndustryFormFields.industryName.value = data?.industryName;\n      IndustryFormFields.description.value = data?.description;\n      IndustryFormFields.industryHead.value = data?.industryHead;\n      setIndustryForm(_.cloneDeep(IndustryFormFields));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const TechnologyFormFields = {\n    technologyName: {\n      inputType: \"inputtext\",\n      label: \"Technology Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n    description: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n\n  const updateTechnologyMaster = (data: any) => {\n    try {\n      TechnologyFormFields.technologyName.value = data?.technologyName;\n      TechnologyFormFields.description.value = data?.description;\n      setTechnologyForm(_.cloneDeep(TechnologyFormFields));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const ProductFormFields = {\n    productName: {\n      inputType: \"inputtext\",\n      label: \"Product Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n    productDescription: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n\n  const updateProductMaster = (data: any) => {\n    try {\n      ProductFormFields.productName.value = data?.productName;\n      ProductFormFields.productDescription.value = data?.productDescription;\n      setProductForm(_.cloneDeep(ProductFormFields));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const ProjectFormFields = {\n    projectName: {\n      inputType: \"inputtext\",\n      label: \"Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n    projectDescription: {\n      inputType: \"inputtextarea\",\n      label: \"Description\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-12\",\n      rows: 3,\n    },\n  };\n\n  const updateProjectMaster = (data: any) => {\n    try {\n      ProjectFormFields.projectName.value = data?.projectName;\n      ProjectFormFields.projectDescription.value = data?.projectDescription;\n      setProjectForm(_.cloneDeep(ProjectFormFields));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const TaxFormFields: any = {\n    taxType: {\n      inputType: \"inputtext\",\n      label: \"Type\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n    taxPercentage: {\n      inputType: \"inputtext\",\n      label: \"Percentage\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n    effectiveDate: {\n      inputType: \"singleDatePicker\",\n      label: \"Effective Date\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-12\",\n    },\n  };\n\n  const updateTaxMaster = async (data: any) => {\n    try {\n      TaxFormFields.taxType.value = data?.taxType;\n      TaxFormFields.taxPercentage.value = data?.taxPercentage;\n      TaxFormFields.effectiveDate.value = parseDateString(data?.effectiveDate);\n\n      setTaxForm(_.cloneDeep(TaxFormFields));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const StatesFormFields = {\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    state_name: {\n      inputType: \"inputtext\",\n      label: \"State\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    state_code: {\n      inputType: \"inputtext\",\n      label: \"State Code\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n  };\n\n  const updateStateMaster = (data: any) => {\n    try {\n      statesFieldsStructure.country_name.value = data?.country_name;\n      statesFieldsStructure.state_name.value = data?.state_name;\n      statesFieldsStructure.state_code.value = data?.state_code;\n\n      setStatesForm(_.cloneDeep(statesFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const [statesFieldsStructure, setStatesFieldsStructure]: any =\n    useState(StatesFormFields);\n\n  const ClientFormFields = {\n    industry_name: {\n      inputType: \"singleSelect\",\n      label: \"Industry\",\n      options: [],\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    name: {\n      inputType: \"inputtext\",\n      label: \"Client Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    alias: {\n      inputType: \"inputtext\",\n      label: \"Alias\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    pan_no: {\n      inputType: \"inputtext\",\n      label: \"PAN Number\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    polestar_bank_account_number: {\n      inputType: \"singleSelect\",\n      label: \"Polestar Bank Account Number\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    gstn: {\n      inputType: \"inputtext\",\n      label: \"GSTN\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    servicing_type: {\n      inputType: \"singleSelect\",\n      label: \"Servicing Type\",\n      options: [\"Domestic\", \"International\"],\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    client_category: {\n      inputType: \"inputtext\",\n      label: \"Client Category\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    msa_start_date: {\n      inputType: \"singleDatePicker\",\n      label: \"MSA Start Date\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4\",\n    },\n    msa_end_date: {\n      inputType: \"singleDatePicker\",\n      label: \"MSA End Date\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-4 col-offset-right-8\",\n    },\n    is_msa_missing: {\n      inputType: \"inputSwitch\",\n      label: \"MSA Missing?\",\n      value: false,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-3  mg-12-t\",\n    },\n    msa_flag: {\n      inputType: \"inputSwitch\",\n      label: \"Is NDA\",\n      value: false,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-3  mg-12-t\",\n    },\n    non_solicitation_clause: {\n      inputType: \"inputSwitch\",\n      label: \"Non Solicitation Clause\",\n      value: false,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-3  mg-12-t\",\n    },\n    use_logo_permission: {\n      inputType: \"inputSwitch\",\n      label: \"Use Logo Permission\",\n      value: false,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-3  mg-12-t\",\n    },\n  };\n\n  const updateClientMaster = async (data: any) => {\n    try {\n      clientFieldsStructure.industry_name.value = data?.industry_name;\n      clientFieldsStructure.name.value = data?.name;\n      clientFieldsStructure.alias.value = data?.alias;\n      clientFieldsStructure.pan_no.value = data?.pan_no;\n      clientFieldsStructure.servicing_type.value = data?.servicing_type;\n      clientFieldsStructure.client_category.value = data?.client_category;\n      clientFieldsStructure.msa_start_date.value = parseDateString(\n        data?.msa_start_date\n      );\n      clientFieldsStructure.msa_end_date.value = parseDateString(\n        data?.msa_end_date\n      );\n      clientFieldsStructure.is_msa_missing.value = data?.is_msa_missing\n        ? true\n        : false;\n      clientFieldsStructure.msa_flag.value = data?.msa_flag ? true : false;\n      clientFieldsStructure.non_solicitation_clause.value =\n        data?.non_solicitation_clause ? true : false;\n      clientFieldsStructure.use_logo_permission.value =\n        data?.use_logo_permission ? true : false;\n      clientFieldsStructure.polestar_bank_account_number.value =\n        data?.polestar_bank_account_number;\n      clientFieldsStructure.gstn.value = data?.gstn;\n\n      ClientContactFormFields.salutation.value = data?.salutation;\n      ClientContactFormFields.first_name.value = data?.first_name;\n      ClientContactFormFields.last_name.value = data?.last_name;\n      ClientContactFormFields.email.value = data?.email;\n      ClientContactFormFields.phone.value = data?.phone;\n\n      setClientFieldsStructure(_.cloneDeep(clientFieldsStructure));\n      setClientContactForm(_.cloneDeep(ClientContactFormFields));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const [clientFieldsStructure, setClientFieldsStructure]: any =\n    useState(ClientFormFields);\n\n  const ClientBillFormFields = {\n    client_name: {\n      inputType: \"singleSelect\",\n      label: \"Client\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    address1: {\n      inputType: \"inputtext\",\n      label: \"Address 1\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    address2: {\n      inputType: \"inputtext\",\n      label: \"Address 2\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    address3: {\n      inputType: \"inputtext\",\n      label: \"Address 3\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    pin: {\n      inputType: \"inputtext\",\n      label: \"PIN\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    state_name: {\n      inputType: \"singleSelect\",\n      label: \"State\",\n      options: [],\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n  };\n\n  const [clientBillFieldsStructure, setClientBillFieldsStructure]: any =\n    useState(ClientBillFormFields);\n\n  const ClientShipFormFields = {\n    client_name: {\n      inputType: \"singleSelect\",\n      label: \"Client\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    client_ship_to_address1: {\n      inputType: \"inputtext\",\n      label: \"Address 1\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    client_ship_to_address2: {\n      inputType: \"inputtext\",\n      label: \"Address 2\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    client_ship_to_address3: {\n      inputType: \"inputtext\",\n      label: \"Address 3\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    client_ship_to_pin: {\n      inputType: \"inputtext\",\n      label: \"PIN\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    client_ship_to_country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    client_ship_to_state_name: {\n      inputType: \"singleSelect\",\n      label: \"State\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    client_ship_to_gstn: {\n      inputType: \"inputtext\",\n      label: \"GSTN\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n  };\n\n  const [clientShipFieldsStructure, setClientShipFieldsStructure]: any =\n    useState(ClientShipFormFields);\n\n  const ClientContactFormFields = {\n    salutation: {\n      inputType: \"singleSelect\",\n      label: \"Salutation\",\n      options: [\"Mr.\", \"Mrs.\", \"M/S\"],\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    first_name: {\n      inputType: \"inputtext\",\n      label: \"First Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    last_name: {\n      inputType: \"inputtext\",\n      label: \"Last Name\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    email: {\n      inputType: \"inputtext\",\n      label: \"Email\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    phone: {\n      inputType: \"inputtext\",\n      label: \"Phone Number\",\n      options: [],\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n  };\n\n  const updateClientBillToMaster = async (data: any) => {\n    try {\n      clientBillFieldsStructure.client_name.value = data?.client_name;\n      clientBillFieldsStructure.address1.value = data?.address1;\n      clientBillFieldsStructure.address2.value = data?.address2;\n      clientBillFieldsStructure.address3.value = data?.address3;\n      clientBillFieldsStructure.pin.value = data?.pin;\n      clientBillFieldsStructure.country_name.value = data?.country_name;\n      clientBillFieldsStructure.state_name.value = data?.state_name;\n\n      setClientBillFieldsStructure(_.cloneDeep(clientBillFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const updateClientShipToMaster = async (data: any) => {\n    try {\n      clientShipFieldsStructure.client_name.value = data?.client_name;\n      clientShipFieldsStructure.client_ship_to_address1.value =\n        data?.client_ship_to_address1;\n      clientShipFieldsStructure.client_ship_to_address2.value =\n        data?.client_ship_to_address2;\n      clientShipFieldsStructure.client_ship_to_address3.value =\n        data?.client_ship_to_address3;\n      clientShipFieldsStructure.client_ship_to_pin.value =\n        data?.client_ship_to_pin;\n      clientShipFieldsStructure.client_ship_to_country_name.value =\n        data?.country_name;\n      clientShipFieldsStructure.client_ship_to_state_name.value =\n        data?.state_name;\n      clientShipFieldsStructure.client_ship_to_gstn.value =\n        data?.client_ship_to_gstn;\n\n      setClientShipFieldsStructure(_.cloneDeep(clientShipFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const parseDateString = (dateString: any) => {\n    const [year, month, day] = dateString.split(\"/\").map(Number);\n    return new Date(year, month - 1, day);\n  };\n\n  const formatDate = (dateString: any) => {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}/${month}/${day}`;\n  };\n\n  const [CountryForm, setCountryForm] = useState<any>(\n    _.cloneDeep(CountryFormFields)\n  );\n\n  const [CountryAddressForm, setCountryAddressForm] = useState<any>({});\n\n  const [CountryBankForm, setCountryBankForm] = useState<any>({});\n\n  const [CompanyForm, setCompanyForm] = useState<any>(\n    _.cloneDeep(CompanyFormFields)\n  );\n\n  const [CompanyLocationForm, setCompanyLocationForm] = useState<any>(\n    _.cloneDeep(companyLocationFieldsStructure)\n  );\n\n  const [CurrencyForm, setCurrencyForm] = useState<any>(\n    _.cloneDeep(CurrencyFormFields)\n  );\n\n  const [AccountForm, setAccountForm] = useState<any>(\n    _.cloneDeep(accountFieldsStructure)\n  );\n\n  const [IndustryForm, setIndustryForm] = useState<any>(\n    _.cloneDeep(IndustryFormFields)\n  );\n\n  const [TechnologyForm, setTechnologyForm] = useState<any>(\n    _.cloneDeep(TechnologyFormFields)\n  );\n\n  const [ProductForm, setProductForm] = useState<any>(\n    _.cloneDeep(ProductFormFields)\n  );\n\n  const [ProjectForm, setProjectForm] = useState<any>(\n    _.cloneDeep(ProjectFormFields)\n  );\n\n  const [TaxForm, setTaxForm] = useState<any>(_.cloneDeep(TaxFormFields));\n\n  const [StatesForm, setStatesForm] = useState<any>(\n    _.cloneDeep(statesFieldsStructure)\n  );\n\n  const [ClientForm, setClientForm] = useState<any>(\n    _.cloneDeep(clientFieldsStructure)\n  );\n\n  const [ClientBillForm, setClientBillForm] = useState<any>(\n    _.cloneDeep(clientBillFieldsStructure)\n  );\n\n  const [ClientShipForm, setClientShipForm] = useState<any>(\n    _.cloneDeep(clientShipFieldsStructure)\n  );\n\n  const [ClientContactForm, setClientContactForm] = useState<any>(\n    _.cloneDeep(ClientContactFormFields)\n  );\n\n  const closeFormPopup = () => {\n    setFormPopup(false);\n    setStateData({});\n    setOpenClientForm(false);\n    setCountryForm(_.cloneDeep(CountryFormFields));\n    setCountryAddressForm({});\n    setCountryBankForm({});\n    setCompanyForm(_.cloneDeep(CompanyFormFields));\n    setCompanyLocationFieldsStructure(_.cloneDeep(CompanyLocationFormFields));\n    setCompanyLocationForm(_.cloneDeep(CompanyLocationFormFields));\n    setCurrencyForm(_.cloneDeep(CurrencyFormFields));\n    setAccountFieldsStructure(_.cloneDeep(AccountsFormFields));\n    setAccountForm(_.cloneDeep(AccountsFormFields));\n    setIndustryForm(_.cloneDeep(IndustryFormFields));\n    setTechnologyForm(_.cloneDeep(TechnologyFormFields));\n    setProductForm(_.cloneDeep(ProductFormFields));\n    setProjectForm(_.cloneDeep(ProjectFormFields));\n    setTaxForm(_.cloneDeep(TaxFormFields));\n    setStatesFieldsStructure(_.cloneDeep(StatesFormFields));\n    setStatesForm(_.cloneDeep(StatesFormFields));\n    setClientFieldsStructure(_.cloneDeep(ClientFormFields));\n    setClientForm(_.cloneDeep(ClientFormFields));\n    setClientBillFieldsStructure(_.cloneDeep(ClientBillFormFields));\n    setClientBillForm(_.cloneDeep(ClientBillFormFields));\n    setClientShipFieldsStructure(_.cloneDeep(ClientShipFormFields));\n    setClientShipForm(_.cloneDeep(ClientShipFormFields));\n    setClientContactForm(_.cloneDeep(ClientContactFormFields));\n    // setCountryForm(_.cloneDeep(CountryFormFields))\n    setAttachments([]);\n  };\n\n  const companyLocationFormHandler = async (form: FormType) => {\n    setCompanyLocationForm(form);\n  };\n\n  const currencyFormHandler = async (form: FormType) => {\n    setCurrencyForm(form);\n  };\n\n  const accountsFormHandler = async (form: FormType) => {\n    setAccountForm(form);\n  };\n\n  const productFormHandler = async (form: FormType) => {\n    setProductForm(form);\n  };\n\n  const projectFormHandler = async (form: FormType) => {\n    setProjectForm(form);\n  };\n\n  const taxFormHandler = async (form: FormType) => {\n    setTaxForm(form);\n  };\n\n  const statesFormHandler = async (form: FormType) => {\n    setStatesForm(form);\n  };\n\n  const clientFormHandler = async (form: FormType) => {\n    setClientForm(form);\n  };\n\n  const clientBillFormHandler = async (form: FormType) => {\n    setClientBillForm(form);\n  };\n\n  const clientShipFormHandler = async (form: FormType) => {\n    setClientShipForm(form);\n  };\n\n  const clientContactFormHandler = async (form: FormType) => {\n    setClientContactForm(form);\n  };\n\n\n\n  const createNewProduct = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(ProductForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const obj = {\n        productName: ProductForm?.productName?.value,\n        productDescription: ProductForm?.productDescription?.value,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        productService\n          .createProductMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode == HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, productId: stateData?.id };\n\n        productService\n          .updateProductMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode == HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const createNewProject = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(ProjectForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const obj = {\n        projectName: ProjectForm?.projectName?.value,\n        projectDescription: ProjectForm?.projectDescription?.value,\n        isActive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        projectService\n          .createProjectMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode == HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, projectId: stateData?.id };\n\n        projectService\n          .updateProjectMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode == HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const createNewTax = async (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(TaxForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const obj = {\n        taxType: TaxForm?.taxType?.value,\n        taxPercentage: TaxForm?.taxPercentage?.value,\n        effectiveDate: formatDate(TaxForm?.effectiveDate?.value),\n        isactive: 1,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        taxService\n          .createTaxMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode == HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, taxId: stateData?.id };\n\n        taxService\n          .updateTaxMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode == HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const createClientForm = async (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(ClientContactForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const industry_id =\n        industryMaster.find(\n          (industry: any) =>\n            industry.industryName === ClientForm.industry_name.value\n        )?.id ?? null;\n\n      const polestar_bank_account_id =\n        accountsMaster.find(\n          (account: any) =>\n            account.account_no === ClientForm.polestar_bank_account_number.value\n        )?.account_id ?? null;\n\n      const formData: any = new FormData();\n\n      const obj = {\n        industry_id: industry_id,\n        name: ClientForm?.name?.value,\n        alias: ClientForm?.alias?.value,\n        pan_no: ClientForm?.pan_no?.value,\n        polestar_bank_account_id: polestar_bank_account_id,\n        gstn: ClientForm?.gstn?.value,\n        salutation: ClientContactForm?.salutation?.value,\n        first_name: ClientContactForm?.first_name?.value,\n        last_name: ClientContactForm?.last_name?.value,\n        email: ClientContactForm?.email?.value,\n        phone: ClientContactForm?.phone?.value,\n        msa_flag: ClientForm?.msa_flag?.value ? 1 : 0,\n        is_performa: ClientForm?.is_performa?.value ? 1 : 0,\n        msa_start_date: formatDate(ClientForm?.msa_start_date?.value),\n        msa_end_date: formatDate(ClientForm?.msa_end_date?.value),\n        non_solicitation_clause: ClientForm?.non_solicitation_clause?.value\n          ? 1\n          : 0,\n        use_logo_permission: ClientForm?.use_logo_permission?.value ? 1 : 0,\n        client_category: ClientForm?.client_category?.value,\n        servicing_type: ClientForm?.servicing_type?.value,\n        missing_msa_deadline: ClientForm?.missing_msa_deadline?.value ? 1 : 0,\n        is_msa_missing: ClientForm?.is_msa_missing?.value ? 1 : 0,\n        updated_by: loggedInUserId,\n      };\n\n      Object.entries(obj).forEach(([key, value]: any) => {\n        formData.set(key, value);\n      });\n\n      if (attachments?.length) {\n        formData.set(\"file\", attachments[0]);\n      }\n\n      if (!stateData?.id) {\n        clientService\n          .createClientMaster(formData)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const formData: any = new FormData();\n\n        const updatePayload = { ...obj, id: stateData?.id };\n\n        Object.entries(updatePayload).forEach(([key, value]: any) => {\n          formData.set(key, value);\n        });\n\n        if (attachments?.length) {\n          formData.set(\"file\", attachments[0]);\n        }\n\n        clientService\n          .updateClientMaster(formData)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const createClientBillInfo = async (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(ClientBillForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const clientId =\n        clientMaster.find(\n          (client: any) => client.name === ClientBillForm.client_name.value\n        )?.id ?? null;\n\n      const countryId =\n        countryMaster.find(\n          (country: any) => country.name === ClientBillForm.country_name.value\n        )?.id ?? null;\n\n      const stateId =\n        stateMaster.find(\n          (state: any) => state.state_name === ClientBillForm.state_name.value\n        )?.state_id ?? null;\n\n      const obj = {\n        clientId: clientId,\n        address1: ClientBillForm?.address1?.value,\n        address2: ClientBillForm?.address2?.value,\n        address3: ClientBillForm?.address3?.value,\n        pin: ClientBillForm?.pin?.value,\n        countryId: countryId,\n        stateId: stateId,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        clientService\n          .createClientBillToMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, billingId: stateData?.id };\n\n        clientService\n          .updateClientBillToMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const createClientShipInfo = async (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(ClientShipForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const clientId =\n        clientMaster.find(\n          (client: any) => client.name === ClientShipForm.client_name.value\n        )?.id ?? null;\n\n      const countryId =\n        countryMaster.find(\n          (country: any) =>\n            country.name === ClientShipForm.client_ship_to_country_name.value\n        )?.id ?? null;\n\n      const stateId =\n        stateMaster.find(\n          (state: any) =>\n            state.state_name === ClientShipForm.client_ship_to_state_name.value\n        )?.state_id ?? null;\n\n      const obj = {\n        clientId: clientId,\n        address1: ClientShipForm?.client_ship_to_address1?.value,\n        address2: ClientShipForm?.client_ship_to_address2?.value,\n        address3: ClientShipForm?.client_ship_to_address3?.value,\n        pin: ClientShipForm?.client_ship_to_pin?.value,\n        gstn: ClientShipForm?.client_ship_to_gstn?.value,\n        countryId: countryId,\n        stateId: stateId,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        clientService\n          .createClientShipToMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, shippingId: stateData?.id };\n\n        clientService\n          .updateClientShipToMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const moveNextClientForm = (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(ClientForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n    if (companyValidityFlag) {\n      setActiveClientIndex(activeClientIndex + 1);\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  const backToPreviousForm = () => {\n    setActiveClientIndex(activeClientIndex - 1);\n  };\n\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <TabView\n        activeIndex={activeIndex}\n        onTabChange={onTabChange}\n        className={classes[\"main-tab-screen\"]}\n        panelContainerClassName={classes[\"panel-tabs\"]}\n      >\n        <TabPanel header=\"Financial Year\">\n          <FinancialYearMaster />\n        </TabPanel>\n        <TabPanel header=\"Currency\">\n          <CurrencyMaster />\n        </TabPanel>\n        {/* <TabPanel header=\"Client Type\">\n          <ClientTypeMaster />\n        </TabPanel> */}\n        <TabPanel header=\"Country\">\n          <CountryMaster />\n        </TabPanel>\n        <TabPanel header=\"States\">\n          <StateMaster />\n        </TabPanel>\n        <TabPanel header=\"Regions\">\n          <RegionMaster />\n        </TabPanel>\n        <TabPanel header=\"Company\">\n          <CompanyMaster />\n        </TabPanel>\n        <TabPanel header=\"Company Location\">\n          <CompanyAddressMaster />\n        </TabPanel>\n        <TabPanel header=\"Region Head\">\n          <RegionHeadMaster />\n        </TabPanel>\n        {/* <TabPanel header=\"Bank Account Type\">\n          <AccountTypeMaster />\n        </TabPanel> */}\n        <TabPanel header=\"Bank Accounts\">\n          <AccountMaster />\n        </TabPanel>\n        <TabPanel header=\"Sub-Industry\">\n          <IndustryMaster />\n        </TabPanel>\n        <TabPanel header=\"Industry Group\">\n          <IndustryGroupMaster />\n        </TabPanel>\n        <TabPanel header=\"Industry Head\">\n          <IndustryHeadMaster />\n        </TabPanel>\n        <TabPanel header=\"Sales Manager\">\n          <SalesMaster />\n        </TabPanel>\n        <TabPanel header=\"Account Manager\">\n          <AccountManagerMaster />\n        </TabPanel>\n        <TabPanel header=\"Technology Group\">\n          <TechGroupMaster />\n        </TabPanel>\n        <TabPanel header=\"Technology Sub-Group\">\n          <TechSubGroupMaster />\n        </TabPanel>\n        <TabPanel header=\"Technology\">\n          <TechMaster />\n        </TabPanel>\n        <TabPanel header=\"OEM\">\n          <OemMaster />\n        </TabPanel>\n        <TabPanel header=\"Polestar Product Sales\">\n          <PolestarProductSalesMaster />\n        </TabPanel>\n        <TabPanel header=\"Project/Service Master \">\n          <ProjectServiceMaster />\n        </TabPanel>\n        <TabPanel header=\"Tax\">\n          <TaxMaster />\n        </TabPanel>\n\n        {/* <TabPanel header=\"Product\">\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"end\",\n              marginBottom: \"0.5em\",\n            }}\n          >\n            <ButtonComponent\n              label=\"Add New Product\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              submitEvent={openSaveForm}\n            />\n          </div>\n          <p className=\"m-0\">\n            <DataTableBasicDemo\n              data={productsMaster}\n              column={ProductsMasterColumns}\n              showGridlines={true}\n              resizableColumns={true}\n              rows={20}\n              paginator={true}\n              sortable={true}\n              headerRequired={true}\n              scrollHeight={\"calc(100vh - 200px)\"}\n              downloadedfileName={\"Brandwise_Denomination_table\"}\n            />\n            {showConfirmDialogue ? (\n              <ConfirmDialogue\n                actionPopupToggle={actionPopupToggle}\n                onCloseFunction={onPopUpClose}\n              />\n            ) : null}\n          </p>\n          {storeFormPopup ? (\n            <div className=\"popup-overlay md-popup-overlay\">\n              <div className=\"popup-body md-popup-body stretchLeft\">\n                <div className=\"popup-header \">\n                  <div\n                    className=\"popup-close\"\n                    onClick={() => {\n                      closeFormPopup();\n                    }}\n                  >\n                    <i className=\"pi pi-angle-left\"></i>\n                    <h4 className=\"popup-heading\">Add New Product</h4>\n                  </div>\n                  <div\n                    className=\"popup-right-close\"\n                    onClick={() => {\n                      closeFormPopup();\n                    }}\n                  >\n                    &times;\n                  </div>\n                </div>\n                <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n                  <FormComponent\n                    form={_.cloneDeep(ProductForm)}\n                    formUpdateEvent={productFormHandler}\n                    isFormValidFlag={isFormValid}\n                  ></FormComponent>\n                </div>\n\n                <div className=\"popup-lower-btn\">\n                  <ButtonComponent\n                    label=\"Submit\"\n                    icon=\"pi pi-check\"\n                    iconPos=\"right\"\n                    submitEvent={createNewProduct}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </TabPanel>\n        <TabPanel header=\"Project\">\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"end\",\n              marginBottom: \"0.5em\",\n            }}\n          >\n            <ButtonComponent\n              label=\"Add New Project\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              submitEvent={openSaveForm}\n            />\n          </div>\n          <p className=\"m-0\">\n            <DataTableBasicDemo\n              data={projectsMaster}\n              column={ProjectsMasterColumns}\n              showGridlines={true}\n              resizableColumns={true}\n              rows={20}\n              paginator={true}\n              sortable={true}\n              headerRequired={true}\n              scrollHeight={\"calc(100vh - 200px)\"}\n              downloadedfileName={\"Brandwise_Denomination_table\"}\n            />\n            {showConfirmDialogue ? (\n              <ConfirmDialogue\n                actionPopupToggle={actionPopupToggle}\n                onCloseFunction={onPopUpClose}\n              />\n            ) : null}\n          </p>\n          {storeFormPopup ? (\n            <div className=\"popup-overlay md-popup-overlay\">\n              <div className=\"popup-body md-popup-body stretchLeft\">\n                <div className=\"popup-header \">\n                  <div\n                    className=\"popup-close\"\n                    onClick={() => {\n                      closeFormPopup();\n                    }}\n                  >\n                    <i className=\"pi pi-angle-left\"></i>\n                    <h4 className=\"popup-heading\">Add New Project</h4>\n                  </div>\n                  <div\n                    className=\"popup-right-close\"\n                    onClick={() => {\n                      closeFormPopup();\n                    }}\n                  >\n                    &times;\n                  </div>\n                </div>\n                <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n                  <FormComponent\n                    form={_.cloneDeep(ProjectForm)}\n                    formUpdateEvent={projectFormHandler}\n                    isFormValidFlag={isFormValid}\n                  ></FormComponent>\n                </div>\n\n                <div className=\"popup-lower-btn\">\n                  <ButtonComponent\n                    label=\"Submit\"\n                    icon=\"pi pi-check\"\n                    iconPos=\"right\"\n                    submitEvent={createNewProject}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </TabPanel>\n        <TabPanel header=\"Tax\">\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"end\",\n              marginBottom: \"0.5em\",\n            }}\n          >\n            <ButtonComponent\n              label=\"Add New Tax\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              submitEvent={openSaveForm}\n            />\n          </div>\n          <p className=\"m-0\">\n            <DataTableBasicDemo\n              data={taxMaster}\n              column={TaxMasterColumns}\n              showGridlines={true}\n              resizableColumns={true}\n              rows={20}\n              paginator={true}\n              sortable={true}\n              headerRequired={true}\n              scrollHeight={\"calc(100vh - 200px)\"}\n              downloadedfileName={\"Brandwise_Denomination_table\"}\n            />\n            {showConfirmDialogue ? (\n              <ConfirmDialogue\n                actionPopupToggle={actionPopupToggle}\n                onCloseFunction={onPopUpClose}\n              />\n            ) : null}\n          </p>\n          {storeFormPopup ? (\n            <div className=\"popup-overlay md-popup-overlay\">\n              <div className=\"popup-body md-popup-body stretchLeft\">\n                <div className=\"popup-header \">\n                  <div\n                    className=\"popup-close\"\n                    onClick={() => {\n                      closeFormPopup();\n                    }}\n                  >\n                    <i className=\"pi pi-angle-left\"></i>\n                    <h4 className=\"popup-heading\">Add New Tax</h4>\n                  </div>\n                  <div\n                    className=\"popup-right-close\"\n                    onClick={() => {\n                      closeFormPopup();\n                    }}\n                  >\n                    &times;\n                  </div>\n                </div>\n                <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n                  <FormComponent\n                    form={_.cloneDeep(TaxForm)}\n                    formUpdateEvent={taxFormHandler}\n                    isFormValidFlag={isFormValid}\n                  ></FormComponent>\n                </div>\n\n                <div className=\"popup-lower-btn\">\n                  <ButtonComponent\n                    label=\"Submit\"\n                    icon=\"pi pi-check\"\n                    iconPos=\"right\"\n                    submitEvent={createNewTax}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </TabPanel>\n        <TabPanel header=\"Client\">\n          {openClientForm ? (\n            <TabView\n              activeIndex={activeClientIndex}\n              onTabChange={onClientTabChange}\n            >\n              <TabPanel header=\"Client\">\n                <div className={classes[\"form-container\"]}>\n                  <div className={classes[\"form-content\"]}>\n                    <FormComponent\n                      form={_.cloneDeep(ClientForm)}\n                      formUpdateEvent={clientFormHandler}\n                      isFormValidFlag={isFormValid}\n                    ></FormComponent>\n                    {/* attachment */}\n        {/* <div className={classes[\"upload-wrapper\"]}>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <div className={classes[\"upload-file-section\"]}>\n                            <div className={classes[\"upload-file\"]}>\n                              {attachments.length > 0 ? (\n                                <div className={classes[\"image-preview\"]}>\n                                  <img\n                                    src={attachments[0].preview}\n                                    alt=\"Preview\"\n                                  />\n                                  <div className={classes[\"chip-tm\"]}>\n                                    {attachments.map(\n                                      (\n                                        item: { name: string | undefined },\n                                        index: React.Key | null | undefined\n                                      ) => (\n                                        <Chip\n                                          label={item.name}\n                                          removable\n                                          onRemove={() => removeFileHandler()}\n                                          key={index}\n                                        />\n                                      )\n                                    )}\n                                  </div>\n                                </div>\n                              ) : (\n                                <div>\n                                  <input\n                                    type=\"file\"\n                                    onClick={(event: any) => {\n                                      event.target.value = null;\n                                    }}\n                                    onChange={(e) =>\n                                      selectAttachment(e.target.files)\n                                    }\n                                    className={classes[\"upload\"]}\n                                  />\n                                  <img\n                                    src={ImageUrl.FolderIconImage}\n                                    alt=\"Folder Icon\"\n                                  />\n                                  <p>\n                                    Drag files here <span> or browse</span>{\" \"}\n                                    <br />\n                                    <u>Support PNG</u>\n                                  </p>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div> */}\n        {/* attachment */}\n        {/* </div> */}\n        {/* </div> */}\n        {/* <div className={classes[\"popup-lower-btn\"]}>\n                  <ButtonComponent\n                    label=\"Cancel\"\n                    icon=\"pi pi-check\"\n                    iconPos=\"right\"\n                    type=\"default\"\n                    submitEvent={closeClientForm}\n                  />\n                  <ButtonComponent\n                    label=\"Next\"\n                    icon=\"pi pi-check\"\n                    iconPos=\"right\"\n                    submitEvent={moveNextClientForm}\n                  />\n                </div>\n              </TabPanel>\n              <TabPanel header=\"Contact\">\n                <div className={classes[\"form-container\"]}>\n                  <div className={classes[\"form-content\"]}>\n                    <FormComponent\n                      form={_.cloneDeep(ClientContactForm)}\n                      formUpdateEvent={clientContactFormHandler}\n                      isFormValidFlag={isFormValid}\n                    ></FormComponent>\n                  </div>\n                </div>\n                <div className={classes[\"popup-lower\"]}>\n                  <div className={classes[\"popup-lower-left-btn\"]}>\n                    <ButtonComponent\n                      label=\"Back\"\n                      icon=\"pi pi-check\"\n                      iconPos=\"left\"\n                      type=\"default\"\n                      submitEvent={backToPreviousForm}\n                    />\n                  </div>\n                  <div className={classes[\"popup-lower-right-btn\"]}>\n                    <ButtonComponent\n                      label=\"Cancel\"\n                      icon=\"pi pi-check\"\n                      iconPos=\"right\"\n                      type=\"default\"\n                      submitEvent={closeFormPopup}\n                    />\n                    <ButtonComponent\n                      label=\"Submit Form\"\n                      icon=\"pi pi-check\"\n                      iconPos=\"right\"\n                      submitEvent={createClientForm}\n                    />\n                  </div>\n                </div>\n              </TabPanel>\n            </TabView>\n          ) : (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"end\",\n                  marginBottom: \"0.5em\",\n                }}\n              >\n                <ButtonComponent\n                  label=\"New Client\"\n                  icon=\"pi pi-check\"\n                  iconPos=\"right\"\n                  submitEvent={openClientFormButton}\n                />\n              </div>\n              <p className=\"m-0\">\n                <DataTableBasicDemo\n                  data={clientMaster}\n                  column={ClientMasterColumns}\n                  showGridlines={true}\n                  resizableColumns={true}\n                  rows={20}\n                  paginator={true}\n                  sortable={true}\n                  headerRequired={true}\n                  scrollHeight={\"calc(100vh - 200px)\"}\n                  downloadedfileName={\"Brandwise_Denomination_table\"}\n                />\n                {showConfirmDialogue ? (\n                  <ConfirmDialogue\n                    actionPopupToggle={actionPopupToggle}\n                    onCloseFunction={onPopUpClose}\n                  />\n                ) : null}\n              </p>\n            </>\n          )}\n        </TabPanel> */}\n        {/* <TabPanel header=\"Client Bill To\">\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"end\",\n              marginBottom: \"0.5em\",\n            }}\n          >\n            <ButtonComponent\n              label=\"Add Client Bill Info\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              submitEvent={openSaveForm}\n            />\n          </div>\n          <p className=\"m-0\">\n            <DataTableBasicDemo\n              data={clientBillToMaster}\n              column={ClientBillToMasterColumns}\n              showGridlines={true}\n              resizableColumns={true}\n              rows={20}\n              paginator={true}\n              sortable={true}\n              headerRequired={true}\n              scrollHeight={\"calc(100vh - 200px)\"}\n              downloadedfileName={\"Brandwise_Denomination_table\"}\n            />\n            {showConfirmDialogue ? (\n              <ConfirmDialogue\n                actionPopupToggle={actionPopupToggle}\n                onCloseFunction={onPopUpClose}\n              />\n            ) : null}\n          </p>\n          {storeFormPopup ? (\n            <div className=\"popup-overlay md-popup-overlay\">\n              <div className=\"popup-body md-popup-body stretchLeft\">\n                <div className=\"popup-header\">\n                  <div\n                    className=\"popup-close\"\n                    onClick={() => {\n                      closeFormPopup();\n                    }}\n                  >\n                    <i className=\"pi pi-angle-left\"></i>\n                    <h4 className=\"popup-heading\">Add Client Bill Info</h4>\n                  </div>\n                  <div\n                    className=\"popup-right-close\"\n                    onClick={() => {\n                      closeFormPopup();\n                    }}\n                  >\n                    &times;\n                  </div>\n                </div>\n                <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n                  <FormComponent\n                    form={_.cloneDeep(ClientBillForm)}\n                    formUpdateEvent={clientBillFormHandler}\n                    isFormValidFlag={isFormValid}\n                  ></FormComponent>\n                </div>\n\n                <div className=\"popup-lower-btn\">\n                  <ButtonComponent\n                    label=\"Submit\"\n                    icon=\"pi pi-check\"\n                    iconPos=\"right\"\n                    submitEvent={createClientBillInfo}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </TabPanel>\n        <TabPanel header=\"Client Ship To\">\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"end\",\n              marginBottom: \"0.5em\",\n            }}\n          >\n            <ButtonComponent\n              label=\"Add Client Ship Info\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              submitEvent={openSaveForm}\n            />\n          </div>\n          <p className=\"m-0\">\n            <DataTableBasicDemo\n              data={clientShipToMaster}\n              column={ClientShipToMasterColumns}\n              showGridlines={true}\n              resizableColumns={true}\n              rows={20}\n              paginator={true}\n              sortable={true}\n              headerRequired={true}\n              scrollHeight={\"calc(100vh - 200px)\"}\n              downloadedfileName={\"Brandwise_Denomination_table\"}\n            />\n            {showConfirmDialogue ? (\n              <ConfirmDialogue\n                actionPopupToggle={actionPopupToggle}\n                onCloseFunction={onPopUpClose}\n              />\n            ) : null}\n          </p>\n          {storeFormPopup ? (\n            <div className=\"popup-overlay md-popup-overlay\">\n              <div className=\"popup-body md-popup-body stretchLeft\">\n                <div className=\"popup-header\">\n                  <div\n                    className=\"popup-close\"\n                    onClick={() => {\n                      closeFormPopup();\n                    }}\n                  >\n                    <i className=\"pi pi-angle-left\"></i>\n                    <h4 className=\"popup-heading\">Add Client Shipping Info</h4>\n                  </div>\n                  <div\n                    className=\"popup-right-close\"\n                    onClick={() => {\n                      closeFormPopup();\n                    }}\n                  >\n                    &times;\n                  </div>\n                </div>\n                <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n                  <FormComponent\n                    form={_.cloneDeep(ClientShipForm)}\n                    formUpdateEvent={clientShipFormHandler}\n                    isFormValidFlag={isFormValid}\n                  ></FormComponent>\n                </div>\n\n                <div className=\"popup-lower-btn\">\n                  <ButtonComponent\n                    label=\"Submit\"\n                    icon=\"pi pi-check\"\n                    iconPos=\"right\"\n                    submitEvent={createClientShipInfo}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </TabPanel> */}\n      </TabView>\n    </>\n  );\n};\n\nexport default Master;\n","import { APIURLS } from '../../../constants/ApiUrls';\nimport { HTTPService } from '../../http-service/http-service';\n\nexport default class CurrencyMasterService {\n  /**\n   * Fetches currency master data\n   * @returns Currency master records\n   */\n  getCurrencyMasterData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_CURRENCY_MASTER);\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  /**\n   * Creates or updates a currency master record\n   * @param formData Form data for currency\n   * @returns Created or updated record\n   */\n  createCurrencyMasterData = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id ? APIURLS.UPDATE_CURRENCY_MASTER : APIURLS.CREATE_CURRENCY_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  /**\n   * Activates or deactivates a currency master record\n   * @param data Activation or deactivation details\n   * @returns Response data\n   */\n  activateDeactivateCurrencyMaster = async (data: any) => {\n    try {\n      const body = {\n        id: data.id,\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_CURRENCY_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  getCurrencyHistoryData = async (data:any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.CURRENCY_HISTORY_DATA,data);\n      return response?.data;\n    } catch (error) {\n      return {};\n    }\n\n  }\n}\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class TaxMasterService {\n  getTax = async () => {\n    try {\n      const response = await HTTPService.getRequest(APIURLS.GET_TAXES)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createTax = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id?APIURLS.UPDATE_TAXES:APIURLS.CREATE_TAXES,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateTax = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_TAXES,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  activatedeactivateTax = async (data: any) => {\n    try {\n      const body = {\n        id: data.id,\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_TAX_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  formatDate = async (dateString: any) => {\n    try {\n      const date = new Date(dateString);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}/${month}/${day}`;\n    } catch (error: any) {\n      return error.message;\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"main-tab-screen\":\"Master_main-tab-screen__Dxyc9\",\"panel-tabs\":\"Master_panel-tabs__P9kgD\",\"addition-field-header\":\"Master_addition-field-header__lgZxL\",\"addition-field-buttons\":\"Master_addition-field-buttons__vvGO2\",\"aggregator-dashboard\":\"Master_aggregator-dashboard__S8oem\",\"upload-wrapper\":\"Master_upload-wrapper__cBKsz\",\"upload-file-section\":\"Master_upload-file-section__Ehlqw\",\"upload-file\":\"Master_upload-file__Ql6S+\",\"empty-upload\":\"Master_empty-upload__WXF8N\",\"chip-tm\":\"Master_chip-tm__eDPC0\",\"cstm-chip\":\"Master_cstm-chip__oFjln\",\"p-chip\":\"Master_p-chip__ciUeU\",\"p-chip-text\":\"Master_p-chip-text__CSetj\",\"available-card-box\":\"Master_available-card-box__dfNEf\",\"available-card-details\":\"Master_available-card-details__J1e6s\",\"detail-transcation-btn\":\"Master_detail-transcation-btn__yyiA2\",\"available-card-img\":\"Master_available-card-img__9cq1u\",\"coupon-card\":\"Master_coupon-card__IKXsC\",\"textWithImg\":\"Master_textWithImg__hqjjN\",\"row\":\"Master_row__zb1mZ\",\"col-lg-3\":\"Master_col-lg-3__iaADj\",\"available-card\":\"Master_available-card__1xFrM\",\"reedemed-amount-card\":\"Master_reedemed-amount-card__Ggkyv\",\"credit-amount-card\":\"Master_credit-amount-card__-s-n8\",\"last-recharge-card\":\"Master_last-recharge-card__4Q23w\",\"wallet-row\":\"Master_wallet-row__n4qOn\",\"wallet-card\":\"Master_wallet-card__HE0Ey\",\"card-logo\":\"Master_card-logo__08oWn\",\"food-wallet-card\":\"Master_food-wallet-card__mimFN\",\"fuel-wallet-card\":\"Master_fuel-wallet-card__9c4iP\",\"general-wallet-card\":\"Master_general-wallet-card__y84ZC\",\"food-wallet-details\":\"Master_food-wallet-details__SclZy\",\"fuel-wallet-details\":\"Master_fuel-wallet-details__3YnS7\",\"general-wallet-details\":\"Master_general-wallet-details__H5NCF\",\"card-logo-circle\":\"Master_card-logo-circle__xieTb\",\"wallet-details\":\"Master_wallet-details__UvP9m\",\"aggregator-analytics-table\":\"Master_aggregator-analytics-table__--5gs\",\"text-success\":\"Master_text-success__owTwB\",\"text-danger\":\"Master_text-danger__P+BdB\",\"no-record-div\":\"Master_no-record-div__0vaz3\",\"col-lg-2\":\"Master_col-lg-2__EiXiD\",\"actionMenuBtn\":\"Master_actionMenuBtn__PQN4G\",\"popup_ActionMenu\":\"Master_popup_ActionMenu__ZM9y9\",\"sm-popup-content\":\"Master_sm-popup-content__pCwvo\",\"btn-main\":\"Master_btn-main__VOTXX\",\"add-recharge-content\":\"Master_add-recharge-content__SLPcS\",\"add-recharge-form\":\"Master_add-recharge-form__PVvjw\",\"formLabel\":\"Master_formLabel__cBDaX\",\"p-inputtextarea\":\"Master_p-inputtextarea__z8aQc\",\"form-container\":\"Master_form-container__jXenY\",\"form-content\":\"Master_form-content__K6m9z\",\"popup-lower-btn\":\"Master_popup-lower-btn__yf55U\",\"popup-lower-left-btn\":\"Master_popup-lower-left-btn__StxRQ\",\"popup-lower\":\"Master_popup-lower__s0pTK\",\"popup-lower-right-btn\":\"Master_popup-lower-right-btn__580b9\"};"],"names":["ProductMasterService","constructor","getProductMaster","async","response","HTTPService","getRequest","APIURLS","GET_PRODUCT_MASTER","data","err","createProductMaster","postRequest","CREATE_PRODUCT_MASTER","formData","error","updateProductMaster","UPDATE_PRODUCT_MASTER","deactivateProductMaster","body","productId","id","isActive","updatedBy","loggedInUserId","TOGGLE_PRODUCT_STATUS","ProjectMasterService","getProjectMaster","GET_PROJECT_MASTER","createProjectMaster","CREATE_PROJECT_MASTER","updateProjectMaster","UPDATE_PROJECT_MASTER","deactivateProjectMaster","projectId","TOGGLE_PROJECT_STATUS","TaxMasterService","getTaxMaster","GET_TAX_MASTER","createTaxMaster","CREATE_TAX_MASTER","updateTaxMaster","UPDATE_TAX_MASTER","deactivateTaxMaster","taxId","TOGGLE_TAX_TYPE_STATUS","formatDate","date","Date","dateString","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","message","TechnologyMasterService","getTechnologyGroupMaster","GET_TECHNOLOGY_GROUP_MASTER","createTechnologyGroupMaster","CREATE_TECHNOLOGY_GROUP_MASTER","updateTechnologyGroupMaster","UPDATE_TECHNOLOGY_GROUP_MASTER","deactivateTechnologyGroupMaster","groupId","TOGGLE_TECHNOLOGY_GROUP_STATUS","getTechnologySubGroupMaster","GET_TECHNOLOGY_SUBGROUP_MASTER","techGroupId","createTechnologySubGroupMaster","CREATE_TECHNOLOGY_SUBGROUP_MASTER","updateTechnologySubGroupMaster","UPDATE_TECHNOLOGY_SUBGROUP_MASTER","deactivateTechnologySubGroupMaster","subgroupId","TOGGLE_TECHNOLOGY_SUBGROUP_STATUS","getTechnologyMaster","GET_TECHNOLOGY_MASTER","createTechnologyMaster","CREATE_TECHNOLOGY_MASTER","updateTechnologyMaster","UPDATE_TECHNOLOGY_MASTER","deactivateTechnologyMaster","TOGGLE_TECHNOLOGY_STATUS","ValidationRegex","phoneCode","pattern","patternHint","onlyCharacters","website","alphanumeric","CountryMaster","_Object$keys10","_Object$keys11","_Object$keys12","CountryFormFields","name","inputType","label","value","validation","required","fieldWidth","code","language","countryMaster","setCountryMaster","useState","loader","setLoader","storeFormPopup","setFormPopup","isFormValid","setIsFormValid","showConfirmDialogue","setShowConfirmDialogue","actionPopupToggle","setActionPopupToggle","stateData","setStateData","isEditCountry","setIsEditCountry","CountryForm","setCountryForm","_","CountryAddressForm","setCountryAddressForm","CountryBankForm","setCountryBankForm","CountryCompanyForm","setCountryCompanyForm","userInfo","Cookies","get","userId","countryService","CountryMasterService","CountryMasterColumns","fieldName","textAlign","frozen","sort","filter","rowData","_jsx","style","display","gap","marginLeft","children","className","cursor","title","onClick","onUpdate","fieldValue","changeFilter","placeholder","_jsxs","Tooltip","target","position","bankAccAdditionalFields","addressAdditionalFields","companyAddtionalFields","color","isactive","updated_by","updated_at","useEffect","getCountryMaster","fetchData","_response$countries","countries","forEach","el","moment","format","console","updateCountryMaster","onPopUpClose","e","_Object$keys","_Object$keys2","_Object$keys3","addressDetails","JSON","parse","addressForm","Object","keys","reduce","acc","item","index","bankDetails","bankForm","companyDetails","companyForm","log","closeFormPopup","Loader","_Fragment","justifyContent","marginBottom","ButtonComponent","icon","iconPos","submitEvent","DataTableBasicDemo","column","showGridlines","resizableColumns","rows","paginator","sortable","headerRequired","scrollHeight","downloadedfileName","ConfirmDialogue","onCloseFunction","padding","FormComponent","form","formUpdateEvent","isFormValidFlag","classes","handleCountryAddress","_Object$keys4","noOfFields","length","updatedAddressForm","_objectSpread","handleCountryBank","_Object$keys5","updatedBankForm","handleCountryCompany","_Object$keys6","updatedCompanyForm","event","preventDefault","companyValidityFlag","companyFormValid","_item$validation","push","valid","_Object$keys7","_Object$keys8","_Object$keys9","_CountryForm$name","_CountryForm$code","_CountryForm$language","_CountryForm$phoneCod","addressData","_CountryAddressForm$i","_CountryAddressForm$i2","bankData","_CountryBankForm$inde","_CountryBankForm$inde2","companyData","_CountryCompanyForm$i","_CountryCompanyForm$i2","obj","updatePayload","countryId","then","statusCode","HTTP_RESPONSE","SUCCESS","ToasterService","show","CONSTANTS","catch","ERROR","createCountryMaster","CREATED","StateMaster","StatesFormFields","country_name","options","stateName","stateCode","gstCode","stateMaster","setStateMaster","isEditState","setIsEditState","statesFieldsStructure","setStatesFieldsStructure","StatesForm","setStatesForm","stateService","StateMasterService","StateMasterColumns","getStateMaster","formatCountryDetails","_response$states","states","temp","countrylist","arguments","undefined","map","country","statesFormHandler","updateStateMaster","Number","_countryMaster$find$i","_countryMaster$find","find","_StatesForm$stateName","_StatesForm$stateCode","_StatesForm$gstCode","stateId","createStateMaster","RegionMasterService","getRegionMaster","GET_REGION_MASTER","createRegionMaster","CREATE_REGION_MASTER","updateRegionMaster","UPDATE_REGION_MASTER","deactivateRegionMaster","TOGGLE_REGION_STATUS","RegionMaster","RegionFormFields","statesList","setStatesList","StateSelectionFormFields","disable","state_name","regionMaster","setRegionMaster","isEditRegion","setIsEditRegion","regionFieldsStructure","setRegionFieldsStructure","stateSelectionFieldsStructure","setStateSelectionFieldsStructure","RegionForm","setRegionForm","StateSelectionForm","setStateSelectionForm","patchData","regionService","RegionMasterColumns","onDelete","regionName","regionCode","stateNames","countryName","_response$regions","regions","fromDate","regionFormHandler","getStateByCountry","selectedCountry","statelist","state","_RegionForm$country_n","_form$country_name","currentForm","_form$country_name2","stateOptionModifier","updatedSelectionForm","regionCountryForm","_regionCountryForm$co","selectedStates","_item$state_name","flat","Boolean","idx","_item$name","_item$name2","_item$name2$value","_item$name3","_item$state_name4","_item$state_name4$val","_item$state_name5","availableStates","_item$state_name2","_item$state_name3","includes","allRegionRows","stateList","stateSelectionData","stateForm","_item$stateNames","selectedState","split","formFilling","modifiedStateForm","displayToggle","is_active","acceptFunction","confirmDelete","rejectFunction","deactivateStateMaster","_patchData","prev","slice","modifiedSelectionForm","stateSelectionFormHandler","_countryMaster$find2","_item$state_name6","remainingStates","region","_item$validation2","_region$state_name","_region$state_name$va","_region$name","_region$code","_stateData$index","ids","_stateMaster$find$id","_stateMaster$find","stateIds","_stateData$index2","regionId","CompanyMaster","CompanyFormFields","companyName","Website","Email","email","companyCode","ParentFormFields","pan_number","independent","parent_comp","description","companyMaster","setCompanyMaster","isEditCompany","setIsEditCompany","attachments","setAttachments","digitalSign","setDigitalSign","logoUrl","setLogoUrl","signatureUrl","setSignatureUrl","companyFieldStructure","setCompanyFieldStructure","CompanyForm","setCompanyForm","AdditionalDetailsForm","setAdditionalDetailsForm","parentFieldStructure","setParentFieldStructure","ParentForm","setParentForm","companyService","CompanyMasterService","CompanyMasterColumns","parentCompanyName","companies","getCompanyMaster","formatCompanyDetails","_response$companies","companyList","company","companyFormHandler","_CompanyForm$country_","detailsForm","updateCompanyMaster","logopath","process","digitalSignPath","_companyMaster$filter2","companyNamesList","deactivateCompanyMaster","loading","_form$independent","_form$independent2","_companyMaster$filter","removeFileHandler","fontSize","src","width","height","alt","type","onChange","selectAttachment","files","eventList","toLowerCase","FILE_TYPES","PNG","size","prevVals","fileURL","URL","createObjectURL","ImageUrl","FolderIconImage","removeSignHandler","selectDigitalSign","_CompanyForm$independ","_CompanyForm$parent_c","_companyMaster$find$i","_companyMaster$find","_CompanyForm$companyN","_ParentForm$pan_numbe","_CompanyForm$Email","_CompanyForm$companyC","_CompanyForm$Website","_ParentForm$independe","_ParentForm$descripti","FormData","parentCompanyId","_AdditionalDetailsFor","_AdditionalDetailsFor2","_AdditionalDetailsFor3","stringify","entries","_ref","key","set","companyId","_ref2","createCompanyMaster","CompanyAddressMaster","CompanyLocationFormFields","address1","address2","address3","gst_number","isDefaultAddress","companyLocationMaster","setCompanyLocationMaster","isEditCompanyLocation","setIsEditCompanyLocation","companyLocationFieldStructure","setCompanyLocationFieldStructure","CompanyLocationForm","setCompanyLocationForm","CompanyLocationMasterColumns","additionalAddressDetails","deactivationDate","getCompanyLocationMaster","_response$locations","locations","formatStateDetails","companyLocationFormHandler","_form$companyName","_CompanyLocationForm$","selectedCompany","_form$companyName2","updateCompanyLocationMaster","askForDeactivationDate","deactivateCompanyLocationMaster","isNaN","_CompanyLocationForm$2","_companyLocationMaste","defaultAccountFlag","_CompanyLocationForm$3","_CompanyLocationForm$4","_CompanyLocationForm$5","_CompanyLocationForm$6","_CompanyLocationForm$7","locationId","createCompanyLocationMaster","AccountTypeMasterService","getAccountTypeMaster","GET_ACCOUNT_TYPE_MASTER","createAccountTypeMaster","CREATE_ACCOUNT_TYPE_MASTER","updateAccountTypeMaster","UPDATE_ACCOUNT_TYPE_MASTER","deactivateAccountTypeMaster","accountTypeId","TOGGLE_ACCOUNT_TYPE_STATUS","AccountMaster","AccountFormFields","account_type","bank_name","bank_address","account_no","isDefaultAccount","accountTypeMaster","setAccountTypeMaster","accountMaster","setAccountMaster","isEditAccount","setIsEditAccount","accountFieldsStructure","setAccountFieldsStructure","AccountForm","setAccountForm","accountTypeService","accountService","AccountsMasterService","AccountMasterColumns","accountTypeName","bankName","bankAddress","accountNumber","additionalFieldDetails","getAccountMaster","_response$companyAcco","getAccountsMaster","companyAccounts","_response$accountType","accountTypes","accountFormHandler","_updatedForm$companyN","_AccountForm$companyN","_updatedForm$companyN2","_AccountForm$companyN2","updatedForm","_updatedForm$companyN3","_accountTypeMaster$fi","_accountTypeMaster$fi2","deactivateAccountsMaster","_AccountForm$isDefaul","_accountMaster$filter","_accountTypeMaster$fi3","_accountTypeMaster$fi4","_AccountForm$isDefaul2","_AccountForm$bank_nam","_AccountForm$bank_add","_AccountForm$account_","bankAccountTypeId","accountId","updateAccountsMaster","createAccountsMaster","IndustryMaster","IndustryFormFields","industryName","subIndustryCategory","productionTypeMaster","setProductionTypeMaster","industryMaster","setIndustryMaster","editing","setEditing","industryFieldsStructure","setIndustryFieldsStructure","IndustryForm","setIndustryForm","industryService","IndustryMasterService","IndustryMasterColumns","getIndustryMaster","productionTypes","getProductionTypeMaster","formatProductionTypeDetails","_response$industryMas","industryMasters","industryFormHandler","updateIndustryMaster","deactivateIndustryMaster","_IndustryForm$industr","_IndustryForm$subIndu","industryMasterId","createIndustryMaster","IndustryGroupMaster","IndustryGroupFormFields","industryGroupName","industryNames","industryGroupMaster","setIndustryGroupMaster","isEditIndustryGroup","setIsEditIndustryGroup","industryGroupFieldsStructure","setIndustryGroupFieldsStructure","IndustryGroupForm","setIndustryGroupForm","IndustryGroupMasterColumns","groupIndustryName","getIndustryGroupMaster","industries","formatIndustryDetails","_response$groupIndust","groupIndustries","industryList","industry","industryGroupFormHandler","updateIndustryGroupMaster","_data$industryNames","deactivateIndustryGroupMaster","_IndustryGroupForm$in","_IndustryGroupForm$in2","_IndustryGroupForm$in3","industryIds","_industryMaster$find$","_industryMaster$find","groupIndustryId","createIndustryGroupMaster","IndustryHeadMaster","_IndustryHeadForm$sta2","IndustryHeadFormFields","industryHeadName","industry_head_email","isRegionWise","region_code","start_date","end_date","industryHeadMaster","setIndustryHeadMaster","isEditIndustryHead","setIsEditIndustryHead","industryHeadFieldsStructure","setIndustryHeadFieldsStructure","IndustryHeadForm","setIndustryHeadForm","IndustryHeadMasterColumns","countryNames","regionNames","viewStartDate","viewEndDate","_IndustryHeadForm$sta","_IndustryHeadForm$end","prevForm","_prevForm$start_date","min","getIndustryHeadMaster","_response$industryHea","industryHeads","startDate","endDate","industryHeadFormHandler","parseDateString","modifyFormRegionWise","_regionsList","regionsList","regionPromises","selectedCountries","allRegions","Promise","all","regionlist","formatRegionDetails","modifyFormStateWise","_statesList","statePromises","allStates","regionList","_data$countryNames","regionCodeList","regionNamesList","_data$regionNames","_regionList","regionItem","updateIndustryHeadMaster","_data$countryNames2","_data$stateNames","minDate","deactivateIndustryHeadMaster","_IndustryHeadForm$ind","_IndustryHeadForm$ind2","_IndustryHeadForm$reg","_IndustryHeadForm$reg2","_IndustryHeadForm$sta3","_IndustryHeadForm$sta4","_IndustryHeadForm$ind3","_IndustryHeadForm$cod","_IndustryHeadForm$isR","_IndustryHeadForm$sta5","_IndustryHeadForm$end2","_IndustryHeadForm$end3","regionIds","_regionMaster$find$id","_regionMaster$find","companyIds","countryIds","industryHeadId","createIndustryHeadMaster","SalesMaster","SalesFormFields","sales_manager_email","industryHeadNames","from_date","salesMaster","setSalesMaster","deactivatePopupIndustryHead","setDeactivatePopupIndustryHead","deactivatePopup","setDeactivatePopup","setRowData","isEditSalesManager","setIsEditSalesManager","isDeactivateFormValid","setIsDeactivateFormValid","deactivateIndustryHead","setDeactivateIndustryHead","industriesData","setIndustriesData","currRowData","setCurrRowData","salesFieldsStructure","setSalesFieldsStructure","SalesForm","setSalesForm","deactivateFormObject","max","industry_head_name","deactForm","setDeactivateForm","setPatchData","salesService","SalesMasterService","SalesMasterColumns","_data$industryHeadNam","_temp$deactivatedIndu","industryHeadIds","deactivatedIndustryIds","handleDeactivate","timeoutId","setTimeout","getSalesMaster","formatIndustryHeadDetails","clearTimeout","_response$salesManage","salesManagers","industryHeadList","industryHead","salesFormHandler","updateSalesMaster","closeDeactivation","_data$industryHeadNam2","deactivateSalesMaster","resetForm","_SalesForm$industryHe","_SalesForm$industryHe2","_SalesForm$name","_SalesForm$code","_SalesForm$from_date","_SalesForm$descriptio","_industryHeadMaster$f","_industryHeadMaster$f2","salesManagerId","createSalesMaster","maxWidth","paddingBottom","maxHeight","selectedHeadNames","selectedHeadIds","Array","isArray","headName","matchedHead","head","updatedRowData","AccountManagerMaster","account_manager_email","isEditAccManager","setIsEditAccManager","AccountMasterService","_response$accountMana","accountManagers","updateAccountMaster","deactivateAccountMaster","_AccountForm$industry","_AccountForm$industry2","_AccountForm$name","_AccountForm$code","_AccountForm$from_dat","_AccountForm$descript","accountManagerId","createAccountMaster","TechGroupMaster","TechGroupFormFields","techGroupMaster","setTechGroupMaster","isEditTechGroup","setIsEditTechGroup","techGroupFieldsStructure","setTechGroupFieldsStructure","TechGroupForm","setTechGroupForm","technologyService","TechGroupMasterColumns","getTechGroupMaster","_response$groups","groups","updateTechGroupMaster","_TechGroupForm$name","_TechGroupForm$descri","TechSubGroupMaster","TechSubGroupFormFields","group_name","techSubGroupMaster","setTechSubGroupMaster","isEditSubTechGroup","setIsEditSubTechGroup","techSubGroupFieldsStructure","setTechSubGroupFieldsStructure","TechSubGroupForm","setTechSubGroupForm","TechSubGroupMasterColumns","techGroupNames","getTechSubGroupMaster","techGroups","formatGroupDetails","_response$subgroups","subgroups","grouplist","group","techSubGroupFormHandler","updateTechSubGroupMaster","_TechSubGroupForm$nam","_TechSubGroupForm$des","techGroup","_TechSubGroupForm$gro","techGroupIds","TechMaster","TechFormFields","techName","subGroup_name","techMaster","setTechMaster","isEditTechnology","setIsEditTechnology","techFieldsStructure","setTechFieldsStructure","TechForm","setTechForm","TechMasterColumns","techSubgroupNames","getTechMaster","formatSubGroupDetails","_techSubGroups$filter","techSubGroups","subGrouplist","subGroup","techFormHandler","modifyFormTechGroup","selectGroup","subGroups","_updatedForm$group_na","_TechForm$group_name","_updatedForm$group_na2","subGroupList","updateTechMaster","_data$techSubgroupNam","_TechForm$subGroup_na2","_TechForm$subGroup_na3","_TechForm$techName","_TechForm$description","_TechForm$group_name2","_TechForm$subGroup_na","techSubGroupId","_techSubGroupMaster$f","_techSubGroupMaster$f2","tech","techSubgroupIds","OemMasterService","getOemMasterData","GET_OEM_MASTER","createOemMasterData","UPDATE_OEM_MASTER","CREATE_OEM_MASTER","activateDeactivateOemMaster","TOGGLE_OEM_STATUS","OemMaster","OemFormFields","oemName","productName","setOemMaster","oemFieldsStructure","setOemFieldStructure","oemForm","setOemForm","oemMasterService","oemMasterColumns","getOemMaster","_response$oems","oems","_oemForm$oemName","_oemForm$productName","PolestarProductMasterService","getPolestarProductMasterData","GET_POLESTAR_PRODUCT_MASTER","createPolestarProductMasterData","UPDATE_POLESTAR_PRODUCT_MASTER","CREATE_POLESTAR_PRODUCT_MASTER","activateDeactivatePolestarProductMaster","TOGGLE_POLESTAR_PRODUCT_MASTER_STATUS","PolestarProductSalesMaster","formObj","setPolestarProductSalesMaster","formObjState","setFormObjState","polestarProductService","polestarProductSalesColumns","getPolestarProductSalesMaster","_response$products","products","updatePolestarProductSalesMaster","_formObjState$product","ProjectServiceMasterService","getProjectServiceMasterData","GET_PROJECT_SERVICE_MASTER","createProjectServiceMasterData","UPDATE_PROJECT_SERVICE_MASTER","CREATE_PROJECT_SERVICE_MASTER","activateDeactivateProjectServiceMaster","TOGGLE_PROJECT_SERVICE_MASTER_STATUS","ProjectServiceMaster","projectServiceMaster","setProjectServiceMaster","projectService","projectServiceColumns","getProjectServiceMaster","_response$records","records","updateProjectServiceMaster","_formObjState$name","RegionHeadMasterService","getRegionHeadMaster","GET_REGION_HEAD_MASTER","createRegionHeadMaster","CREATE_REGION_HEAD_MASTER","updateRegionHeadMaster","UPDATE_REGION_HEAD_MASTER","deactivateRegionHeadMaster","regionHeadId","TOGGLE_REGION_HEAD_STATUS","RegionHeadMaster","regionHeadName","regionHeadEcode","regionHeadEmail","setMonth","regionHeadMasterService","onDeactivate","_response$regionHeads","regionHeads","regionCodes","toString","validity","deactivateFolrmValidaity","FinancialYearMasterService","getFinancialYearMasterData","GET_FINANCIAL_YEAR_MASTER","createFinancialYearMasterData","UPDATE_FINANCIAL_YEAR_MASTER","CREATE_FINANCIAL_YEAR_MASTER","activateDeactivateFinancialYearMaster","TOGGLE_FINANCIAL_YEAR_MASTER_STATUS","FinancialYearMaster","yearsRange","setYearsRange","startYear","financialYearName","financialYearMaster","setFinancialYearMaster","financialYearService","getFinancialYearMaster","financialYearColumns","endYear","_moment","updateFinancialYearMaster","_form$startYear","startYearFormatted","endYearFormatted","_formObjState$startYe","_formObjState$financi","_formObjState$startYe2","calculatedEndYear","toISOString","CurrencyMaster","currencyCode","currencyMaster","setCurrencyMaster","currencyHistoryPopup","setCurrencyHistoryPopup","currencyHistoryData","setCurrencyHistoryData","currencyService","CurrencyMasterService","currencyMasterColumns","exchangeRateInINR","currencyHistoryColumns","getCurrencyMaster","getCurrencyMasterData","element","exchangeRate","toFixed","formattedDataForExcel","_objectWithoutProperties","_excluded","_formObjState$currenc","_formObjState$descrip","createCurrencyMasterData","TaxMaster","countriesList","setCountriesList","countryCode","taxType","taxFieldName","taxPercentage","inputNumberOptions","mode","maxFractionDigits","taxMaster","setTaxMaster","taxService","taxMasterColumns","countryList","getCountryList","getTax","_response$data","created_at","activatedeactivateTax","_formObjState$country","_formObjState$taxType","_formObjState$taxFiel","_formObjState$taxPerc","createTax","Master","accountsMaster","setAccountsMaster","technologyMaster","setTechnologyMaster","productsMaster","setProductsMaster","projectsMaster","setProjectsMaster","clientMaster","setClientMaster","clientBillToMaster","setClientBillToMaster","clientShipToMaster","setClientShipToMaster","activeIndex","setActiveIndex","activeClientIndex","setActiveClientIndex","openClientForm","setOpenClientForm","ClientMasterService","CINNO","IECode","pin","PAN","GST","companyLocationFieldsStructure","setCompanyLocationFieldsStructure","CurrencyFormFields","currencyName","currencyDescription","row","AccountsFormFields","ifsc_code","micr_code","routing_no_swift_code","bank_code","TechnologyFormFields","technologyName","ProductFormFields","productDescription","ProjectFormFields","projectName","projectDescription","TaxFormFields","effectiveDate","state_code","ClientFormFields","industry_name","alias","pan_no","polestar_bank_account_number","gstn","servicing_type","client_category","msa_start_date","msa_end_date","is_msa_missing","msa_flag","non_solicitation_clause","use_logo_permission","clientFieldsStructure","setClientFieldsStructure","ClientBillFormFields","client_name","clientBillFieldsStructure","setClientBillFieldsStructure","ClientShipFormFields","client_ship_to_address1","client_ship_to_address2","client_ship_to_address3","client_ship_to_pin","client_ship_to_country_name","client_ship_to_state_name","client_ship_to_gstn","clientShipFieldsStructure","setClientShipFieldsStructure","ClientContactFormFields","salutation","first_name","last_name","phone","CurrencyForm","setCurrencyForm","TechnologyForm","setTechnologyForm","ProductForm","setProductForm","ProjectForm","setProjectForm","TaxForm","setTaxForm","ClientForm","setClientForm","ClientBillForm","setClientBillForm","ClientShipForm","setClientShipForm","ClientContactForm","setClientContactForm","TabView","onTabChange","panelContainerClassName","TabPanel","header","GET_CURRENCY_MASTER","UPDATE_CURRENCY_MASTER","CREATE_CURRENCY_MASTER","activateDeactivateCurrencyMaster","TOGGLE_CURRENCY_STATUS","getCurrencyHistoryData","CURRENCY_HISTORY_DATA","GET_TAXES","UPDATE_TAXES","CREATE_TAXES","updateTax","TOGGLE_TAX_STATUS"],"sourceRoot":""}