{"version":3,"file":"static/js/877.599aa95f.chunk.js","mappings":"uQAAO,MAAMA,EAAUC,WAAAA,GAAA,KACrBC,eAAkBC,IAChB,MAAMC,EAAeD,EAIrB,OAHAC,EAAaC,KAAKC,KAAOF,EAAaC,KAAKE,MAAMC,KAC9CC,GAAcA,EAAKH,OAEfF,CAAY,EACpB,KACDM,wBAA2BP,IACzB,MAAMC,EAAeD,EAErB,OADAC,EAAaE,KAAOH,EAAKI,MAAMC,KAAKC,GAAcA,EAAKH,OAChDF,CAAY,CACpB,E,aCAH,MAiDA,EAjDqBO,KACnB,MAAMC,GAASC,EAAAA,EAAAA,MAAcD,OACvBE,EAAa,IAAIC,gBAAgBH,GAAQI,IAAI,SAC7CC,GAAUC,EAAAA,EAAAA,MAGhB,GAAIJ,EACF,IACE,MAAMK,EAAcC,KAAKC,MAAMP,IAC/BQ,EAAAA,EAAAA,KAAeC,SACbJ,EAAYK,YAGhB,CAAE,MAAOC,GACPC,EAAAA,EAAeC,KAAK,oBAAqB,SACzCV,EAAQW,KAAKC,EAAAA,EAAgBC,MAC/B,CA8BF,OAPAC,EAAAA,EAAAA,YAAU,KACJjB,EApBJkB,EAAAA,EAAYC,gBACTC,MAAMC,IACL,IAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,aAAcC,EAAAA,EAAcC,gBAAiB,CACzD,MAAMlC,GAAe,IAAIJ,GAAYU,wBACnCyB,EAAShC,MAEX6B,EAAAA,EAAYO,SAASC,KAAKpC,GAC1B4B,EAAAA,EAAYS,YAAYD,KAAiB,OAAZpC,QAAY,IAAZA,OAAY,EAAZA,EAAcE,KAAK,IAChDW,EAAQW,MAAK,IAAIc,EAAAA,GAAsBC,WACzC,MACE1B,EAAQW,KAAKC,EAAAA,EAAgBC,MAC/B,IAEDc,OAAOC,IACNnB,EAAAA,EAAeC,KAAK,kBAAmBmB,EAAAA,EAAUC,OACjD9B,EAAQW,KAAKC,EAAAA,EAAgBC,MAAM,IAQrCb,EAAQW,KAAKC,EAAAA,EAAgBC,MAC/B,KAEKkB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,cAAgB,C","sources":["services/auth-service/auth.model.ts","pages/login/passportLogin.tsx"],"sourcesContent":["export class AuthModel {\n  modifyUserInfo = (data: any) => {\n    const responseData = data\n    responseData.user.role = responseData.user.roles.map(\n      (item: any) => item.role\n    )\n    return responseData\n  }\n  modifyValidateTokenData = (data: any) => {\n    const responseData = data\n    responseData.role = data.roles.map((item: any) => item.role)\n    return responseData\n  }\n}\n","import { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { ROUTE_CONSTANTS } from '../../constants/RouteConstants'\nimport { ToasterService } from '../../services/toaster-service/toaster-service'\nimport { CONSTANTS } from '../../constants/Constants'\nimport { AuthService } from '../../services/auth-service/auth.service'\nimport { HTTP_RESPONSE } from '../../enums/http-responses.enum'\nimport { NavigateUserService } from '../../services/navigate-user-service/navigate-user.service'\nimport { TokenService } from '../../services/token-service/token-service'\nimport { AuthModel } from '../../services/auth-service/auth.model'\n\nconst PassportAuth = () => {\n  const search = useLocation().search\n  const token: any = new URLSearchParams(search).get('token')\n  const history = useHistory()\n\n  //   const headers = {}\n  if (token) {\n    try {\n      const tokenParsed = JSON.parse(token)\n      TokenService().setToken(\n        tokenParsed.accessToken\n        // tokenParsed.refresponsehToken\n      )\n    } catch (err) {\n      ToasterService.show('Invalid Response!', 'error')\n      history.push(ROUTE_CONSTANTS.LOGIN)\n    }\n  }\n\n  const getUserDetails = () => {\n    AuthService.validateToken()\n      .then((response: any) => {\n        if (response?.statusCode == HTTP_RESPONSE.REQUEST_SUCCESS) {\n          const responseData = new AuthModel().modifyValidateTokenData(\n            response.data\n          )\n          AuthService.userInfo.next(responseData)\n          AuthService.currentRole.next(responseData?.role[0])\n          history.push(new NavigateUserService().getRoute())\n        } else {\n          history.push(ROUTE_CONSTANTS.LOGIN)\n        }\n      })\n      .catch((error: any) => {\n        ToasterService.show('Failed to Login', CONSTANTS.ERROR)\n        history.push(ROUTE_CONSTANTS.LOGIN)\n      })\n  }\n\n  useEffect(() => {\n    if (token) {\n      getUserDetails()\n    } else {\n      history.push(ROUTE_CONSTANTS.LOGIN)\n    }\n  })\n  return <div>Loading...</div>\n}\n\nexport default PassportAuth\n"],"names":["AuthModel","constructor","modifyUserInfo","data","responseData","user","role","roles","map","item","modifyValidateTokenData","PassportAuth","search","useLocation","token","URLSearchParams","get","history","useHistory","tokenParsed","JSON","parse","TokenService","setToken","accessToken","err","ToasterService","show","push","ROUTE_CONSTANTS","LOGIN","useEffect","AuthService","validateToken","then","response","statusCode","HTTP_RESPONSE","REQUEST_SUCCESS","userInfo","next","currentRole","NavigateUserService","getRoute","catch","error","CONSTANTS","ERROR","_jsx","children"],"sourceRoot":""}