{"version":3,"file":"static/js/611.84ac9c2a.chunk.js","mappings":"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","sources":["pages/invoice/taxInvoicePDF/invoiceDownload.tsx","pages/invoice/exportInvoice/exportInvoiceDownload.tsx","pages/invoice/Invoice.tsx","services/invoice/invoice.service.ts","services/masters/account-manager-master/accountManager.service.ts","services/masters/accounts-master/accounts.service.ts","services/masters/company-master/company.service.ts","services/masters/country-master/country.service.ts","services/masters/currency-master/currency.service.ts","services/masters/industry-master/industry.service.ts","services/masters/sales-master/sales.service.ts","services/masters/state-master/state.service.ts","services/masters/tax-service-master/taxMaster.service.ts","services/po-contract/poContract.service.ts"],"sourcesContent":["\nimport \"./tax-invoice.css\"\n\nexport default function TaxInvoice(props: any) {\n  const handlePrint = () => {\n    window.print()\n  }\n\n  return (\n    <div className=\"mainContainer\" onClick={() => props?.setDownloadPDF(false)}>\n      <div className=\"print-button-container\" onClick={(event) => event.stopPropagation()}>\n          <button onClick={handlePrint} className=\"print-button\">\n            {/* <Printer size={16} /> */}\n            Print Invoice\n          </button>\n        </div>\n      <div className=\"invoice-container\" onClick={(event) => event.stopPropagation()}>\n        {/* Print Button - hidden when printing */}\n        <img className=\"company-img\" src=\"./Polestar Logo.svg\" alt=\"Polestar\" />\n        <h1 className=\"invoice-title \"  >Tax Invoice</h1>\n        <div className=\"pdfContainer\">\n          {/* Header */}\n          <div className=\"companyInvoice\">\n            <div className=\"invoice-header\">\n              <div className=\"company-details\">\n                <span className=\"company-name\">Polestar Solutions And Services India Pvt. Ltd.</span>\n                <br />\n                <span>4th Floor, Tower-B, Logix Cyber Park,</span>\n                <br />\n                <span>Plot no. C28 and 29, Sector-62</span>\n                <br />\n                <span>Noida -201309</span>\n                <br />\n                <span>Uttar Pradesh, India</span>\n                <br />\n                <span>Website - <a href=\"https://www.polestarllp.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.polestarllp.com</a></span>\n                <br />\n                <span>CIN No. - U72900UP2017PTC092242</span>\n              </div>\n            </div>\n\n            {/* Invoice Details */}\n            <div className=\"invoice-details\">\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">Invoice No:</span>\n                <span>PSSL/24-25/00004</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">Invoice Date:</span>\n                <span>2024-04-16</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">Due Date:</span>\n                <span>2024-04-26</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">Terms of Payment:</span>\n                <span>10 Days</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">PO Number:</span>\n                <span>48</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">PAN:</span>\n                <span>AAJCP1487E</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">GSTN:</span>\n                <span>09AAJCP1487E1Z7</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\"></span>\n                <span></span>\n              </div>\n            </div>\n\n          </div>\n\n          {/* Client Details */}\n          <div className=\"client-details\">\n            <span className=\"section-title \">Client's Details</span>\n            <div className=\"address-container\">\n              <div className=\"address-column\">\n                <span className=\"address-title underline\">Delivery Address:</span>\n                <br />\n                <span>P</span>\n                <br />\n                <span>Global Business Park, Tower-A,</span>\n                <br />\n                <span>1st Floor, M.G.Road,</span>\n                <br />\n                <span>122002</span>\n                <br />\n                <span>Haryana, State Code - 06, India</span>\n                <br />\n                <span>GSTN – 06AAACP2626A2Z2</span>\n                <br />\n                <span>Place of Supply – Gurgaon</span>\n              </div>\n              <div className=\"address-column\">\n                <span className=\"address-title underline\">Billing Address:</span>\n                <br />\n                <span>P</span>\n                <br />\n                <span>Global Business Park, Tower-A,</span>\n                <br />\n                <span>1st Floor, M.G.Road,</span>\n                <br />\n                <span>Gurgaon</span>\n                <br />\n                <span>Haryana, State Code - 06, India</span>\n                <br />\n                <span>GSTN – 06AAACP2626A2Z2</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Description */}\n          <div className=\"description-section\">\n            <div className=\"attention-text\">\n              <div className=\"bold\">Kind Attention : Mr. Amit Yadav</div>\n            </div>\n            <div className=\"table-container\">\n              <table className=\"tax-invoice-table\">\n                <thead>\n                  <tr>\n                    <th>Description</th>\n                    <th>SAC Code</th>\n                    <th className=\"amount-column\">Amount (INR)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      Professional Fees for Milestone - Requirement Finalization under Project - Travel Expense Management\n                    </td>\n                    <td>998313</td>\n                    <td className=\"amount-column\">375,000.00</td>\n                  </tr>\n                  <tr>\n                    <td colSpan={2} className=\"total-label\">\n                      Total\n                    </td>\n                    <td className=\"amount-column\">375,000.00</td>\n                  </tr>\n                  <tr>\n                    <td colSpan={2} className=\"total-label\">\n                      IGST @ 18.00%\n                    </td>\n                    <td className=\"amount-column\">67,500.00</td>\n                  </tr>\n                  <tr>\n                    <td colSpan={2} className=\"grand-total-label\">\n                      Total Amount After Tax\n                    </td>\n                    <td className=\"amount-column grand-total\">442,500.00</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div className=\"amount-in-words\">\n              <span className=\"bold\">In Words: INR Four Hundred Forty-Two Thousand Five Hundred Only </span>\n            </div>\n          </div>\n\n          {/* Signature */}\n          <div className=\"signature-section\">\n            <div className=\"signature-container\">\n              <div className=\"signature-space\"></div>\n              <div className=\"signature-text\">Authorised Signatory</div>\n            </div>\n          </div>\n\n          {/* Terms & Conditions */}\n          <div className=\"terms-section\">\n            <div className=\"terms-title\">Terms & Conditions:</div>\n            <ol className=\"terms-list\">\n              <li>\n                This bill is payable on receipt by Cheque/Wire transfer in favor of Polestar Solutions & Services India Pvt.\n                Ltd. In case payment is made by electronic fund transfer, please send details to <a href=\"ajay@polestarllp.com\" target=\"_blank\" rel=\"noopener noreferrer\">ajay@polestarllp.com</a>.\n              </li>\n              <li>TDS certificate, if applicable is to be sent to the above address.</li>\n              <li>Whether GST is payable on Reverse Charge basis? - No</li>\n            </ol>\n          </div>\n\n          {/* Bank Details */}\n          <div className=\"bank-details\">\n            <div className=\"bank-title underline\">Bank Details : </div>\n            <div className=\"bank-grid\">\n              <div className=\"bank-column\">\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">Beneficiary Name : </span>\n                  <span>Polestar Solutions And Services India Pvt. Ltd.</span>\n                </div>\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">Bank Name : </span>\n                  <span>Kotak Mahindra Bank</span>\n                </div>\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">Bank Address : </span>\n                  <span>Aditya Mall, Vaibhav Khand, Ghaziabad - 201014</span>\n                </div>\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">Account No. : </span>\n                  <span>1412387291</span>\n                </div>\n              </div>\n\n              <div className=\"bank-column\">\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">IFSC Code : </span>\n                  <span>KKBK0005289</span>\n                </div>\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">MICR Code : </span>\n                  <span>110485082</span>\n                </div>\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">Routing No. / Swift Code : </span>\n                  <span>KKBKINBBCPC</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\n\n\n","import \"./export-invoice.css\"\nexport default function ExportInvoice(props: any) {\n  const handlePrint = () => {\n    window.print()\n  }\n\n  return (\n    <div className=\"mainContainer\" onClick={() => props?.setDownloadExportPDF(false)}>\n      <div className=\"print-button-container\" onClick={(event) => event.stopPropagation()}>\n          <button onClick={handlePrint} className=\"print-button\">\n            {/* <Printer size={16} /> */}\n            Print Invoice\n          </button>\n        </div>\n      <div className=\"invoice-container\" onClick={(event) => event.stopPropagation()}>\n        {/* Print Button - hidden when printing */}\n        <img className=\"company-img\" src=\"./Polestar Logo.svg\" alt=\"Polestar\" />\n        <h1 className=\"invoice-title \"  >Export Invoice</h1>\n        <div className=\"pdfContainer\">\n          {/* Header */}\n          <div className=\"companyInvoice\">\n            <div className=\"invoice-header\">\n              <div className=\"company-details\">\n                <span className=\"company-name\">Polestar Solutions And Services India Pvt. Ltd.</span>\n                <br />\n                <span>4th Floor, Tower-B, Logix Cyber Park,</span>\n                <br />\n                <span>Plot no. C28 and 29, Sector-62</span>\n                <br />\n                <span>Noida -201309</span>\n                <br />\n                <span>Uttar Pradesh, India</span>\n                <br />\n                <span>Website - <a href=\"https://www.polestarllp.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.polestarllp.com</a></span>\n                <br />\n                <span>CIN No. - U72900UP2017PTC092242</span>\n              </div>\n            </div>\n\n            {/* Invoice Details */}\n            <div className=\"invoice-details\">\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">Invoice No:</span>\n                <span>PSSL/24-25/00 </span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">Invoice Date:</span>\n                <span>2024-04-30</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">Due Date:</span>\n                <span>2024-05-30</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">Terms of Payment:</span>\n                <span>30 Days</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">PO Number:</span>\n                <span></span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">PAN:</span>\n                <span>AAJCP1487E \n                </span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">GSTN :</span>\n                <span>09AAJCP1487E1Z7</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label underline\">IEC :</span>\n                <span>AAJCP1487E</span>\n              </div>\n            </div>\n\n          </div>\n\n          {/* Client Details */}\n          <div className=\"client-details\">\n            <span className=\"section-title \">Client's Details</span>\n            <div className=\"address-container\">\n              <div className=\"address-column\">\n                <span className=\"address-title underline\">Delivery Address:</span>\n                <br />\n                <span>S Ma, Ltd.</span>\n                <br />\n                <span>52-16 Barnett Avenue \n                </span>\n                <br />\n                <span>Long Island City \n                </span>\n                <br />\n                <span>New York 11104 \n                </span>\n                <br />\n                <span>USA \n                </span>\n              </div>\n              <div className=\"address-column\">\n                <span className=\"address-title underline\">Billing Address:</span>\n                <br />\n                <span>S Ma, Ltd. 52-16 \n                </span>\n                <br />\n                <span>Barnett Avenue Long</span>\n                <br />\n                <span>Island City</span>\n                <br />\n                <span>New York 11104 \n                </span>\n                <br />\n                <span>,State Code - , USA \n                </span>\n                <br />\n                <span>GSTN – \n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Description */}\n          <div className=\"description-section\">\n            <div className=\"attention-text\">\n              <div className=\"bold\">Kind Attention : Mr. Oz Saar</div>\n            </div>\n            <div className=\"table-container\">\n            <table className=\"invoice-table\">\n  <thead>\n    <tr>\n      <th>Description</th>\n      <th className=\"amount-column\">Amount (INR)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>\n        <div className=\"amount-description bold\">\n        <span>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span>\n        <span>SUPPLY MEANT FOR EXPORT UNDER BOND OR LETTER OF UNDERTAKING WITHOUT\n        PAYMENT OF INTEGRATED TAX</span>\n        <span>Total Amount Payable</span>\n        </div>\n      </td>\n      <td className=\"amount-column\">\n        <div className=\"amount-usd bold\">\n        <span>1,836.00</span>\n        <span>11,836.00</span>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n            </div>\n            <div className=\"amount-in-words\">\n              <span className=\"bold\">In Words: USD Eleven Thousand Eight Hundred Thirty-Six Only </span>\n            </div>\n          </div>\n\n          {/* Signature */}\n          <div className=\"signature-section\">\n            <div className=\"signature-container\">\n              <div className=\"signature-space\"></div>\n              <div className=\"signature-text\">Authorised Signatory</div>\n            </div>\n          </div>\n\n          {/* Terms & Conditions */}\n          <div className=\"terms-section\">\n            <div className=\"terms-title\">Terms & Conditions:</div>\n            <ol className=\"terms-list\">\n              <li>\n                This bill is payable on receipt by Cheque/Wire transfer in favor of Polestar Solutions & Services India Pvt.\n                Ltd. In case payment is made by electronic fund transfer, please send details to <a href=\"ajay@polestarllp.com\" target=\"_blank\" rel=\"noopener noreferrer\">ajay@polestarllp.com</a>.\n              </li>\n              <li>TDS certificate, if applicable is to be sent to the above address.</li>\n              <li>Whether GST is payable on Reverse Charge basis? - No</li>\n            </ol>\n          </div>\n\n          {/* Bank Details */}\n          <div className=\"bank-details\">\n            <div className=\"bank-title underline\">Bank Details : </div>\n            <div className=\"bank-grid\">\n              <div className=\"bank-column\">\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">Beneficiary Name : </span>\n                  <span>Polestar Solutions And Services India Pvt. Ltd.</span>\n                </div>\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">Bank Name : </span>\n                  <span>Kotak Mahindra Bank</span>\n                </div>\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">Bank Address : </span>\n                  <span>Aditya Mall, Vaibhav Khand, Ghaziabad - 201014</span>\n                </div>\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">Account No. : </span>\n                  <span>1412387291</span>\n                </div>\n              </div>\n\n              <div className=\"bank-column\">\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">IFSC Code : </span>\n                  <span>KKBK0005289</span>\n                </div>\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">MICR Code : </span>\n                  <span>110485082</span>\n                </div>\n                <div className=\"bank-row\">\n                  <span className=\"bank-label\">Routing No. / Swift Code : </span>\n                  <span>KKBKINBBCPC</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\n\n\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"../client/Client.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { ClientMasterService } from \"../../services/masters/client-master/client.service\";\nimport { Chip } from \"primereact/chip\";\nimport { FILE_TYPES } from \"../../enums/file-types.enum\";\nimport { ImageUrl } from \"../../utils/ImageUrl\";\nimport { AccountMasterService } from \"../../services/masters/account-manager-master/accountManager.service\";\nimport { AccountsMasterService } from \"../../services/masters/accounts-master/accounts.service\";\nimport { SalesMasterService } from \"../../services/masters/sales-master/sales.service\";\nimport { PoContractService } from \"../../services/po-contract/poContract.service\";\nimport { TaxMasterService } from \"../../services/masters/tax-service-master/taxMaster.service\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { Button } from \"primereact/button\";\nimport moment from \"moment\";\nimport { InvoiceService } from \"../../services/invoice/invoice.service\";\nimport InvoiceDownload from \"../invoice/taxInvoicePDF/invoiceDownload\";\nimport ExportInvoiceDownload from \"../invoice/exportInvoice/exportInvoiceDownload\";\nimport zIndex from \"@material-ui/core/styles/zIndex\";\nimport CurrencyMasterService from \"../../services/masters/currency-master/currency.service\";\n\nconst InvoiceMaster = () => {\n\n    const clientFormFields: any = {\n        client_name: {\n            inputType: \"singleSelect\",\n            label: \"Client\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        contract_name: {\n            inputType: \"singleSelect\",\n            label: \"Contract\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        currency: {\n            inputType: \"singleSelect\",\n            label: \"Currency\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },        \n        po_number: {\n            inputType: \"inputtext\",\n            label: \"PO Number\",\n            value: null,\n            disable: true,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        po_amount: {\n            inputType: \"inputNumber\",\n            label: \"PO Amount\",\n            value: null,\n            disable: true,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        remain_po_amount: {\n            inputType: \"inputNumber\",\n            label: \"Remain PO Amount\",\n            value: null,\n            disable: true,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        invoice_date: {\n            inputType: \"singleDatePicker\",\n            label: \"Invoice Date\",\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        terms_of_payment: {\n            inputType: \"inputtext\",\n            label: \"Terms of Payment (In Days)\",\n            value: null,\n            disable: true,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        clientBillTo: {\n            inputType: \"multiSelect\",\n            label: \"Client Bill Address\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        clientShipAddress: {\n            inputType: \"multiSelect\",\n            label: \"Client Ship Address\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        clientContact: {\n            inputType: \"singleSelect\",\n            label: \"Contact\",\n            options: [],\n            value: null,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        company_name: {\n            inputType: \"inputtext\",\n            label: \"Company Name\",\n            value: null,\n            disable: true,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        bill_from: {\n            inputType: \"singleSelect\",\n            label: \"Bill From\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        projectService: {\n            inputType: \"singleSelect\",\n            label: \"Service Type\",\n            options: [],\n            value: null,\n            validation: {\n                required: true\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        tax_type: {\n            inputType: \"singleSelect\",\n            label: \"Tax Type\",\n            options: [],\n            value: null,\n            disabled: true,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        tax_code: {\n            inputType: \"multiSelect\",\n            label: \"Tax Code\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        invoice_amount: {\n            inputType: \"inputtext\",\n            label: \"Invoice Amount\",\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        billed_hours: {\n            inputType: \"inputtext\",\n            label: \"Billed Hours\",\n            value: null,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        note_one: {\n            inputType: \"inputtextarea\",\n            label: \"Note 1\",\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-6\",\n            rows: 3,\n        },\n        note_two: {\n            inputType: \"inputtextarea\",\n            label: \"Note 2\",\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-6\",\n            rows: 3,\n        },\n    };\n\n\n\n    const msaFormFields = {\n        start_date: {\n            inputType: \"singleDatePicker\",\n            label: \"Start Date\",\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n        end_date: {\n            inputType: \"singleDatePicker\",\n            label: \"End Date\",\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n\n    };\n\n\n\n    const [countryMaster, setCountryMaster] = useState<any>([]);\n    const [stateMaster, setStateMaster] = useState<any>([]);\n    const [loader, setLoader] = useState(false);\n    const [clientFormPopup, setClientFormPopup] = useState(false);\n    const [isEditClient, setIsEditClient] = useState<boolean>(false);\n    const [isFormValid, setIsFormValid] = useState(true);\n    const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n    const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n    const [cliendData, setCliendData] = useState<any>();\n    const [companyMaster, setCompanyMaster] = useState<any>([]);\n    const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n    const [industryMaster, setIndustryMaster] = useState<any>([]);\n    const [attachments, setAttachments]: any = useState([]);\n    const [digitalSign, setDigitalSign]: any = useState([]);\n    const [logoUrl, setLogoUrl] = useState('');\n    const [signatureUrl, setSignatureUrl] = useState('');\n    const [showNDAAttacment, setShowNDAAttacment] = useState<boolean>(false);\n    const [showMSAAttacment, setShowMSAAttacment] = useState<boolean>(false);\n    const [industryGroupMaster, setIndustryGroupMaster] = useState<any>([]);\n    const [accountManagerMaster, setAccountManagerMaster] = useState<any>([]);\n    const [accountsMaster, setAccountsMaster] = useState<any>([]);\n    const [clientMaster, setClientMaster] = useState<any>([]);\n    const [salesMaster, setSalesMaster] = useState<any>([]);\n    const [showMsaUpdatePopup, setShowMsaUpdatePopup] = useState<boolean>(false);\n    const [clientNameCountry,setClientNameCountry] = useState<any>(\"\");\n    const [currencyList,setCurrencyList] = useState<any>([]);\n\n\n    const [poContractsData, setPoContractData] = useState<any>([]);\n    const [clientListNames, setClientListNames] = useState<any>([]);\n    const [poContractConfData, setPoContractConfData] = useState<any>([]);\n    const [taxMaster, setTaxMaster] = useState<any>([]);\n    const [companyLocationMaster, setCompanyLocationMaster] = useState<any>([]);\n    const [invoiceMasterData, setInvoiceMasterData] = useState<any>([]);\n    const [poMastersConfigData, setPoMastersConfigData] = useState<any>({});\n    const [invoiceItems, setInvoiceItems] = useState<any>([{ id: Date.now(), description: \"\", sacCode: \"\", amount: 0 }]);\n    const [selectedTaxes, setSelectedTaxes] = useState<any>([])\n    const [selectedApplicableTaxes, setSelectedApplicableTaxes] = useState<any>([])\n    const [downloadPDF, setDownloadPDF] = useState<any>(false)\n    const [downloadExportPDF, setDownloadExportPDF] = useState<any>(false)\n    const [idForBillTOiecCode, setIdForBillTOiecCode] = useState<any>()\n    const [iecCodeSubmit, setIecCodeSubmit] = useState<any>()\n\n\n    const [clientFormFieldsStructure, setClientFormFieldsStructure]: any =\n        useState(clientFormFields);\n    const [clientForm, setClientForm] = useState<any>(\n        _.cloneDeep(clientFormFieldsStructure)\n    );\n\n    const [msaFormFieldsStructure, setMsaFormFieldsStructure]: any =\n        useState(msaFormFields);\n    const [msaForm, setMsaForm] = useState<any>(\n        _.cloneDeep(msaFormFieldsStructure)\n    );\n\n    const companyService = new CompanyMasterService();\n    const clientService = new ClientMasterService();\n    const currencyService = new CurrencyMasterService();\n    const invoiceService = new InvoiceService();\n    const accountService = new AccountMasterService();\n    const accountsService = new AccountsMasterService();\n\n    const cookies = new Cookies();\n    const userInfo = cookies.get(\"userInfo\");\n\n    const loggedInUserId = userInfo?.userId;\n    let patchData: any;\n    const countryService = new CountryMasterService();\n    const stateService = new StateMasterService();\n    const industryService = new IndustryMasterService();\n    const salesService = new SalesMasterService();\n\n    const poContractService = new PoContractService();\n    const taxService = new TaxMasterService();\n\n    const countryCurrencyMap : any = {\n        india: \"INR\",\n        usa: \"USD\",\n        europe: \"EUR\",\n        australia: \"AUD\",\n        dubai: \"AED\"\n      };\n\n    const clientMasterColumns = [\n        {\n            label: \"Action\",\n            fieldName: \"action\",\n            textAlign: \"left\",\n            frozen: true,\n            sort: false,\n            filter: false,\n            body: (rowData: any) => (\n                <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n                    <span\n                        className=\"pi pi-pencil\"\n                        style={{ cursor: \"pointer\" }}\n                        title=\"Update\"\n                        onClick={() => onUpdate(rowData)}\n                    ></span>\n                    <span\n                        className={`pi pi-download`}\n                        style={{ cursor: \"pointer\" }}\n                        title=\"Download Invoice\"\n                        //   onClick={() => onDelete(rowData)}\n                        onClick={()=> generateInvoicePDFHandler(rowData)}\n                        // onClick={() => setDownloadPDF(true)}\n                    ></span>\n                    <span\n                        className={`pi pi-download`}\n                        style={{ cursor: \"pointer\" }}\n                        title=\"Download Tax Invoice\" \n                        onClick={()=> generateTaxInvoicePDFHandler(rowData)}\n                    ></span>\n                    {/* <span\n                        className={`pi pi-ellipsis-v`}\n                        style={{ cursor: \"pointer\" }}\n                        title=\"DownloadPDF\"\n                        //   onClick={() => onDelete(rowData)}\n                        onClick={() => setDownloadPDF(true)}\n                    ></span>\n                    <span\n                        className={`pi pi-ellipsis-v`}\n                        style={{ cursor: \"pointer\" }}\n                        title=\"DownloadExportPDF\"\n                        onClick={() => setDownloadExportPDF(true)}\n                    ></span> */}\n\n                </div>\n            ),\n        },\n        {\n            label: \"Invoice Name\",\n            fieldName: \"invoice_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Invoice Name\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`clientTooltip-${rowData.id}`} content={rowData.invoice_name} />\n            ),\n        },\n        {\n            label: \"Client\",\n            fieldName: \"client_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Client\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`clientTooltip-${rowData.id}`} content={rowData.client_name} />\n            ),\n        },\n        {\n            label: \"Contract\",\n            fieldName: \"contract_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Contract\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`contractTooltip-${rowData.id}`} content={rowData.contract_name} />\n            ),\n        },\n        {\n            label: \"PO Number\",\n            fieldName: \"po_number\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"PO Number\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`poNumberTooltip-${rowData.id}`} content={rowData.po_number} />\n            ),\n        },\n        {\n            label: \"PO Amount\",\n            fieldName: \"po_amount\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"PO Amount\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`poAmountTooltip-${rowData.id}`} content={rowData.po_amount} />\n            ),\n        },\n        {\n            label: \"Remain PO Amount\",\n            fieldName: \"remain_po_amount\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Remain PO Amount\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`remainPoAmountTooltip-${rowData.id}`} content={rowData.remain_po_amount} />\n            ),\n        },\n        {\n            label: \"Invoice Date\",\n            fieldName: \"invoice_date\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Invoice Date\",\n            body: (rowData: any) => (\n                <div>\n                    <span\n                        id={`companyNameTooltip-${rowData.id}`}\n                    // data-pr-tooltip={rowData.fromDate}\n                    >\n                        {/* {rowData.fromDate} */}\n                        {rowData?.invoice_date}\n                    </span>\n                    <Tooltip\n                        target={`#companyNameTooltip-${rowData.id}`}\n                        position=\"top\"\n                    />\n                </div>\n            ),\n        },\n        {\n            label: \"Due Date\",\n            fieldName: \"due_date\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Due Date\",\n            body: (rowData: any) => (\n                <div>\n                    <span>                      \n                        {rowData?.due_date}\n                    </span>\n                </div>\n            ),\n        },\n        {\n            label: \"Bill To\",\n            fieldName: \"clientBillTo\",\n            textAlign: \"left\",\n            frozen: false,\n            sort: true,\n            filter: true,\n            body: (rowData: any) => <span>{rowData?.clientBillTo_name}</span>,\n        },\n        {\n            label: \"Shipping Address\",\n            fieldName: \"clientShipAddress\",\n            textAlign: \"left\",\n            frozen: false,\n            sort: true,\n            filter: true,\n            body: (rowData: any) => <span>{rowData?.clientShipAddress_name}</span>,\n        },\n        {\n            label: \"Contact\",\n            fieldName: \"client_contact\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Contact\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`clientContactTooltip-${rowData.id}`} content={rowData.clientContact_name} />\n            ),\n        },\n        {\n            label: \"Bill From\",\n            fieldName: \"bill_from\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Bill From\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`billFromTooltip-${rowData.id}`} content={rowData.bill_from} />\n            ),\n        },\n        {\n            label: \"Project Service\",\n            fieldName: \"projectService\",\n            textAlign: \"left\",\n            frozen: false,\n            sort: true,\n            filter: true,\n            body: (rowData: any) => <span>{rowData?.projectService_names}</span>,\n        },\n        {\n            label: \"Tax Code\",\n            fieldName: \"tax_code\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Tax Code\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`taxCodeTooltip-${rowData.id}`} content={rowData.tax_code} />\n            ),\n        },\n        {\n            label: \"Invoice Amount\",\n            fieldName: \"invoice_amount\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Invoice Amount\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`invoiceAmountTooltip-${rowData.id}`} content={rowData.invoice_amount} />\n            ),\n        },\n        {\n            label: \"Total Amount\",\n            fieldName: \"total_amount\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Total Amount\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`invoiceAmountTooltip-${rowData.id}`} content={rowData.total_amount} />\n            ),\n        },\n        {\n            label: \"GST Total\",\n            fieldName: \"gst_total\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"GST Total\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`invoiceAmountTooltip-${rowData.id}`} content={rowData.gst_total} />\n            ),\n        },\n        {\n            label: \"Final Amount\",\n            fieldName: \"final_amount\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Final Amount\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`invoiceAmountTooltip-${rowData.id}`} content={rowData.final_amount} />\n            ),\n        },\n        {\n            label: \"Note 1\",\n            fieldName: \"note_one\",\n            textAlign: \"left\",\n            sort: false,\n            filter: true,\n            placeholder: \"Note 1\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`noteOneTooltip-${rowData.id}`} content={rowData.note_one} />\n            ),\n        },\n        {\n            label: \"Note 2\",\n            fieldName: \"note_two\",\n            textAlign: \"left\",\n            sort: false,\n            filter: true,\n            placeholder: \"Note 2\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`noteTwoTooltip-${rowData.id}`} content={rowData.note_two} />\n            ),\n        },\n    ];\n\n    const downloadFile = (filePath: any) => {\n        const fileUrl = `${process.env.REACT_APP_API_BASEURL}/${filePath}`;\n        // Create an anchor element and trigger the download\n        const link = document.createElement(\"a\");\n        link.href = fileUrl;\n        link.download = filePath.split(\"/\").pop(); // Extracts file name from the path\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    const viewMSAFile = (filePath: any) => {\n        const signatureUrl = `${process.env.REACT_APP_API_BASEURL}/${filePath}`;\n        // Open the file in a new tab\n        window.open(signatureUrl, \"_blank\");\n    };\n\n\n    const TooltipWrapper = ({ id, content }: any) => (\n        <div>\n            <span id={id}>{content}</span>\n            <Tooltip target={`#${id}`} position=\"top\" />\n        </div>\n    );\n\n    useEffect(() => {\n        const fetchData = async () => {\n            getInvoiceData()\n            getContractMaster();\n            getPoContractConfiguration();\n            getTaxMaster();\n            getCompanyLocationMaster();\n            getPOContractMasterConfigData();\n            getClientMasterData();\n            getCurrencyMaster();   \n        };\n        if (clientFormPopup == false && showConfirmDialogue == false) {\n            fetchData();\n        }\n    }, [clientFormPopup, showConfirmDialogue]);\n\n    const getCurrencyMaster = async () => {\n        try {\n            const response = await currencyService.getCurrencyMasterData();\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                const uniqueMap = new Map();\n        \n                response.data.forEach((item: { currencyCode: string }) => {\n                    if (!uniqueMap.has(item.currencyCode)) {\n                        uniqueMap.set(item.currencyCode, {\n                            label: item.currencyCode,\n                            value: item.currencyCode\n                        });\n                    }\n                });\n                const currencyOptions = Array.from(uniqueMap.values());\n                setCurrencyList(currencyOptions)\n        \n                const form = _.cloneDeep(clientForm);\n                form.currency.options = currencyOptions;\n                setClientForm(form);\n        \n                console.log(\"Currency options (deduplicated):\", currencyOptions);\n            }\n        } catch (error) {\n            console.error(\"Failed to fetch currency data\", error);\n        }        \n    };\n    const getClientMasterData = async () => {\n        try {\n            const response = await clientService.getClientMaster();     \n            if (!response) {\n                console.error('No client data received from API');\n                setClientMaster([]);\n                return [];\n            }\n            console.log('Client data received:', response?.clients);\n            const activeClients = response?.clients?.filter((client: any) => client?.isactive || client?.isActive) || [];\n            setClientMaster(activeClients);\n            return activeClients;\n        } catch (error) {\n            console.error('Error fetching client master data:', error);\n            setClientMaster([]);\n            return [];\n        }\n    };\n\n    const getInvoiceData = async () => {\n        setLoader(true);\n        try {\n            const response = await invoiceService.getInvoicesData();\n            response.invoices.forEach((item: any) => item.invoiceInfo = JSON.parse(item.invoiceInfo))\n\n            const parsedData = response.invoices.map((invoice: any) => {\n                // Remove pdf_path from the invoice object\n                const { pdf_path, ...invoiceWithoutPDF } = invoice;\n                \n                return {\n                    ...invoiceWithoutPDF,\n                    invoiceInfo: invoice.invoiceInfo.map((info: any) => ({\n                        ...info,\n                        taxBreakdown: info.taxBreakdown ? JSON.parse(info.taxBreakdown) : []\n                    }))\n                };\n            });\n            parsedData?.forEach((el: any) => {\n                el.invoice_date = el.invoice_date ? moment(el.invoice_date).format(\"DD-MM-YYYY\") : null;\n                el.due_date = el.due_date ? moment(el.due_date).format(\"DD-MM-YYYY\") : null;\n                el.created_at = el.created_at ? moment(el.created_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n                el.updated_at = el.updated_at ? moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n            });\n            setInvoiceMasterData(parsedData);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n    const getContractMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await poContractService.getPoContractsData();\n\n            setPoContractData(response?.poContracts);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n    // const getPoContractConfiguration = async () => {\n    //     // setLoader(true);\n    //     try {\n    //         const response = await poContractService.getPoContractConfiguration();\n    //         setPoContractConfData(response?.data);\n    //         setClientListNames(response?.data?.map((item: any) => {\n    //             return item.client_name\n    //         }))\n    //         return response?.data\n    //     } catch (error) {\n    //         console.error(error);\n    //     } finally {\n    //         // setLoader(false);\n    //     }\n    // };\n\n    const getPoContractConfiguration = async () => {\n        setLoader(true);\n        try {\n            const response = await poContractService.getPoContractConfiguration();\n\n            if (!response || !response.data) {\n                throw new Error(\"Invalid response from API\");\n            }\n\n            const data = Array.isArray(response.data) ? response.data : [];\n\n            console.log(\"Response Data:\", data);\n\n            // Ensure unique clients based on client_id\n            const uniqueClients = Array.from(\n                new Map(data.map((item: any) => [item.client_id, item])).values()\n            );\n\n            setPoContractConfData(uniqueClients);\n\n            setClientListNames(\n                uniqueClients.map((item: any) => item.client_name || \"Unknown Client\")\n            );\n\n            return uniqueClients;\n        } catch (error) {\n            console.error(\"Error fetching PO contract configuration:\", error);\n\n            // Set an empty array in case of an error to prevent React rendering issues\n            setPoContractConfData([]);\n            setClientListNames([]);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getPOContractMasterConfigData = async () => {\n        setLoader(true);\n        try {\n            const response = await poContractService.getPOContractMasterConfigData();\n            setPoMastersConfigData(response?.data?.data);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getTaxMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await taxService.getTax();\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                console.log('getTaxMaster ', response.data);\n                setTaxMaster(response.data);\n                closeFormPopup();\n            }\n        } catch (error: any) {\n            ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n        }\n    };\n\n    const getCompanyLocationMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await companyService.getCompanyLocationMaster();\n            console.log('setCompanyLocationMaster', response?.locations);\n\n            setCompanyLocationMaster(response?.locations);\n            return response?.locations;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n    const formatTaxDetails = async (tax: any = taxMaster) => {\n        const taxDetails = tax.map((item: any) => item?.taxType);\n        clientFormFieldsStructure.tax_type.options = taxDetails;\n        console.log('clientFormFieldsStructure', tax, taxDetails);\n\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        // await statesFormHandler(clientFormFieldsStructure);\n    };\n\n\n    const getClientMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await clientService.getClientMaster();\n            setClientMaster(response?.clients);\n            return response?.clients;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n\n    const getSalesMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await salesService.getSalesMaster();\n            const temp = response?.salesManagers?.filter((item: any) => item?.isactive || item?.isActive)\n            setSalesMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n    const getIndustryMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await industryService.getIndustryMaster();\n            const temp = response?.industryMasters?.filter((item: any) => item?.isactive || item?.isActive)\n            setIndustryMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getIndustryHeadMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await industryService.getIndustryHeadMaster();\n            const temp = response?.industryHeads?.filter((item: any) => item?.isactive || item?.isActive)\n            setIndustryHeadMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getStateMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await stateService.getStateMaster();\n            const temp = response?.states?.filter((item: any) => item?.isactive || item?.isActive)\n            setStateMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getCountryMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await countryService.getCountryMaster();\n            const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive);\n            setCountryMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getCompanyMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await companyService.getCompanyMaster();\n            const temp = response?.companies?.filter((item: any) => item?.isactive || item?.isActive)\n            setCompanyMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getIndustryGroupMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await industryService.getIndustryGroupMaster();\n            const temp = response?.groupIndustries?.filter((item: any) => item?.isactive || item?.isActive)\n            setIndustryGroupMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getAccountManagerMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await accountService.getAccountMaster();\n            const temp = response?.accountManagers?.filter((item: any) => item?.isactive || item?.isActive)\n            setAccountManagerMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n    const getAccountMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await accountsService.getAccountsMaster();\n            const temp = response?.companyAccounts?.filter((item: any) => item?.isactive || item?.isActive)\n            setAccountsMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n\n\n    const formatCountryDetails = async (countries: any = countryMaster) => {\n        const countrylist = countries.map((country: any) => country?.name);\n        // clientFormFieldsStructure.country_name.options = countrylist;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await statesFormHandler(clientFormFieldsStructure);\n    };\n\n    const formatCompanyDetails = async (companies: any = companyMaster) => {\n        const companyList = companies.map((company: any) => company?.companyName);\n        // clientFormFieldsStructure.companyName.options = companyList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatIndustryHeadDetails = async (\n        industries: any = industryHeadMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.industryHeadName\n        );\n        // clientFormFieldsStructure.industryHeadNames.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatIndustryGroupDetails = async (\n        industries: any = industryGroupMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.groupIndustryName\n        );\n        // clientFormFieldsStructure.industry_group.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatIndustrySubGroupDetails = async (\n        industries: any = industryGroupMaster\n    ) => {\n        console.log('industryGroupMaster', industries);\n\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.subIndustryCategory\n        );\n        // clientFormFieldsStructure.industry_sub_group.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatAccountManagerMasterDetails = async (\n        industries: any = accountManagerMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.name\n        );\n        // clientFormFieldsStructure.account_manager.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n    };\n\n    const formatSalesManagerDetails = async (\n        industries: any = salesMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.name\n        );\n\n        // clientFormFieldsStructure.sales_person.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n    };\n\n    const formatAccountMasterDetails = async (\n        industries: any = accountsMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.bankName\n        );\n        // clientFormFieldsStructure.account_name.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n    };\n\n    const formatIndustry_ClientDetails = async (industries: any = industryMaster) => {\n        const industryList = industries.map(\n            (industry: any) => industry?.industryName\n        );\n        // clientFormFieldsStructure.industry_name.options = industryList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure);\n    };\n\n\n\n    const openSaveForm = async () => {\n        clientForm.client_name.options = clientListNames;\n        clientForm.projectService.options = Array.isArray(poMastersConfigData?.projectService)\n            ? poMastersConfigData?.projectService.map((item: any) => ({\n                label: item?.name,\n                value: item.id.toString(),\n            }))\n            : [];\n\n        const taxDetails = taxMaster.map((item: any) => item?.taxType);\n        clientForm.tax_type.options = taxDetails;\n        console.log(`this is form options`,taxDetails)\n        setClientFormPopup(true);\n    };\n\n    const statesFormHandler = async (form: FormType) => {\n        setClientForm(form);\n    };\n\n    const onUpdate = async (data: any) => {\n        await getContractMaster();\n        await getPoContractConfiguration();\n        await getTaxMaster();\n        await getCompanyLocationMaster();\n        await setCliendData(data);\n        await updateClientMaster(data);\n        await setClientFormPopup(true);\n        await setIsEditClient(true);\n    };\n    // const generateInvoicePDFHandler = async (data: any) => {\n    //     invoiceService\n    //             .UpdateInvoicePDF(data?.invoice_name)\n    //             .then((response: any) => {\n    //                 if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n    //                     console.log(response)\n    //                     ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n    //                 }\n    //             })\n    //             .catch((error: any) => {\n    //                 console.log(error)\n    //                 ToasterService.show(error, CONSTANTS.ERROR);\n    //             });\n    // };\n    // const generateTaxInvoicePDFHandler = async (data: any) => {\n    //     invoiceService\n    //             .UpdateTaxInvoicePDF(data?.invoice_name)\n    //             .then((response: any) => {\n    //                 if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n    //                     console.log(response)\n    //                     ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n    //                 }\n    //             })\n    //             .catch((error: any) => {\n    //                 console.log(error)\n    //                 ToasterService.show(error, CONSTANTS.ERROR);\n    //             });\n    // };\n\n\n    const generateInvoicePDFHandler = async (data: any) => {\n        invoiceService\n                .UpdateInvoicePDF(data?.invoice_name)\n                .then(async (response: any) => {\n                    if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n        \n                        const fileUrl = `${process.env.REACT_APP_API_BASEURL}/invoices/${data.invoice_name}.pdf`;\n                        console.log(\"Downloading PDF from:\", fileUrl);\n        \n                        fetch(fileUrl)\n                            .then(res => res.blob())\n                            .then(blob => {\n                                const url = window.URL.createObjectURL(blob);\n                                const link = document.createElement(\"a\");\n                                link.href = url;\n                                link.setAttribute(\"download\", `${data.invoice_name}.pdf`); // Forces download\n                                document.body.appendChild(link);\n                                link.click();\n                                link.remove();\n                            })\n                            .catch(error => {\n                                console.error(\"Error downloading PDF:\", error);\n                                ToasterService.show(\"Error downloading PDF\", CONSTANTS.ERROR);\n                            });\n                    }\n                })\n                .catch((error: any) => {\n                    console.error(\"Error downloading PDF:\", error);\n                    ToasterService.show(error.message || \"Error downloading PDF\", CONSTANTS.ERROR);\n                });\n        };\n\n    const generateTaxInvoicePDFHandler = async (data: any) => {\n        invoiceService\n                .UpdateTaxInvoicePDF(data?.invoice_name)\n                .then(async (response: any) => {\n                    if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n        \n                        const fileUrl = `${process.env.REACT_APP_API_BASEURL}/taxinvoices/${data.invoice_name}.pdf`;\n                        console.log(\"Downloading PDF from:\", fileUrl);\n        \n                        fetch(fileUrl)\n                            .then(res => res.blob())\n                            .then(blob => {\n                                const url = window.URL.createObjectURL(blob);\n                                const link = document.createElement(\"a\");\n                                link.href = url;\n                                link.setAttribute(\"download\", `${data.invoice_name}.pdf`); // Forces download\n                                document.body.appendChild(link);\n                                link.click();\n                                link.remove();\n                            })\n                            .catch(error => {\n                                console.error(\"Error downloading PDF:\", error);\n                                ToasterService.show(\"Error downloading PDF\", CONSTANTS.ERROR);\n                            });\n                    }\n                })\n                .catch((error: any) => {\n                    console.error(\"Error downloading PDF:\", error);\n                    ToasterService.show(error.message || \"Error downloading PDF\", CONSTANTS.ERROR);\n                });\n        };\n    \n    \n    const onMSAUpdate = (data: any) => {\n        setShowMsaUpdatePopup(true);\n        setCliendData(data);\n    };\n\n    const onPopUpClose = (e?: any) => {\n        setShowConfirmDialogue(false);\n    };\n\n    const updateClientMaster = (data: any) => {\n        try {\n            clientFormFieldsStructure.client_name.options = clientListNames;\n            clientFormFieldsStructure.client_name.disable = true;\n            clientFormFieldsStructure.client_name.options = clientListNames;\n            const taxDetails = taxMaster.map((item: any) => item?.taxType);\n            clientFormFieldsStructure.tax_type.options = taxDetails;\n            console.log(\"ths is check field\",data)\n            const clientData = clientMaster.find((client: any) => client.client_name === data?.client_name);\n            if (clientData) {\n            console.log(\"Country Name:\", clientData?.countryName);\n            clientFormFieldsStructure.currency.value = countryCurrencyMap[clientData?.countryName] || \" \";\n            } else {\n             console.log(\"Country Name not found for the selected client.\");\n            }\n\n            const configData = poContractConfData.find((item: any) => item.client_name == data?.client_name)\n            if (configData) {\n                clientFormFieldsStructure.clientBillTo.options = configData.clientBill?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: concatAddresses(item.address1, item.address2, item.address3),\n                        value: item.id.toString(),\n                        isDefault: index == 0 ? 1 : 0\n                    }\n                })\n                console.log('Updating client form fields:', clientFormFieldsStructure, data, currencyList);\n\n                clientFormFieldsStructure.clientBillTo.value = typeof data?.clientBillTo === \"string\"\n                    ? data.clientBillTo.split(\",\").map((item: any) => item.trim())\n                    : [];\n\n                clientFormFieldsStructure.clientShipAddress.options = configData.clientShip?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: concatAddresses(item.address1, item.address2, item.address3),\n                        value: item.id.toString(),\n                        isDefault: index == 0 ? 1 : 0\n                    }\n                })\n                clientFormFieldsStructure.clientShipAddress.value = typeof data?.clientShipAddress === \"string\"\n                    ? data.clientShipAddress.split(\",\").map((item: any) => item.trim())\n                    : [];\n                clientFormFieldsStructure.clientContact.options = Array.isArray(configData?.contacts) ? configData.contacts?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: item.name,\n                        value: item.id.toString(),\n                        isDefault: index == 0 ? 1 : 0\n                    }\n                }) : []\n\n                clientFormFieldsStructure.clientContact.value = data?.clientContact ? data?.clientContact : [];\n                clientFormFieldsStructure.company_name.value = configData?.companyInfo.companyName;\n            }\n\n            const tempData: any = companyLocationMaster?.filter((item: any) => item?.companyName == clientFormFieldsStructure.company_name.value).map((ele: any) => {\n                return {\n                    label: concatAddresses(ele?.address1, ele?.address2, ele?.address3),\n                    isDefault: ele?.isDefaultAddress\n                }\n            });\n\n  \n            clientFormFieldsStructure.projectService.options = Array.isArray(poMastersConfigData?.projectService)\n                ? poMastersConfigData?.projectService.map((item: any) => ({\n                    label: item?.name,\n                    value: item.id.toString(),\n                }))\n                : [];\n\n            clientFormFieldsStructure.bill_from.options = tempData?.map((ele: any) => ele?.label) || [];\n            clientFormFieldsStructure.bill_from.value = data?.bill_from ? data?.bill_from : \"\";\n\n            clientFormFieldsStructure.client_name.value = data?.client_name || \"\";\n            clientFormFieldsStructure.contract_name.value = data?.contract_name || \"\";\n            clientFormFieldsStructure.po_number.value = data?.po_number || \"\";\n            clientFormFieldsStructure.po_amount.value = data?.po_amount || \"\";\n            clientFormFieldsStructure.remain_po_amount.value = data?.remain_po_amount || \"\";\n            clientFormFieldsStructure.invoice_date.value = data?.invoice_date ? parseDateString(data?.invoice_date) : null;\n            clientFormFieldsStructure.terms_of_payment.value = data?.terms_of_payment || '';\n            // clientFormFieldsStructure.contract_type.value = data?.contract_type || \"\";\n            clientFormFieldsStructure.tax_type.value = data?.tax_type || \"\";\n            clientFormFieldsStructure.currency.options = currencyList || [];\n            clientFormFieldsStructure.currency.value = data?.currency || \"\";\n            clientFormFieldsStructure.tax_code.value = data?.tax_code ? data?.tax_code.split(\",\") : [];\n            clientFormFieldsStructure.invoice_amount.value = data?.invoice_amount || \"\";\n            clientFormFieldsStructure.billed_hours.value = data?.billed_hours || \"\";\n            clientFormFieldsStructure.note_one.value = data?.note_one || \"\";\n            clientFormFieldsStructure.note_two.value = data?.note_two || \"\";\n            clientFormFieldsStructure.projectService.value = data?.projectService ? data?.projectService : \"\";\n\n            // clientFormFieldsStructure.po_number.disable = true;\n            clientFormFieldsStructure.billed_hours.disable = true;\n            // clientFormFieldsStructure.invoice_amount.disable = true;\n            clientFormFieldsStructure.contract_name.disable = true;\n\n            setClientForm(_.cloneDeep(clientFormFieldsStructure));\n\n            setInvoiceItems(data.invoiceInfo.map((item: any) => ({\n                description: item.description,\n                sacCode: item.sacCode,\n                amount: item.amount,\n                taxBreakdown: item.taxBreakdown\n            })));\n\n            setSelectedTaxes(data.invoiceInfo.flatMap((item: any) => item.taxBreakdown));\n\n            console.log(\"Updated form data:\", clientFormFieldsStructure);\n        } catch (error) {\n            console.error(\"Error updating client master form:\", error);\n        }\n    };\n\n    const patchInvoiceData = (data: any) => {\n        if (Array.isArray(data)) {\n            setInvoiceItems(data.map((item) => ({\n                id: item.id || Date.now(),\n                description: item.description || \"\",\n                sacCode: item.sacCode || \"\",\n                amount: item.amount || 0\n            })));\n        }\n    };\n\n\n    const createNewState = (event: FormEvent) => {\n        event.preventDefault();\n        let companyValidityFlag = true;\n        const companyFormValid: boolean[] = [];\n\n        _.each(clientForm, (item: any) => {\n            if (item?.validation?.required) {\n                companyFormValid.push(item.valid);\n                companyValidityFlag = companyValidityFlag && item.valid;\n            }\n        });\n\n        setIsFormValid(companyValidityFlag);\n\n        const countryId =\n            countryMaster.find(\n                (country: any) => country.name === clientForm.country_name.value\n            )?.id ?? null;\n\n        if (companyValidityFlag) {\n            const obj = {\n                stateName: clientForm?.stateName?.value,\n                stateCode: clientForm?.stateCode?.value,\n                gstCode: clientForm?.gstCode?.value,\n                countryId: countryId,\n                isActive: 1,\n                updatedBy: loggedInUserId,\n            };\n\n            if (!cliendData?.id) {\n                stateService\n                    .createStateMaster(obj)\n                    .then((response: any) => {\n                        if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                            setCliendData({});\n                            closeFormPopup();\n                            ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                        }\n                    })\n                    .catch((error: any) => {\n                        setCliendData({});\n                        ToasterService.show(error, CONSTANTS.ERROR);\n                    });\n            } else {\n                const updatePayload = { ...obj, stateId: cliendData?.id };\n\n                stateService\n                    .updateStateMaster(updatePayload)\n                    .then((response: any) => {\n                        if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                            setCliendData({});\n                            closeFormPopup();\n                            ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                        }\n                    })\n                    .catch((error: any) => {\n                        setCliendData({});\n                        ToasterService.show(error, CONSTANTS.ERROR);\n                    });\n            }\n        } else {\n            ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n        }\n    };\n\n    const onDelete = (data: any) => {\n        patchData = data;\n        setActionPopupToggle({\n            displayToggle: false,\n            title: \"Delete\",\n            message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n                ? \"activate\"\n                : \"deactivate\"\n                } this record?`,\n            acceptFunction: confirmDelete,\n            rejectFunction: onPopUpClose,\n            askForDeactivationDate: data?.isactive || data?.is_active || data?.isActive,\n        });\n        setShowConfirmDialogue(true);\n    };\n\n    const confirmDelete = (deactivationDate?: Date) => {\n        setLoader(true);\n        console.log('deactivationDate', deactivationDate);\n\n        clientService\n            .deactivateClientMaster({ ...patchData, loggedInUserId, deactivationDate: deactivationDate ? formatDate(deactivationDate) : null, })\n            .then(() => {\n                setLoader(false);\n                setShowConfirmDialogue(false);\n                ToasterService.show(\n                    `Client record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n                    } successfully`,\n                    CONSTANTS.SUCCESS\n                );\n            })\n            .catch((error) => {\n                setLoader(false);\n                return false;\n            });\n    };\n\n    const closeFormPopup = () => {\n        setClientFormPopup(false);\n        setIsEditClient(false);\n        setCliendData({});\n        setClientFormFieldsStructure(_.cloneDeep(clientFormFields));\n        setClientForm(_.cloneDeep(clientFormFields));\n        setShowMsaUpdatePopup(false);\n        setMsaForm(_.cloneDeep(msaFormFields));\n        setAttachments([]);\n        setDigitalSign([]);\n        setSignatureUrl('');\n        setLogoUrl('');\n        setInvoiceItems([{ id: Date.now(), description: \"\", sacCode: \"\", amount: 0 }])\n    };\n\n    const parseDateString = (dateString: any) => {\n        if (!dateString) return new Date();\n        const date: any = new Date(dateString);\n        if (isNaN(date)) return new Date();\n        const year = date.getFullYear();\n        const month: any = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day: any = String(date.getDate()).padStart(2, \"0\");\n        return new Date(year, month - 1, day);\n    };\n\n    const formatDate = (dateString: any) => {\n        if (!dateString) return null;\n        const date = new Date(dateString);\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        return `${year}/${month}/${day}`;\n    };\n\n    function concatAddresses(address1: string, address2: string, address3: string) {\n        // Check for null/undefined values and join non-empty addresses\n        return [address1, address2, address3].filter((addr) => addr).join(\", \");\n    }\n\n    const filterTaxes = (taxMaster: any, taxTypes: any) => {\n        return taxMaster.filter((tax: any) => taxTypes.includes(tax.taxFieldName));\n    };\n    useEffect(() => {\n        const form = _.cloneDeep(clientForm);\n        console.log(`this is country`, clientNameCountry)\n        if (clientNameCountry.toLowerCase() !== \"india\") {\n            form.tax_type.value = 'Export';\n            form.tax_type.disable = true;\n            form.tax_code.value = null; \n            form.tax_code.validation.required = false;\n            setClientForm(form);\n        } else {\n            const taxDetails = taxMaster.map((item: any) => ({\n                label: item?.taxType,\n                value: item?.taxType\n            }));\n            form.tax_type.options = taxDetails;\n            form.tax_type.disable = false;\n            form.tax_type.value = null;\n            form.tax_code.value = null;\n            form.tax_code.validation.required = true;\n            setClientForm(form);\n        }\n    }, [clientNameCountry]);\n    \n\n    const clientFormHandler = async (currentForm: FormType) => {\n        const form = _.cloneDeep(currentForm);\n\n\n        console.log('form handler checking ---->>> ', form);\n\n        // if (form.client_name?.value !== clientForm?.client_name?.value) {\n        const selectedClient = form.client_name?.value\n        if (selectedClient) {\n            console.log(`this is client datata`,form)\n            const tempData = poContractsData\n                ?.filter((item: any) => item?.client_name === selectedClient)\n                .map((ele: any) => ele?.po_name)\n                .filter((name: any) => name !== null && name !== undefined); // Remove null/undefined values\n\n            form.contract_name.options = tempData || [];\n            const clientData = clientMaster.find((client: any) => client.client_name === selectedClient);\n             if (clientData) {\n        //   console.log(\"Country Name:\", clientData.countryName,form);\n          setClientNameCountry(clientData.countryName);\n          const country = clientNameCountry?.toLowerCase();\n          form.currency.value = countryCurrencyMap[country] || \" \";\n           } else {\n              console.log(\"Country Name not found for the selected client.\");\n         }\n        }\n        if ((form.contract_name?.value != clientForm?.contract_name?.value) && form.contract_name?.value) {\n            const selectedContract = poContractsData?.filter((item: any) => item?.client_name === selectedClient)?.find((ele: any) => ele?.po_name == form.contract_name?.value)\n            form.po_number.value = selectedContract?.poNumber;\n            form.po_amount.value = selectedContract?.poAmount;\n            form.terms_of_payment.value = selectedContract?.creditPeriod?.toString() || \"\";\n            form.remain_po_amount.value = selectedContract?.dueAmount;\n            form.company_name.value = selectedContract?.companyName;\n\n            const configData = poContractConfData.find((item: any) => item.client_name == form.client_name.value)\n            console.log('configData', configData, selectedContract, form.company_name.value);\n\n                if (configData) {\n                const seenIds = new Set();\n\n                const seen = new Set();\n\n                form.clientBillTo.options = configData.clientBill\n                ?.filter((item: any) => {\n                    const address = concatAddresses(item.address1, item.address2, item.address3);\n                    const key = `${item.id}-${address}`;\n                    if (item.id && !seen.has(key)) {\n                    seen.add(key);\n                    return true;\n                    }\n                    return false;\n                })\n                .map((item: any) => {\n                    const address = concatAddresses(item.address1, item.address2, item.address3);\n                    setIdForBillTOiecCode(item.id.toString());\n                    console.log(`ajidhsiahwiasnjkdaw`, item.id.toString());\n\n                    return {\n                    label: address,\n                    value: item.id.toString(),\n                    isDefault: address === selectedContract?.masterNames?.clientBillTo_names ? 1 : 0\n                    };\n                });\n                console.log(`adsasdasdasdasda`,configData,idForBillTOiecCode)\n                configData?.clientBill?.map((item: any) => {\n                    if (item.id?.toString() === idForBillTOiecCode) {\n                        setIecCodeSubmit( item.iec_code);\n                      console.log(\"Matched IEC Code:\", item.iec_code);\n                    }\n                    return null; // or just don't return anything if you don't need to collect results\n                  });\n                  \n                const defaultBillItem = form.clientBillTo.options?.find((ele: any) => ele.isDefault == 1);\n                if (defaultBillItem && defaultBillItem?.value) {\n                    form.clientBillTo.value = [defaultBillItem?.value.toString()];\n                }\n                else {\n                    form.clientBillTo.value = null;\n                }\n                form.clientShipAddress.options = configData.clientShip?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: concatAddresses(item.address1, item.address2, item.address3),\n                        value: item.id.toString(),\n                        isDefault: concatAddresses(item.address1, item.address2, item.address3) == selectedContract?.masterNames?.clientShipAddress_names ? 1 : 0\n                    }\n                })\n                const defaultShipItem = form.clientShipAddress?.options?.find((ele: any) => ele.isDefault == 1);\n                if (defaultShipItem && defaultShipItem?.value) {\n                    form.clientShipAddress.value = [defaultShipItem?.value.toString()];\n                }\n                else {\n                    form.clientShipAddress.value = null;\n                }\n                form.clientContact.options = Array.isArray(configData?.contacts) ? configData.contacts?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: item.name,\n                        value: item.id.toString(),\n                        isDefault: index == 0 ? 1 : 0\n                    }\n                }) : []\n                const defaultContact = form.clientContact?.options?.find((ele: any) => ele.isDefault == 1);\n                if (defaultContact && defaultContact?.value) {\n                    form.clientContact.value = defaultContact?.value.toString();\n                }\n                else {\n                    form.clientContact.value = null;\n                }\n\n                if (form.company_name.value) {\n                    const tempData: any = companyLocationMaster?.filter((item: any) => item?.companyName == form.company_name.value).map((ele: any) => {\n                        return {\n                            label: concatAddresses(ele?.address1, ele?.address2, ele?.address3),\n                            isDefault: ele?.isDefaultAddress\n                        }\n                    });\n                    console.log('tempData', tempData?.map((ele: any) => ele?.label), tempData?.find((ele: any) => ele?.isDefault));\n\n                    form.bill_from.options = tempData?.map((ele: any) => ele?.label) || [];\n                    form.bill_from.value = tempData?.find((ele: any) => ele?.isDefault)?.label;\n                }\n            }\n\n        }\n        \n\n        if (form?.tax_type?.value) {\n            const taxCodeOptions = taxMaster?.filter((tax: any) => tax?.taxType == form?.tax_type?.value)?.map((item: any) => item?.taxFieldName);\n            if (clientNameCountry.toLowerCase() !== \"india\") {\n                if (!taxCodeOptions.includes(\"Zero\")) {\n                    taxCodeOptions.unshift(\"Zero\");\n                }\n            \n                // Only default to \"Zero\" if nothing is selected\n                if (!form.tax_code.value ) {\n                    form.tax_code.value = [\"Zero\"];\n                }\n            }\n           form.tax_code.options = taxCodeOptions;\n           \n        }        \n\n        if (form?.tax_code?.value) {\n            const tempSelectedTaxes = filterTaxes(taxMaster, form?.tax_code?.value);\n            setSelectedTaxes(tempSelectedTaxes)\n        }\n\n        // }\n\n        setClientForm(form);\n    };\n\n    const getNamesFromOptions = (field: any) => {\n        if (!field?.options || !Array.isArray(field.value)) return '';\n        return field.value\n            .map((value: string) => field.options.find((item: any) => item.value === value)?.label || '')\n            .filter((name: string) => name !== '')\n            .join(', ');\n    };\n\n\n    const getFinancialYear = (dateString: any) => {\n        const date = new Date(dateString);\n        let year = date.getFullYear();\n        let nextYear = year + 1;\n\n        // Financial year logic (April to March)\n        if (date.getMonth() < 3) { // If Jan, Feb, or March\n            year -= 1;\n            nextYear -= 1;\n        }\n\n        return `${year.toString().slice(-2)}-${nextYear.toString().slice(-2)}`;\n    };\n\n    const getClientAbbreviation = (clientName: any) => {\n        if (!clientName) return \"\";\n        return clientName.split(\" \").map((word: any) => word[0]).join(\"\").toUpperCase();\n    };\n\n    const calculateDueDate = (invoiceDate: Date, days: number) => {\n        const dueDate = new Date(invoiceDate);\n        dueDate.setDate(dueDate.getDate() + days);\n        return dueDate;\n    };\n\n    const createNewClient = async (event: FormEvent) => {\n        event.preventDefault();\n        let companyValidityFlag = true;\n\n        _.each(clientForm, (item: any) => {\n            if (item?.validation?.required) {\n                companyValidityFlag = companyValidityFlag && item.value;\n            }\n        });\n\n        setIsFormValid(companyValidityFlag);\n\n        // Prepare invoice data\n        const invoiceData = {\n            invoiceItems: invoiceItems.map((item: any) => ({\n                description: item.description,\n                sacCode: item.sacCode,\n                amount: item.amount\n            })),\n            totalAmount: totalAmount.toFixed(2),\n            gstTotal: gstTotal.toFixed(2),\n            finalAmount: (totalAmount + gstTotal).toFixed(2),\n            taxBreakdown: taxCalculations.map((tax: any) => ({\n                taxFieldName: tax.taxFieldName,\n                taxPercentage: tax.taxPercentage,\n                calculatedAmount: tax.calculatedAmount.toFixed(2)\n            }))\n        };\n\n        console.log(\"Final Invoice Data:\", invoiceData, clientForm);\n\n        if (!companyValidityFlag) {\n            ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n            return;\n        }\n\n        // Extract values from form\n        const poAmount = parseFloat(clientForm.remain_po_amount.value) || 0;\n        const invoiceAmount = parseFloat(clientForm.invoice_amount.value) || 0;\n\n        // Validation checks\n        if (invoiceAmount > poAmount) {\n            ToasterService.show(\"Invoice Amount cannot be greater than remain PO Amount!\", CONSTANTS.ERROR);\n            return;\n        }\n\n        if (parseFloat(invoiceData.totalAmount) !== invoiceAmount) {\n            ToasterService.show(\"Total Amount must match Invoice Amount!\", CONSTANTS.ERROR);\n            return;\n        }\n\n        console.log('Processing with valid data:', poContractsData, clientForm, poContractsData.find((item: any) => item.po_name === clientForm.contract_name.value));\n\n        const clientId = poContractConfData.find((item: any) => item.client_name === clientForm.client_name.value)?.client_id || '';\n        const contractId = poContractsData.find((item: any) => item.po_name === clientForm.contract_name.value)?.clientId || '';\n        const invoiceBillFromId = companyLocationMaster.find((el: any) => concatAddresses(el.address1, el?.address2, el?.address3) == clientForm.bill_from.value)?.id ?? null;\n        const taxTypeId = taxMaster.find((el: any) => el?.taxType == clientForm.tax_type.value)?.id ?? null;\n\n        let taxCodeId = \"\";\n        clientForm?.tax_code?.value?.forEach((item: any) => {\n            const id = taxMaster?.find((com: any) => com?.taxFieldName == item)?.id ?? null;\n            if (id != null) {\n                taxCodeId = taxCodeId != \"\" ? taxCodeId + \",\" + id : id;\n            }\n        });\n\n        const formData: any = new FormData();\n        const clientAbbr = getClientAbbreviation(clientForm.client_name.value);\n        const financialYear = getFinancialYear(clientForm.invoice_date.value);\n        const invoiceName = `${clientAbbr}/${financialYear}`;\n\n        // Calculate due date\n        const invoiceDate = clientForm.invoice_date.value;\n        const termsOfPayment = parseInt(clientForm.terms_of_payment.value) || 0;\n        const dueDate = calculateDueDate(invoiceDate, termsOfPayment);\n\n        const obj = {\n            client_name: clientForm.client_name.value || '',\n            client_id: clientId,\n            invoice_name: invoiceName,\n            contract_name: clientForm.contract_name.value || '',\n            contract_id: contractId,\n            po_number: clientForm.po_number.value || '',\n            // po_amount: poAmount.toFixed(2),\n            po_amount: clientForm.po_amount.value || '',\n            remain_po_amount: clientForm.remain_po_amount.value || '',\n            invoice_date: clientForm.invoice_date.value ? formatDate(clientForm.invoice_date.value) : null,\n            due_date: formatDate(dueDate),\n            terms_of_payment: clientForm.terms_of_payment.value || '',\n            iec_code: iecCodeSubmit || '',\n            clientBillTo: clientForm.clientBillTo.value?.toString() || '',\n            clientShipAddress: clientForm.clientShipAddress.value?.toString() || '',\n            clientContact: clientForm.clientContact.value?.toString() || '',\n            company_name: clientForm.company_name.value || '',\n            bill_from: clientForm.bill_from.value || '',\n            invoice_bill_from_id: invoiceBillFromId,\n            // contract_type: clientForm.contract_type.value || '',\n            projectService_names: clientForm.projectService.options.find((item: any) => item.value === clientForm.projectService.value)?.label || '',\n            projectService: clientForm.projectService.value || '',\n            tax_type: clientForm.tax_type.value || '',\n            currency: clientForm.currency.value?.value || clientForm.currency.value || '',\n            tax_type_id: taxTypeId,\n            tax_code: clientForm.tax_code.value?.toString() || '',\n            tax_code_id: taxCodeId,\n            invoice_amount: invoiceAmount.toFixed(2),\n            billed_hours: clientForm?.billed_hours?.value || '',\n            note_one: clientForm.note_one.value || '',\n            note_two: clientForm.note_two.value || '',\n            clientBillTo_name: getNamesFromOptions(clientForm.clientBillTo),\n            clientShipAddress_name: getNamesFromOptions(clientForm.clientShipAddress),\n            // clientContact_name: getNamesFromOptions(clientForm.clientContact),\n            clientContact_name: clientForm.clientContact.options.find((item: any) => item.value === clientForm.clientContact.value[0])?.label || '',\n            total_amount: invoiceData.totalAmount,\n            final_amount: invoiceData.finalAmount,\n            gst_total: invoiceData.gstTotal,\n            invoiceData: JSON.stringify(invoiceData),\n            updated_by: loggedInUserId,\n            isActive: 1\n        };\n\n        Object.entries(obj).forEach(([key, value]: any) => {\n            formData.set(key, value);\n        });\n\n        console.log(\"Final formData:\", obj, formData);\n\n        if (!cliendData?.id) {\n            invoiceService\n                .createInvoice(formData)\n                .then((response: any) => {\n                    if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                        setCliendData({});\n                        closeFormPopup();\n                        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                    }\n                })\n                .catch((error: any) => {\n                    setCliendData({});\n                    ToasterService.show(error, CONSTANTS.ERROR);\n                });\n        } else {\n            const updatePayload = { ...obj, id: cliendData?.id, invoice_name: cliendData?.invoice_name };\n\n            Object.entries(updatePayload).forEach(([key, value]: any) => {\n                formData.set(key, value);\n            });\n\n            invoiceService\n                .updateInvoice(formData)\n                .then((response: any) => {\n                    if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                        setCliendData({});\n                        closeFormPopup();\n                        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                    }\n                })\n                .catch((error: any) => {\n                    setCliendData({});\n                    ToasterService.show(error, CONSTANTS.ERROR);\n                });\n        }\n    };\n\n    const addRow = () => {\n        setInvoiceItems([...invoiceItems, { id: Date.now(), description: \"\", sacCode: \"\", amount: 0 }]);\n    };\n\n    const handleInputChange = (e: any, index: any, field: any) => {\n        const updatedItems = [...invoiceItems];\n        updatedItems[index][field] = e.target.value;\n        setInvoiceItems(updatedItems);\n    };\n\n    const handleAmountChange = (e: any, index: any) => {\n        const updatedItems = [...invoiceItems];\n        updatedItems[index].amount = e.value;\n        setInvoiceItems(updatedItems);\n    };\n\n    const totalAmount = invoiceItems.reduce((sum: any, item: any) => sum + (parseFloat(item.amount) || 0), 0);\n\n    const gstAmount = selectedTaxes.reduce((sum: any, tax: any) => sum + (totalAmount * (tax.taxPercentage / 100)), 0);\n\n    const taxCalculations = selectedTaxes.map((tax: any) => ({\n        ...tax,\n        calculatedAmount: totalAmount * (tax.taxPercentage / 100)\n    }));\n\n    const gstTotal = taxCalculations.reduce((sum: any, tax: any) => sum + tax.calculatedAmount, 0);\n\n    return loader ? (\n        <Loader />\n    ) : (\n        <>\n        <div style={{ zIndex: 10 }}>\n        {downloadPDF ? (\n            <InvoiceDownload setDownloadPDF={setDownloadPDF} />\n        ) : downloadExportPDF ? (\n            <ExportInvoiceDownload setDownloadExportPDF={setDownloadExportPDF} />\n        ) : null}\n        </div>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"end\",\n                            marginBottom: \"0.5em\",\n                        }}\n                    >\n                        <ButtonComponent\n                            label=\"Add New Invoice\"\n                            icon=\"pi pi-check\"\n                            iconPos=\"right\"\n                            submitEvent={openSaveForm}\n                        />\n                    </div>\n                    <p className=\"m-0\">\n                        <DataTableBasicDemo\n                            data={invoiceMasterData}\n                            column={clientMasterColumns}\n                            showGridlines={true}\n                            resizableColumns={true}\n                            rows={20}\n                            paginator={true}\n                            sortable={true}\n                            headerRequired={true}\n                            scrollHeight={\"calc(100vh - 200px)\"}\n                            downloadedfileName={\"Invoice\"}\n                        />\n                        {showConfirmDialogue ? (\n                            <ConfirmDialogue\n                                actionPopupToggle={actionPopupToggle}\n                                onCloseFunction={onPopUpClose}\n                            />\n                        ) : null}\n                    </p>\n                    {clientFormPopup ? (\n                        <div className=\"popup-overlay md-popup-overlay\">\n                            <div className=\"popup-body md-popup-body stretchLeft\">\n                                <div className=\"popup-header \">\n                                    <div\n                                        className=\"popup-close\"\n                                        onClick={() => {\n                                            closeFormPopup();\n                                        }}\n                                    >\n                                        <i className=\"pi pi-angle-left\"></i>\n                                        <h4 className=\"popup-heading\">{isEditClient ? 'Update' : 'Add New'} Invoice</h4>\n                                    </div>\n                                    <div\n                                        className=\"popup-right-close\"\n                                        onClick={() => {\n                                            closeFormPopup();\n                                        }}\n                                    >\n                                        &times;\n                                    </div>\n                                </div>\n                                <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n                                    <FormComponent\n                                        form={_.cloneDeep(clientForm)}\n                                        formUpdateEvent={clientFormHandler}\n                                        isFormValidFlag={isFormValid}\n                                    ></FormComponent>\n\n\n                                    <div>\n                                        {/* Header with Button */}\n                                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"10px\" }}>\n                                            <h5 style={{ margin: 0, fontWeight: \"600\", color: \"#333\" }}>Add Invoice Items Detail</h5>\n                                            <Button\n                                                onClick={addRow}\n                                                label=\"Add Row\"\n                                                style={{\n                                                    backgroundColor: \"#007bff\",\n                                                    color: \"white\",\n                                                    padding: \"4px 12px\",\n                                                    borderRadius: \"5px\",\n                                                    fontSize: \"14px\",\n                                                    fontWeight: \"500\",\n                                                    border: \"none\"\n                                                }}\n                                            />\n                                        </div>\n\n                                        {/* Styled Table */}\n                                        <DataTable\n                                            value={invoiceItems}\n                                            responsiveLayout=\"scroll\"\n                                            style={{\n                                                border: \"1px solid #ddd\",\n                                                borderRadius: \"5px\",\n                                                boxShadow: \"0px 2px 5px rgba(0,0,0,0.1)\",\n                                                overflow: \"hidden\"\n                                            }}\n                                        >\n                                            <Column field=\"description\" header=\"Description\" body={(rowData, { rowIndex }) => (\n                                                <InputText\n                                                    value={rowData.description}\n                                                    onChange={(e) => handleInputChange(e, rowIndex, \"description\")}\n                                                    style={{\n                                                        height: \"28px\",\n                                                        fontSize: \"14px\",\n                                                        padding: \"4px 8px\",\n                                                        borderRadius: \"4px\",\n                                                        border: \"1px solid #ccc\",\n                                                        width: \"100%\"\n                                                    }}\n                                                />\n                                            )} />\n                                            <Column field=\"sacCode\" header=\"SAC Code\" body={(rowData, { rowIndex }) => (\n                                                <InputText\n                                                    value={rowData.sacCode}\n                                                    onChange={(e) => handleInputChange(e, rowIndex, \"sacCode\")}\n                                                    style={{\n                                                        height: \"28px\",\n                                                        fontSize: \"14px\",\n                                                        padding: \"4px 8px\",\n                                                        borderRadius: \"4px\",\n                                                        border: \"1px solid #ccc\",\n                                                        width: \"100%\"\n                                                    }}\n                                                />\n                                            )} />\n                                            <Column field=\"amount\" header=\"Amount\" body={(rowData, { rowIndex }) => (\n                                                <InputNumber\n                                                    value={rowData.amount}\n                                                    onValueChange={(e) => handleAmountChange(e, rowIndex)}\n                                                    mode=\"decimal\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        height: \"28px\",\n                                                        fontSize: \"14px\",\n                                                        padding: \"6px 10px\",\n                                                        textAlign: \"right\",\n                                                        border: \"1px solid #ccc\",\n                                                        borderRadius: \"4px\",\n                                                        backgroundColor: \"#fff\",\n                                                        outline: \"none\",\n                                                        display: 'flex',\n                                                        alignItems: 'center',\n                                                        transition: \"border-color 0.2s ease-in-out\"\n                                                    }}\n                                                    inputStyle={{\n                                                        width: \"100%\",\n                                                        height: \"28px\",\n                                                        padding: \"0px\",\n                                                        border: \"none\", // Ensures only one border is applied\n                                                        outline: \"none\",\n                                                        backgroundColor: \"transparent\"\n                                                    }}\n                                                />\n                                            )} />\n                                        </DataTable>\n\n                                        {/* Total Calculation UI */}\n                                        <div style={{\n                                            textAlign: \"right\",\n                                            padding: \"15px\",\n                                            marginTop: \"10px\",\n                                            backgroundColor: \"#f8f9fa\",\n                                            borderRadius: \"5px\",\n                                            boxShadow: \"0px 1px 4px rgba(0,0,0,0.1)\"\n                                        }}>\n                                            <h6 style={{ marginBottom: \"5px\", fontWeight: \"600\" }}>Total: {totalAmount.toFixed(2)}</h6>\n                                            {taxCalculations.map((tax: any, index: any) => (\n                                                <h6 key={index} style={{ marginBottom: \"5px\", fontSize: \"14px\", color: \"#555\" }}>\n                                                    {tax.taxFieldName}@{tax.taxPercentage}%: {tax.calculatedAmount.toFixed(2)}\n                                                </h6>\n                                            ))}\n                                            <h6 style={{ marginBottom: \"5px\", fontWeight: \"600\", color: \"#333\" }}>Total GST: {gstTotal.toFixed(2)}</h6>\n                                            <h6 style={{ fontWeight: \"700\", fontSize: \"16px\", color: \"#222\" }}>Total Amount: {(totalAmount + gstTotal).toFixed(2)}</h6>\n                                        </div>\n                                    </div>\n\n\n                                </div>\n\n                                <div className=\"popup-lower-btn\">\n                                    <ButtonComponent\n                                        label=\"Submit\"\n                                        icon=\"pi pi-check\"\n                                        iconPos=\"right\"\n                                        submitEvent={createNewClient}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    ) : null}\n                </>\n    );\n};\n\nexport default InvoiceMaster;\n\n","import { APIURLS } from '../../constants/ApiUrls';\nimport { HTTPService } from '../http-service/http-service';\n\nexport class InvoiceService {\n  // Fetch all invoices\n  getInvoicesData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_INVOICES);\n      return response?.data;\n    } catch (err) {\n      console.error('Error fetching invoices:', err);\n      return {};\n    }\n  };\n\n  // Create a new invoice\n  createInvoice = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id ? APIURLS.UPDATE_INVOICE : APIURLS.CREATE_INVOICE,\n        formData\n      );\n      return response?.data;\n    } catch (error) {\n      console.error('Error creating invoice:', error);\n      return error;\n    }\n  };\n\n  // Update an existing invoice\n  updateInvoice = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_INVOICE,\n        formData\n      );\n      return response?.data;\n    } catch (error) {\n      console.error('Error updating invoice:', error);\n      return error;\n    }\n  };\n\n  // Activate/Deactivate an invoice\n  activateDeactivateInvoice = async (data: any) => {\n    try {\n      const body = {\n        id: data.id, // Assuming `id` represents the Invoice ID\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_INVOICE_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      console.error('Error activating/deactivating invoice:', err);\n      return {};\n    }\n  };\n\n  UpdateInvoicePDF = async (invoiceNumber: any) => {\n    try {\n        const response = await HTTPService.postRequest(\n            APIURLS.POST_GENERATE_INVOICE_PDF,  \n            { invoice_number: invoiceNumber } \n        );\n\n        return response?.data;\n    } catch (err) {\n        return {};\n    }\n};\nUpdateTaxInvoicePDF = async (invoiceNumber: any) => {\n  try {\n      const response = await HTTPService.postRequest(\n          APIURLS.POST_GENETARE_TAX_PDF,  \n          { invoice_number: invoiceNumber } \n      );\n\n      return response?.data;\n  } catch (err) {\n      return {};\n  }\n};\n\nGetInvoiceDownloadPDF = async () => {\n    try {\n        const response = await HTTPService.getRequest(APIURLS.GET_GENERATE_INVOICE_PDF)\n        return response?.data\n    } catch (err) {\n        return {}\n    }\n}\n\n}\n\n\n","import moment from \"moment\";\nimport { APIURLS } from \"../../../constants/ApiUrls\";\nimport { AuthService } from \"../../auth-service/auth.service\";\nimport { HTTPService } from \"../../http-service/http-service\";\n\nexport class AccountMasterService {\n  getAccountMaster = async (countryId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_ACCOUNT_MANAGER_MASTER, {\n        countryId: countryId ? countryId : null,\n      });\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  createAccountMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_ACCOUNT_MANAGER_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateAccountMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_ACCOUNT_MANAGER_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateAccountMaster = async (data: any) => {\n    try {\n      console.log(`master mastermaster`,data)\n      const body = {\n        accountManagerId: data.id,\n        industryHeadIds: data.industryHeadIds,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n        deactivationDate:data?.deactivationDate?moment(new Date(data?.deactivationDate)).format('YYYY-MM-DD'): null\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_ACCOUNT_MANAGER_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n}\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class AccountsMasterService {\n  getAccountsMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_ACCOUNTS_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createAccountsMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_ACCOUNTS_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateAccountsMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_ACCOUNTS_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateAccountsMaster = async (data: any) => {\n    try {\n      const body = {\n        accountId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_ACCOUNTS_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import { APIURLS } from \"../../../constants/ApiUrls\";\nimport { HTTPService } from \"../../http-service/http-service\";\nimport { AuthService } from \"../../../services/auth-service/auth.service\";\nimport moment from \"moment\";\n\nexport class CompanyMasterService {\n  getCompanyMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.GET_COMPANY_MASTER\n      );\n      return response?.data;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  createCompanyMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_COMPANY_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateCompanyMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_COMPANY_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateCompanyMaster = async (data: any) => {\n    try {\n      const body = {\n        companyId: data.id,\n        isActive: !data.isactive,\n        updatedBy: data?.loggedInUserId,\n      };\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_COMPANY_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return err;\n    }\n  };\n  getCompanyLocationMaster = async (companyId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.GET_COMPANY_LOCATION_MASTER,\n        { companyId: companyId ? companyId : null }\n      );\n      return response?.data;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  createCompanyLocationMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_COMPANY_LOCATION_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateCompanyLocationMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_COMPANY_LOCATION_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateCompanyLocationMaster = async (data: any) => {\n    try {\n      const body = {\n        locationId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n        deactivationDate:data?.deactivationDate?moment(new Date(data?.deactivationDate)).format('YYYY-MM-DD'): null\n      };\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_COMPANY_LOCATION_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return err;\n    }\n  };\n}\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class CountryMasterService {\n  getCountryMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_COUNTRY_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n  createCountryMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_COUNTRY,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateCountryMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_COUNTRY,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n  deactivateCountryMaster = async (data: any) => {\n    try {\n      const body = {\n        countryId: data.id,\n        isActive: !data.isactive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_COUNTRY,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import { APIURLS } from '../../../constants/ApiUrls';\nimport { HTTPService } from '../../http-service/http-service';\n\nexport default class CurrencyMasterService {\n  /**\n   * Fetches currency master data\n   * @returns Currency master records\n   */\n  getCurrencyMasterData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_CURRENCY_MASTER);\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  /**\n   * Creates or updates a currency master record\n   * @param formData Form data for currency\n   * @returns Created or updated record\n   */\n  createCurrencyMasterData = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id ? APIURLS.UPDATE_CURRENCY_MASTER : APIURLS.CREATE_CURRENCY_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  /**\n   * Activates or deactivates a currency master record\n   * @param data Activation or deactivation details\n   * @returns Response data\n   */\n  activateDeactivateCurrencyMaster = async (data: any) => {\n    try {\n      const body = {\n        id: data.id,\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_CURRENCY_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  getCurrencyHistoryData = async (data:any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.CURRENCY_HISTORY_DATA,data);\n      return response?.data;\n    } catch (error) {\n      return {};\n    }\n\n  }\n}\n","import moment from 'moment'\nimport { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class IndustryMasterService {\n  getProductionTypeMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PRODUCTION_TYPE_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createProductionTypeMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_PRODUCTION_TYPE_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateProductionTypeMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_PRODUCTION_TYPE_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateProductionTypeMaster = async (data: any) => {\n    try {\n      const body = {\n        productionTypeId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n        \n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_PRODUCTION_TYPE_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getIndustryMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_INDUSTRY_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createIndustryMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_INDUSTRY_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateIndustryMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_INDUSTRY_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateIndustryMaster = async (data: any) => {\n    try {\n      const body = {\n        industryMasterId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_INDUSTRY_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getIndustryGroupMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_INDUSTRY_GROUP_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createIndustryGroupMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_INDUSTRY_GROUP_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateIndustryGroupMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_INDUSTRY_GROUP_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateIndustryGroupMaster = async (data: any) => {\n    try {\n      const body = {\n        groupIndustryId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_INDUSTRY_GROUP_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getIndustryHeadMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_INDUSTRY_HEAD_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createIndustryHeadMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_INDUSTRY_HEAD_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateIndustryHeadMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_INDUSTRY_HEAD_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateIndustryHeadMaster = async (data: any) => {\n    try {\n      const body = {\n        industryHeadId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n        deactivationDate: data?.deactivationDate\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_INDUSTRY_HEAD_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import moment from \"moment\";\nimport { APIURLS } from \"../../../constants/ApiUrls\";\nimport { AuthService } from \"../../auth-service/auth.service\";\nimport { HTTPService } from \"../../http-service/http-service\";\n\nexport class SalesMasterService {\n  getSalesMaster = async (countryId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_SALES_MASTER, {\n        countryId: countryId ? countryId : null,\n      });\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  createSalesMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_SALES_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateSalesMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_SALES_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateSalesMaster = async (data: any) => {\n    console.log(`asadsdasdas`,data)\n    try {\n      const body = {\n        salesManagerId: data.id,\n        industryHeadIds: data.industryHeadIds,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n        deactivationDate:data?.deactivationDate?moment(new Date(data?.deactivationDate)).format('YYYY-MM-DD'): null\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_SALES_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n}\n","import { APIURLS } from \"../../../constants/ApiUrls\";\nimport { AuthService } from \"../../auth-service/auth.service\";\nimport { HTTPService } from \"../../http-service/http-service\";\n\nexport class StateMasterService {\n  getStateMaster = async (countryId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_STATE_MASTER, {\n        countryId: countryId ? countryId : null,\n      });\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  createStateMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_STATE_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateStateMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_STATE_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateStateMaster = async (data: any) => {\n    try {\n      const body = {\n        stateId: data.id,\n        isActive: !data.isactive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_STATE_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n}\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class TaxMasterService {\n  getTax = async () => {\n    try {\n      const response = await HTTPService.getRequest(APIURLS.GET_TAXES)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createTax = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id?APIURLS.UPDATE_TAXES:APIURLS.CREATE_TAXES,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateTax = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_TAXES,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  activatedeactivateTax = async (data: any) => {\n    try {\n      const body = {\n        id: data.id,\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_TAX_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  formatDate = async (dateString: any) => {\n    try {\n      const date = new Date(dateString);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}/${month}/${day}`;\n    } catch (error: any) {\n      return error.message;\n    }\n  }\n}\n","import { APIURLS } from '../../constants/ApiUrls';\nimport { HTTPService } from '../http-service/http-service';\n\nexport class PoContractService {\n  // Fetch all PO Contracts\n  getPoContractsData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PO_CONTRACTS);\n      return response?.data;\n    } catch (err) {\n      console.error('Error fetching PO Contracts:', err);\n      return {};\n    }\n  };\n\n  // Create a new PO Contract\n  createPoContract = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id?APIURLS.UPDATE_PO_CONTRACT:APIURLS.CREATE_PO_CONTRACT,\n        formData\n      );\n      return response?.data;\n    } catch (error) {\n      console.error('Error creating PO Contract:', error);\n      return error;\n    }\n  };\n\n  // Update an existing PO Contract\n  updatePoContract = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_PO_CONTRACT,\n        formData\n      );\n      return response?.data;\n    } catch (error) {\n      console.error('Error updating PO Contract:', error);\n      return error;\n    }\n  };\n\n  // Activate/Deactivate a PO Contract\n  activateDeactivatePoContract = async (data: any) => {\n    try {\n      const body = {\n        id: data.id, // Assuming `id` represents the PO Contract ID\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_PO_CONTRACT_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      console.error('Error activating/deactivating PO Contract:', err);\n      return {};\n    }\n  };\n  getPoContractConfiguration = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PO_CONTRACT_CONFIGURATION, {})\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n  getPOContractMasterConfigData  = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PO_MASTER_CONFIG_DATA, {})\n      return response\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getPOContractMasterCascadingData  = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PO_CONTRACT_CASCADING_DATA, {})\n      return response\n    } catch (err) {\n      return {}\n    }\n  }\n  \n  \n}\n"],"names":["TaxInvoice","props","_jsxs","className","onClick","setDownloadPDF","children","_jsx","event","stopPropagation","handlePrint","window","print","src","alt","href","target","rel","colSpan","ExportInvoice","setDownloadExportPDF","InvoiceMaster","clientFormFields","client_name","inputType","label","options","value","validation","required","fieldWidth","contract_name","currency","po_number","disable","po_amount","remain_po_amount","invoice_date","terms_of_payment","clientBillTo","clientShipAddress","clientContact","company_name","bill_from","projectService","tax_type","disabled","tax_code","invoice_amount","billed_hours","note_one","rows","note_two","msaFormFields","start_date","end_date","countryMaster","setCountryMaster","useState","stateMaster","setStateMaster","loader","setLoader","clientFormPopup","setClientFormPopup","isEditClient","setIsEditClient","isFormValid","setIsFormValid","showConfirmDialogue","setShowConfirmDialogue","actionPopupToggle","setActionPopupToggle","cliendData","setCliendData","companyMaster","setCompanyMaster","industryHeadMaster","setIndustryHeadMaster","industryMaster","setIndustryMaster","attachments","setAttachments","digitalSign","setDigitalSign","logoUrl","setLogoUrl","signatureUrl","setSignatureUrl","showNDAAttacment","setShowNDAAttacment","showMSAAttacment","setShowMSAAttacment","industryGroupMaster","setIndustryGroupMaster","accountManagerMaster","setAccountManagerMaster","accountsMaster","setAccountsMaster","clientMaster","setClientMaster","salesMaster","setSalesMaster","showMsaUpdatePopup","setShowMsaUpdatePopup","clientNameCountry","setClientNameCountry","currencyList","setCurrencyList","poContractsData","setPoContractData","clientListNames","setClientListNames","poContractConfData","setPoContractConfData","taxMaster","setTaxMaster","companyLocationMaster","setCompanyLocationMaster","invoiceMasterData","setInvoiceMasterData","poMastersConfigData","setPoMastersConfigData","invoiceItems","setInvoiceItems","id","Date","now","description","sacCode","amount","selectedTaxes","setSelectedTaxes","selectedApplicableTaxes","setSelectedApplicableTaxes","downloadPDF","downloadExportPDF","idForBillTOiecCode","setIdForBillTOiecCode","iecCodeSubmit","setIecCodeSubmit","clientFormFieldsStructure","setClientFormFieldsStructure","clientForm","setClientForm","_","msaFormFieldsStructure","setMsaFormFieldsStructure","msaForm","setMsaForm","companyService","CompanyMasterService","clientService","ClientMasterService","currencyService","CurrencyMasterService","invoiceService","InvoiceService","userInfo","AccountMasterService","AccountsMasterService","Cookies","get","loggedInUserId","userId","CountryMasterService","StateMasterService","IndustryMasterService","SalesMasterService","poContractService","PoContractService","taxService","TaxMasterService","countryCurrencyMap","india","usa","europe","australia","dubai","clientMasterColumns","fieldName","textAlign","frozen","sort","filter","body","rowData","style","display","gap","marginLeft","cursor","title","onUpdate","generateInvoicePDFHandler","generateTaxInvoicePDFHandler","placeholder","TooltipWrapper","concat","content","invoice_name","Tooltip","position","due_date","clientBillTo_name","clientShipAddress_name","clientContact_name","projectService_names","total_amount","gst_total","final_amount","_ref","useEffect","async","getInvoiceData","getContractMaster","getPoContractConfiguration","getTaxMaster","getCompanyLocationMaster","getPOContractMasterConfigData","getClientMasterData","getCurrencyMaster","fetchData","response","getCurrencyMasterData","statusCode","HTTP_RESPONSE","SUCCESS","uniqueMap","Map","data","forEach","item","has","currencyCode","set","currencyOptions","Array","from","values","form","console","log","error","_response$clients","getClientMaster","clients","activeClients","client","isactive","isActive","getInvoicesData","invoices","invoiceInfo","JSON","parse","parsedData","map","invoice","pdf_path","invoiceWithoutPDF","_objectWithoutProperties","_excluded","_objectSpread","info","taxBreakdown","el","moment","format","created_at","updated_at","getPoContractsData","poContracts","Error","isArray","uniqueClients","client_id","_response$data","getTax","closeFormPopup","ToasterService","show","CONSTANTS","ERROR","locations","updateClientMaster","UpdateInvoicePDF","then","CREATED","message","fileUrl","process","fetch","res","blob","url","URL","createObjectURL","link","document","createElement","setAttribute","appendChild","click","remove","catch","UpdateTaxInvoicePDF","onPopUpClose","e","taxDetails","taxType","clientData","find","countryName","configData","_configData$clientBil","_configData$clientShi","_configData$contacts","clientBill","index","concatAddresses","address1","address2","address3","toString","isDefault","split","trim","clientShip","contacts","name","companyInfo","companyName","tempData","ele","isDefaultAddress","parseDateString","flatMap","dateString","date","isNaN","year","getFullYear","month","String","getMonth","padStart","day","getDate","formatDate","addr","join","toLowerCase","clientFormHandler","_form$client_name","_form$contract_name","_clientForm$contract_","_form$contract_name2","_form$tax_type","_form$tax_code","currentForm","selectedClient","po_name","undefined","country","_poContractsData$filt","_selectedContract$cre","selectedContract","_form$contract_name3","poNumber","poAmount","creditPeriod","dueAmount","_configData$clientBil2","_configData$clientBil3","_form$clientBillTo$op","_configData$clientShi2","_form$clientShipAddre","_form$clientShipAddre2","_configData$contacts2","_form$clientContact","_form$clientContact$o","Set","seen","address","key","add","_selectedContract$mas","masterNames","clientBillTo_names","_item$id","iec_code","defaultBillItem","_selectedContract$mas2","clientShipAddress_names","defaultShipItem","defaultContact","_tempData$find","_taxMaster$filter","taxCodeOptions","tax","_form$tax_type2","taxFieldName","includes","unshift","_form$tax_code2","tempSelectedTaxes","filterTaxes","taxTypes","getNamesFromOptions","field","_field$options$find","handleInputChange","updatedItems","totalAmount","reduce","sum","parseFloat","taxCalculations","taxPercentage","calculatedAmount","gstTotal","Loader","_Fragment","zIndex","InvoiceDownload","ExportInvoiceDownload","justifyContent","marginBottom","ButtonComponent","icon","iconPos","submitEvent","DataTableBasicDemo","column","showGridlines","resizableColumns","paginator","sortable","headerRequired","scrollHeight","downloadedfileName","ConfirmDialogue","onCloseFunction","padding","FormComponent","formUpdateEvent","isFormValidFlag","alignItems","margin","fontWeight","color","Button","addRow","backgroundColor","borderRadius","fontSize","border","DataTable","responsiveLayout","boxShadow","overflow","Column","header","_ref4","rowIndex","InputText","onChange","height","width","_ref5","_ref6","InputNumber","onValueChange","handleAmountChange","mode","outline","transition","inputStyle","marginTop","toFixed","_poContractConfData$f","_poContractsData$find","_companyLocationMaste","_companyLocationMaste2","_taxMaster$find$id","_taxMaster$find","_clientForm$tax_code","_clientForm$tax_code$","_clientForm$clientBil","_clientForm$clientShi","_clientForm$clientCon","_clientForm$projectSe","_clientForm$currency$","_clientForm$tax_code$2","_clientForm$billed_ho","_clientForm$clientCon2","preventDefault","companyValidityFlag","_item$validation2","invoiceData","finalAmount","invoiceAmount","clientId","contractId","invoiceBillFromId","taxTypeId","taxCodeId","_taxMaster$find$id2","_taxMaster$find2","com","formData","FormData","clientAbbr","clientName","word","toUpperCase","financialYear","nextYear","slice","getFinancialYear","invoiceName","dueDate","calculateDueDate","invoiceDate","days","setDate","parseInt","obj","contract_id","invoice_bill_from_id","tax_type_id","tax_code_id","stringify","updated_by","Object","entries","_ref2","updatePayload","_ref3","updateInvoice","createInvoice","constructor","HTTPService","postRequest","APIURLS","GET_INVOICES","err","UPDATE_INVOICE","CREATE_INVOICE","activateDeactivateInvoice","updatedBy","TOGGLE_INVOICE_STATUS","POST_GENERATE_INVOICE_PDF","invoice_number","invoiceNumber","POST_GENETARE_TAX_PDF","GetInvoiceDownloadPDF","getRequest","GET_GENERATE_INVOICE_PDF","getAccountMaster","GET_ACCOUNT_MANAGER_MASTER","countryId","createAccountMaster","CREATE_ACCOUNT_MANAGER_MASTER","updateAccountMaster","UPDATE_ACCOUNT_MANAGER_MASTER","deactivateAccountMaster","accountManagerId","industryHeadIds","deactivationDate","TOGGLE_ACCOUNT_MANAGER_STATUS","getAccountsMaster","GET_ACCOUNTS_MASTER","createAccountsMaster","CREATE_ACCOUNTS_MASTER","updateAccountsMaster","UPDATE_ACCOUNTS_MASTER","deactivateAccountsMaster","accountId","TOGGLE_ACCOUNTS_STATUS","getCompanyMaster","GET_COMPANY_MASTER","createCompanyMaster","CREATE_COMPANY_MASTER","updateCompanyMaster","UPDATE_COMPANY_MASTER","deactivateCompanyMaster","companyId","TOGGLE_COMPANY_STATUS","GET_COMPANY_LOCATION_MASTER","createCompanyLocationMaster","CREATE_COMPANY_LOCATION_MASTER","updateCompanyLocationMaster","UPDATE_COMPANY_LOCATION_MASTER","deactivateCompanyLocationMaster","locationId","TOGGLE_COMPANY_LOCATION_STATUS","getCountryMaster","GET_COUNTRY_MASTER","createCountryMaster","CREATE_COUNTRY","updateCountryMaster","UPDATE_COUNTRY","deactivateCountryMaster","TOGGLE_COUNTRY","GET_CURRENCY_MASTER","createCurrencyMasterData","UPDATE_CURRENCY_MASTER","CREATE_CURRENCY_MASTER","activateDeactivateCurrencyMaster","TOGGLE_CURRENCY_STATUS","getCurrencyHistoryData","CURRENCY_HISTORY_DATA","getProductionTypeMaster","GET_PRODUCTION_TYPE_MASTER","createProductionTypeMaster","CREATE_PRODUCTION_TYPE_MASTER","updateProductionTypeMaster","UPDATE_PRODUCTION_TYPE_MASTER","deactivateProductionTypeMaster","productionTypeId","TOGGLE_PRODUCTION_TYPE_STATUS","getIndustryMaster","GET_INDUSTRY_MASTER","createIndustryMaster","CREATE_INDUSTRY_MASTER","updateIndustryMaster","UPDATE_INDUSTRY_MASTER","deactivateIndustryMaster","industryMasterId","TOGGLE_INDUSTRY_STATUS","getIndustryGroupMaster","GET_INDUSTRY_GROUP_MASTER","createIndustryGroupMaster","CREATE_INDUSTRY_GROUP_MASTER","updateIndustryGroupMaster","UPDATE_INDUSTRY_GROUP_MASTER","deactivateIndustryGroupMaster","groupIndustryId","TOGGLE_INDUSTRY_GROUP_STATUS","getIndustryHeadMaster","GET_INDUSTRY_HEAD_MASTER","createIndustryHeadMaster","CREATE_INDUSTRY_HEAD_MASTER","updateIndustryHeadMaster","UPDATE_INDUSTRY_HEAD_MASTER","deactivateIndustryHeadMaster","industryHeadId","TOGGLE_INDUSTRY_HEAD_STATUS","getSalesMaster","GET_SALES_MASTER","createSalesMaster","CREATE_SALES_MASTER","updateSalesMaster","UPDATE_SALES_MASTER","deactivateSalesMaster","salesManagerId","TOGGLE_SALES_STATUS","getStateMaster","GET_STATE_MASTER","createStateMaster","CREATE_STATE_MASTER","updateStateMaster","UPDATE_STATE_MASTER","deactivateStateMaster","stateId","TOGGLE_STATE_STATUS","GET_TAXES","createTax","UPDATE_TAXES","CREATE_TAXES","updateTax","activatedeactivateTax","TOGGLE_TAX_STATUS","GET_PO_CONTRACTS","createPoContract","UPDATE_PO_CONTRACT","CREATE_PO_CONTRACT","updatePoContract","activateDeactivatePoContract","TOGGLE_PO_CONTRACT_STATUS","GET_PO_CONTRACT_CONFIGURATION","GET_PO_MASTER_CONFIG_DATA","getPOContractMasterCascadingData","GET_PO_CONTRACT_CASCADING_DATA"],"sourceRoot":""}