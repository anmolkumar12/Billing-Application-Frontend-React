{"version":3,"file":"static/js/943.83c2900e.chunk.js","mappings":"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","sources":["webpack://Billing_Application_Frontend/./src/pages/client/Client.module.scss?7256","pages/client/ClientMaster.tsx","services/clients/client-contact-master/clientContactMaster.service.ts","pages/client/ClientContactMaster.tsx","pages/client/ClientBillToMaster.tsx","pages/client/ClientShipToMaster.tsx","pages/client/ClientGroupMaster.tsx","pages/client/Client.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main-tab-screen\":\"Client_main-tab-screen__pkm8e\",\"panel-tabs\":\"Client_panel-tabs__M0y1+\",\"addition-field-header\":\"Client_addition-field-header__mmmPE\",\"addition-field-buttons\":\"Client_addition-field-buttons__U5Xkk\",\"aggregator-dashboard\":\"Client_aggregator-dashboard__dTgjn\",\"upload-wrapper\":\"Client_upload-wrapper__w-cEO\",\"upload-file-section\":\"Client_upload-file-section__tI5qa\",\"upload-file\":\"Client_upload-file__ght2k\",\"empty-upload\":\"Client_empty-upload__8UcZ3\",\"chip-tm\":\"Client_chip-tm__WJS2F\",\"cstm-chip\":\"Client_cstm-chip__sP7jg\",\"p-chip\":\"Client_p-chip__tWoFC\",\"p-chip-text\":\"Client_p-chip-text__tm1vv\",\"available-card-box\":\"Client_available-card-box__bvIJt\",\"available-card-details\":\"Client_available-card-details__utE-x\",\"detail-transcation-btn\":\"Client_detail-transcation-btn__rDzhg\",\"available-card-img\":\"Client_available-card-img__beimv\",\"coupon-card\":\"Client_coupon-card__xSHgY\",\"textWithImg\":\"Client_textWithImg__yGwWk\",\"row\":\"Client_row__WBMuF\",\"col-lg-3\":\"Client_col-lg-3__-ZDjB\",\"available-card\":\"Client_available-card__THBZ3\",\"reedemed-amount-card\":\"Client_reedemed-amount-card__LCuUc\",\"credit-amount-card\":\"Client_credit-amount-card__CBzjn\",\"last-recharge-card\":\"Client_last-recharge-card__c0oh4\",\"wallet-row\":\"Client_wallet-row__PzXZO\",\"wallet-card\":\"Client_wallet-card__pSxao\",\"card-logo\":\"Client_card-logo__TOLY0\",\"food-wallet-card\":\"Client_food-wallet-card__h4zKX\",\"fuel-wallet-card\":\"Client_fuel-wallet-card__nkSeE\",\"general-wallet-card\":\"Client_general-wallet-card__zyOfm\",\"food-wallet-details\":\"Client_food-wallet-details__tcEV5\",\"fuel-wallet-details\":\"Client_fuel-wallet-details__l2vYS\",\"general-wallet-details\":\"Client_general-wallet-details__+rm22\",\"card-logo-circle\":\"Client_card-logo-circle__5mRpb\",\"wallet-details\":\"Client_wallet-details__+drBa\",\"aggregator-analytics-table\":\"Client_aggregator-analytics-table__ZGRu0\",\"text-success\":\"Client_text-success__e4n-V\",\"text-danger\":\"Client_text-danger__rbr5-\",\"no-record-div\":\"Client_no-record-div__BPCFk\",\"col-lg-2\":\"Client_col-lg-2__lPaaj\",\"actionMenuBtn\":\"Client_actionMenuBtn__98AEA\",\"popup_ActionMenu\":\"Client_popup_ActionMenu__EVcP-\",\"sm-popup-content\":\"Client_sm-popup-content__T5ekL\",\"btn-main\":\"Client_btn-main__j+81r\",\"add-recharge-content\":\"Client_add-recharge-content__4-wAm\",\"add-recharge-form\":\"Client_add-recharge-form__2fnPE\",\"formLabel\":\"Client_formLabel__r8LYs\",\"p-inputtextarea\":\"Client_p-inputtextarea__qgtDl\",\"form-container\":\"Client_form-container__30OqY\",\"form-content\":\"Client_form-content__WPx7R\",\"popup-lower-btn\":\"Client_popup-lower-btn__zHuMT\",\"popup-lower-left-btn\":\"Client_popup-lower-left-btn__v6YJk\",\"popup-lower\":\"Client_popup-lower__ktcEB\",\"popup-lower-right-btn\":\"Client_popup-lower-right-btn__lQbzX\",\"clickable-msa\":\"Client_clickable-msa__Mqx5z\",\"download-icon\":\"Client_download-icon__Mv-+V\"};","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Client.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { ClientMasterService } from \"../../services/masters/client-master/client.service\";\nimport { Chip } from \"primereact/chip\";\nimport { FILE_TYPES } from \"../../enums/file-types.enum\";\nimport { ImageUrl } from \"../../utils/ImageUrl\";\nimport { AccountMasterService } from \"../../services/masters/account-manager-master/accountManager.service\";\nimport { AccountsMasterService } from \"../../services/masters/accounts-master/accounts.service\";\nimport { SalesMasterService } from \"../../services/masters/sales-master/sales.service\";\nimport moment from \"moment\";\n\n\nconst ClientMaster = () => {\n    const clientFormFields = {\n        client_name: {\n            inputType: \"inputtext\",\n            label: \"Client Name\",\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        is_same_alias: {\n            inputType: \"inputSwitch\",\n            label: \"Alias same as client name\",\n            value: false,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4 mg-12-t\",\n        },\n        vega_client_name: {\n            inputType: \"inputtext\",\n            label: \"Vega Client Name (Alias)\",\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        client_type: {\n            inputType: \"singleSelect\",\n            label: \"Client Type\",\n            options: [\"PVT\", \"LLP\", \"Public\", \"Proprietorship\", \"Others\"],\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        credit_period: {\n            inputType: \"inputNumber\",\n            label: \"Credit Period (No. of Days)\",\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        client_status: {\n            inputType: \"singleSelect\",\n            label: \"Client Status\",\n            options: [\"Existing\", \"New\"],\n            value: null,\n            validation: {\n                required: false,\n            },\n            hideField:true,\n            fieldWidth: \"col-md-4\",\n        },\n        country_name: {\n            inputType: \"singleSelect\",\n            label: \"Country\",\n            options: [],\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        companyName: {\n            inputType: \"singleSelect\",\n            label: \"Company\",\n            options: [],\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        account_name: {\n            inputType: \"multiSelect\",\n            label: \"Bank Name\",\n            options: [],\n            value: [],\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        industryHeadNames: {\n            inputType: \"singleSelect\",\n            label: \"Industry Head\",\n            options: [],\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        industry_group: {\n            inputType: \"singleSelect\",\n            label: \"Industry Group\",\n            options: [],\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        industry_name: {\n            inputType: \"singleSelect\",\n            label: \"Industry Sub Group\",\n            options: [],\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4 \",\n        },\n        // industry_sub_group: {\n        //     inputType: \"singleSelect\",\n        //     label: \"Industry Sub Group\",\n        //     options: [],\n        //     value: null,\n        //     validation: {\n        //         required: true,\n        //     },\n        //     fieldWidth: \"col-md-4\",\n        // },\n        isApplicableAM: {\n            inputType: \"inputSwitch\",\n            label: \"Is SM or AM Applicable?\",\n            value: null,\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4 mg-12-t\",\n        },\n        sales_person: {\n            inputType: \"multiSelect\",\n            label: \"Sales Person\",\n            options: [],\n            value: [],\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        account_manager: {\n            inputType: \"multiSelect\",\n            label: \"Account Manager\",\n            options: [],\n            value: [],\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        msa_start_date: {\n            inputType: \"singleDatePicker\",\n            label: \"MSA Start Date\",\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        msa_end_date: {\n            inputType: \"singleDatePicker\",\n            label: \"MSA End Date\",\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        is_msa_missing: {\n            inputType: \"inputSwitch\",\n            label: \"Is MSA\",\n            value: false,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4 mg-12-t\",\n        },\n        nda_flag: {\n            inputType: \"inputSwitch\",\n            label: \"Is NDA\",\n            value: false,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4 mg-12-t\",\n        },\n        non_solicitation_clause: {\n            inputType: \"inputSwitch\",\n            label: \"Non Solicitation Clause\",\n            value: false,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4 mg-12-t\",\n        },\n        use_logo_permission: {\n            inputType: \"inputSwitch\",\n            label: \"Use Logo Permission\",\n            value: false,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-4 mg-12-t\",\n        },\n    };\n\n\n    const msaFormFields = {\n        start_date: {\n            inputType: \"singleDatePicker\",\n            label: \"Start Date\",\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n        end_date: {\n            inputType: \"singleDatePicker\",\n            label: \"End Date\",\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n\n    };\n\n\n\n    const [countryMaster, setCountryMaster] = useState<any>([]);\n    const [stateMaster, setStateMaster] = useState<any>([]);\n    const [loader, setLoader] = useState(false);\n    const [clientFormPopup, setClientFormPopup] = useState(false);\n    const [isEditClient, setIsEditClient] = useState<boolean>(false);\n    const [isFormValid, setIsFormValid] = useState(true);\n    const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n    const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n    const [cliendData, setCliendData] = useState<any>();\n    const [companyMaster, setCompanyMaster] = useState<any>([]);\n    const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n    const [industryMaster, setIndustryMaster] = useState<any>([]);\n    const [attachments, setAttachments]: any = useState([]);\n    const [digitalSign, setDigitalSign]: any = useState([]);\n    const [logoUrl, setLogoUrl] = useState('');\n    const [signatureUrl, setSignatureUrl] = useState('');\n    const [showNDAAttacment, setShowNDAAttacment] = useState<boolean>(false);\n    const [showMSAAttacment, setShowMSAAttacment] = useState<boolean>(false);\n    const [industryGroupMaster, setIndustryGroupMaster] = useState<any>([]);\n    const [accountManagerMaster, setAccountManagerMaster] = useState<any>([]);\n    const [accountsMaster, setAccountsMaster] = useState<any>([]);\n    const [clientMaster, setClientMaster] = useState<any>([]);\n    const [salesMaster, setSalesMaster] = useState<any>([]);\n    const [showMsaUpdatePopup, setShowMsaUpdatePopup] = useState<boolean>(false);\n\n\n    const [clientFormFieldsStructure, setClientFormFieldsStructure]: any =\n        useState(clientFormFields);\n    const [clientForm, setClientForm] = useState<any>(\n        _.cloneDeep(clientFormFieldsStructure)\n    );\n\n    const [msaFormFieldsStructure, setMsaFormFieldsStructure]: any =\n        useState(msaFormFields);\n    const [msaForm, setMsaForm] = useState<any>(\n        _.cloneDeep(msaFormFieldsStructure)\n    );\n\n    const companyService = new CompanyMasterService();\n    const clientService = new ClientMasterService();\n    const accountService = new AccountMasterService();\n    const accountsService = new AccountsMasterService();\n\n    const cookies = new Cookies();\n    const userInfo = cookies.get(\"userInfo\");\n\n    const loggedInUserId = userInfo?.userId;\n    let patchData: any;\n    const countryService = new CountryMasterService();\n    const stateService = new StateMasterService();\n    const industryService = new IndustryMasterService();\n    const salesService = new SalesMasterService();\n\n\n    const clientMasterColumns = [\n        {\n            label: \"Action\",\n            fieldName: \"action\",\n            textAlign: \"left\",\n           frozen: true,\n            sort: false,\n            filter: false,\n            body: (rowData: any) => (\n                <div style={{ display: \"flex\", gap: \"12px\", marginLeft: \"20px\" }}>\n                    <span\n                        className=\"pi pi-pencil\"\n                        style={{ cursor: \"pointer\" }}\n                        title=\"Update\"\n                        onClick={() => onUpdate(rowData)}\n                    ></span>\n                    <span\n                        className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n                        style={{ cursor: \"pointer\" }}\n                        title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n                        onClick={() => onDelete(rowData)}\n                    ></span>\n                    <span\n                        className=\"pi pi-sync\"\n                        style={{ cursor: \"pointer\" }}\n                        title=\"Update MSA\"\n                        onClick={() => onMSAUpdate(rowData)}\n                    ></span>\n                </div>\n            ),\n        },\n        {\n            label: \"Client Name\",\n            fieldName: \"client_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Client Name\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`clientNameTooltip-${rowData.id}`} content={rowData.client_name} />\n            ),\n        },\n        {\n            label: \"Vega Client Name\",\n            fieldName: \"vega_client_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Vega Client Name\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`vegaClientNameTooltip-${rowData.id}`} content={rowData.vega_client_name} />\n            ),\n        },\n        {\n            label: \"Client Type\",\n            fieldName: \"client_type\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Client Type\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`clientTypeTooltip-${rowData.id}`} content={rowData.client_type} />\n            ),\n        },\n        {\n            label: \"Credit Period (No. of Days)\",\n            fieldName: \"credit_period\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Credit Period\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`creditPeriodTooltip-${rowData.id}`} content={rowData.credit_period} />\n            ),\n        },\n        {\n            label: \"Client Status\",\n            fieldName: \"client_status\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Client Status\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`clientStatusTooltip-${rowData.id}`} content={rowData.client_status} />\n            ),\n        },\n        {\n            label: \"Country\",\n            fieldName: \"countryName\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Country\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`countryTooltip-${rowData.id}`} content={rowData.countryName} />\n            ),\n        },\n        {\n            label: \"Company Name\",\n            fieldName: \"companyName\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Company Name\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`companyNameTooltip-${rowData.id}`} content={rowData.companyName} />\n            ),\n        },\n\n        {\n            label: \"Industry Head Name\",\n            fieldName: \"industryHeadName\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Industry Head Name\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`industryHeadTooltip-${rowData.id}`} content={rowData.industryHeadName} />\n            ),\n        },\n        {\n            label: \"Industry Sub Group\",\n            fieldName: \"industryGroupNames\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Industry Group Names\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`industryGroupTooltip-${rowData.id}`} content={rowData.industryGroupNames} />\n            ),\n        },\n        {\n            label: \"Industry Group\",\n            fieldName: \"industryName\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Industry Name\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`industryNameTooltip-${rowData.id}`} content={rowData.industryName} />\n            ),\n        },\n        // {\n        //     label: \"Industry Subgroup Names\",\n        //     fieldName: \"industrySubGroupNames\",\n        //     textAlign: \"left\",\n        //     sort: true,\n        //     filter: true,\n        //     placeholder: \"Industry Subgroup Names\",\n        //     body: (rowData: any) => (\n        //         <TooltipWrapper id={`industrySubgroupTooltip-${rowData.id}`} content={rowData.industrySubGroupNames} />\n        //     ),\n        // },\n        {\n            label: \"Account Manager Names\",\n            fieldName: \"accountManagerNames\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Account Manager Names\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`accountManagerTooltip-${rowData.id}`} content={rowData.accountManagerNames} />\n            ),\n        },\n        {\n            label: \"MSA Start Date\",\n            fieldName: \"msa_start_date\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"MSA Start Date\",\n            body: (rowData: any) => (\n                <span>{rowData.msa_start_date}</span>\n                // <TooltipWrapper id={`msaStartTooltip-${rowData.id}`} content={new Date(rowData.msa_start_date).toLocaleDateString()} />\n            ),\n        },\n        {\n            label: \"MSA End Date\",\n            fieldName: \"msa_end_date\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"MSA End Date\",\n            body: (rowData: any) => (\n                <span>{rowData.msa_end_date}</span>\n                // <TooltipWrapper id={`msaEndTooltip-${rowData.id}`} content={new Date(rowData.msa_end_date).toLocaleDateString()} />\n            ),\n        },\n        {\n            label: \"MSA available?\",\n            fieldName: \"msa_flag\",\n            textAlign: \"left\",\n            frozen: false,\n            sort: true,\n            filter: true,\n            body: (rowData: any) => (\n                <div>\n                    <span>\n                        {rowData?.msa_flag}\n                    </span>\n                </div>\n            ),\n        },\n        {\n            label: \"MSA File\",\n            fieldName: \"msaFilePath\",\n            textAlign: \"left\",\n            sort: false,\n            filter: false,\n            placeholder: \"MSA File\",\n            body: (rowData: any) => (\n                <>\n                    {rowData?.msaFilePath ? (\n                        <div onClick={() => downloadFile(rowData.msaFilePath)} >\n                            <span style={{\n                                cursor: \"pointer\", // Pointer cursor on hover\n                                color: \"#007bff\", // Icon color (same as text)\n                            }}>MSA</span>\n                            <span\n                                className=\"pi pi-download\" // Use the PrimeIcons class for download icon\n                                style={{\n                                    cursor: \"pointer\", // Pointer cursor on hover\n                                    marginLeft: \"8px\", // Space between text and icon\n                                    fontSize: \"10px\", // Icon size\n                                    color: \"#007bff\", // Icon color (same as text)\n                                }}\n                                title=\"Download MSA\"\n                            ></span>\n                        </div>\n\n                    ) : null}\n                </>),\n        },\n        {\n            label: \"NDA available?\",\n            fieldName: \"nda_flag\",\n            textAlign: \"left\",\n            frozen: false,\n            sort: true,\n            filter: true,\n            body: (rowData: any) => (\n                <div>\n                    <span>\n                        {rowData?.nda_flag}\n                    </span>\n                </div>\n            ),\n        },\n        {\n            label: \"NDA File\",\n            fieldName: \"ndaFilePath\",\n            textAlign: \"left\",\n            sort: false,\n            filter: false,\n            placeholder: \"NDA File\",\n            body: (rowData: any) =>\n            (<>\n                {rowData?.ndaFilePath ? (\n                    <div onClick={() => downloadFile(rowData.ndaFilePath)} >\n                        <span style={{\n                            cursor: \"pointer\", // Pointer cursor on hover\n                            color: \"#007bff\", // Icon color (same as text)\n                        }}>NDA</span>\n                        <span\n                            className=\"pi pi-download\" // Use the PrimeIcons class for download icon\n                            style={{\n                                cursor: \"pointer\", // Pointer cursor on hover\n                                marginLeft: \"8px\", // Space between text and icon\n                                fontSize: \"10px\", // Icon size\n                                color: \"#007bff\", // Icon color (same as text)\n                            }}\n                            title=\"Download MSA\"\n                        ></span>\n                    </div>\n\n                ) : null}\n            </>),\n        },\n        {\n            label: \"Status\",\n            fieldName: \"isActive\",\n            textAlign: \"left\",\n            frozen: false,\n            sort: true,\n            filter: true,\n            body: (rowData: any) => (\n                <div>\n                    <span style={{ color: rowData?.isActive == 1 ? \"green\" : \"red\" }}>\n                        {rowData?.isActive == 1 ? \"Active\" : \"Inactive\"}\n                    </span>\n                </div>\n            ),\n        },\n        {\n            label: \"Updated At\",\n            fieldName: \"updated_at\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Updated At\",\n            body: (rowData: any) => (\n                <span>{rowData.updated_at}</span>\n                // <TooltipWrapper id={`updatedAtTooltip-${rowData.id}`} content={new Date(rowData.updated_at).toLocaleString()} />\n            ),\n        }\n    ];\n\n    const downloadFile = (filePath: any) => {\n        const fileUrl = `${process.env.REACT_APP_API_BASEURL}/${filePath}`;\n        // Create an anchor element and trigger the download\n        const link = document.createElement(\"a\");\n        link.href = fileUrl;\n        link.download = filePath.split(\"/\").pop(); // Extracts file name from the path\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    const viewMSAFile = (filePath: any) => {\n        const signatureUrl = `${process.env.REACT_APP_API_BASEURL}/${filePath}`;\n        // Open the file in a new tab\n        window.open(signatureUrl, \"_blank\");\n    };\n\n\n    const TooltipWrapper = ({ id, content }: any) => (\n        <div>\n            <span id={id}>{content}</span>\n            <Tooltip target={`#${id}`} position=\"top\" />\n        </div>\n    );\n\n      // Function to update the end_date min value dynamically\n    useEffect(() => {\n      console.log('start date changed', clientForm?.msa_start_date?.value, clientForm?.msa_end_date?.value);\n      // clientForm.msa_end_date.value = null;\n      setClientForm((prevForm: any) => ({\n        ...prevForm,\n        msa_end_date: {\n          ...prevForm.msa_end_date,\n          min: prevForm.msa_start_date?.value || null, // Set min as msa_start_date value\n        },\n      }));\n    }, [clientForm?.msa_start_date?.value]);\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await getClientMaster();\n            // await getStateMaster();\n            const countries = await getCountryMaster();\n            await formatCountryDetails(countries);\n            const companies = await getCompanyMaster();\n            await formatCompanyDetails(companies);\n            const industryHead = await getIndustryHeadMaster();\n            await formatIndustryHeadDetails(industryHead);\n            const industryGroups = await getIndustryGroupMaster();\n            await formatIndustryGroupDetails(industryGroups);\n            // const accountManagers = await getAccountManagerMaster();\n            // await formatAccountManagerMasterDetails(accountManagers);\n            // const accountMaster = await getAccountMaster();\n            // await formatAccountMasterDetails(accountMaster);\n            // const salesManager = await getSalesMaster();\n            // await formatSalesManagerDetails(salesManager)\n            // await formatAccountMasterDetails(accountMaster);\n            const industries = await getIndustryMaster()\n            await formatIndustry_ClientDetails(industries);\n            await formatIndustrySubGroupDetails(industries)\n        };\n        if (clientFormPopup == false && showConfirmDialogue == false && showMsaUpdatePopup == false) {\n            fetchData();\n        }\n    }, [clientFormPopup, showConfirmDialogue, showMsaUpdatePopup]);\n\n    const getClientMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await clientService.getClientMaster();\n            console.log(`this is client datat `,response?.clients)\n            response?.clients?.forEach((el:any) => {\n                el.msa_start_date = el.msa_start_date && moment(el.msa_start_date).isValid()\n                    ? moment(el.msa_start_date).format(\"DD-MM-YYYY\")\n                    : null;\n                el.msa_end_date = el.msa_end_date && moment(el.msa_end_date).isValid()\n                    ? moment(el.msa_end_date).format(\"DD-MM-YYYY\")\n                    : el.msa_flag==1 ? \"Not Applicable\" : null;\n                el.updated_at = el.updated_at && moment(el.updated_at).isValid()\n                    ? moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\")\n                    : null;\n                el.client_status = el?.client_status == \"1\" ? \"New\" : \"Existing\";\n                el.msa_flag = el?.msa_flag == 1 ? \"Yes\" : \"No\";\n                el.nda_flag = el?.nda_flag == 1 ? \"Yes\" : \"No\";\n            });          \n                console.log(`this is client datat after`,response?.clients)\n            setClientMaster(response?.clients);\n            return response?.clients;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n\n    const getSalesMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await salesService.getSalesMaster();\n            const temp = response?.salesManagers?.filter((item: any) => item?.isactive || item?.isActive)\n            setSalesMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n    const getIndustryMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await industryService.getIndustryMaster();\n            const temp = response?.industryMasters?.filter((item: any) => item?.isactive || item?.isActive)\n            setIndustryMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getIndustryHeadMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await industryService.getIndustryHeadMaster();\n            const temp = response?.industryHeads?.filter((item: any) => item?.isactive || item?.isActive)\n            setIndustryHeadMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getStateMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await stateService.getStateMaster();\n            const temp = response?.states?.filter((item: any) => item?.isactive || item?.isActive)\n            setStateMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getCountryMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await countryService.getCountryMaster();\n            const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive);\n            setCountryMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getCompanyMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await companyService.getCompanyMaster();\n            const temp = response?.companies?.filter((item: any) => item?.isactive || item?.isActive)\n            setCompanyMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getIndustryGroupMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await industryService.getIndustryGroupMaster();\n            const temp = response?.groupIndustries?.filter((item: any) => item?.isactive || item?.isActive)\n            setIndustryGroupMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getAccountManagerMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await accountService.getAccountMaster();\n            const temp = response?.accountManagers?.filter((item: any) => item?.isactive || item?.isActive)\n            setAccountManagerMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n    const getAccountMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await accountsService.getAccountsMaster();\n            const temp = response?.companyAccounts?.filter((item: any) => item?.isactive || item?.isActive)\n            setAccountsMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n\n\n    const formatCountryDetails = async (countries: any = countryMaster) => {\n        const countrylist = countries.map((country: any) => country?.name);\n        clientFormFieldsStructure.country_name.options = countrylist;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await statesFormHandler(clientFormFieldsStructure);\n    };\n\n    const formatCompanyDetails = async (companies: any = companyMaster) => {\n        const companyList = companies.map((company: any) => company?.companyName);\n        clientFormFieldsStructure.companyName.options = companyList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatIndustryHeadDetails = async (\n        industries: any = industryHeadMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.industryHeadName\n        );\n        clientFormFieldsStructure.industryHeadNames.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatIndustryGroupDetails = async (\n        industries: any = industryGroupMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.groupIndustryName\n        );\n        clientFormFieldsStructure.industry_group.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatIndustrySubGroupDetails = async (\n        industries: any = industryGroupMaster\n    ) => {\n        console.log('industryGroupMaster', industries);\n\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.subIndustryCategory\n        );\n        // clientFormFieldsStructure.industry_sub_group.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatAccountManagerMasterDetails = async (\n        industries: any = accountManagerMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.name\n        );\n        clientFormFieldsStructure.account_manager.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n    };\n\n    const formatSalesManagerDetails = async (\n        industries: any = salesMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.name\n        );\n\n        clientFormFieldsStructure.sales_person.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n    };\n\n    const formatAccountMasterDetails = async (\n        industries: any = accountsMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.bankName\n        );\n        clientFormFieldsStructure.account_name.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n    };\n\n    const formatIndustry_ClientDetails = async (industries: any = industryMaster) => {\n        const industryList = industries.map(\n            (industry: any) => industry?.industryName\n        );\n        clientFormFieldsStructure.industry_name.options = industryList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure);\n    };\n\n\n\n    const openSaveForm = async () => {\n        setClientFormPopup(true);\n    };\n\n    const statesFormHandler = async (form: FormType) => {\n        setClientForm(form);\n    };\n\n    const onUpdate = async (data: any) => {\n        const accountManagers = await getAccountManagerMaster();\n        await formatAccountManagerMasterDetails(accountManagers);\n        const accountMaster = await getAccountMaster();\n        await formatAccountMasterDetails(accountMaster);\n        const salesManager = await getSalesMaster();\n        await formatSalesManagerDetails(salesManager)\n        await formatAccountMasterDetails(accountMaster);\n        await setCliendData(data);\n        await updateClientaster(data);\n        await setClientFormPopup(true);\n        await setIsEditClient(true);\n    };\n    const onMSAUpdate = (data: any) => {\n        setShowMsaUpdatePopup(true);\n        setCliendData(data);\n    };\n\n    const onPopUpClose = (e?: any) => {\n        setShowConfirmDialogue(false);\n    };\n\n    const updateClientaster = (data: any) => {\n\n        try {\n            clientFormFieldsStructure.client_name.value = data?.client_name;\n            clientFormFieldsStructure.vega_client_name.value = data?.vega_client_name;\n            clientFormFieldsStructure.client_type.value = data?.client_type;\n            clientFormFieldsStructure.credit_period.value = data?.credit_period;\n            clientFormFieldsStructure.client_status.value = data?.client_status;\n            clientFormFieldsStructure.country_name.value = data?.countryName;\n            clientFormFieldsStructure.companyName.value = data?.companyName;\n            clientFormFieldsStructure.account_name.value = data?.bankName?.split(',');\n            clientFormFieldsStructure.industryHeadNames.value = data?.industryHeadName;\n\n            clientFormFieldsStructure.industry_name.value = data?.currentIndustryGroupNames;\n            clientFormFieldsStructure.industry_group.value = data?.currentIndustryName;\n            // clientFormFieldsStructure.industry_sub_group.value = data?.industrySubGroupNames;\n            clientFormFieldsStructure.isApplicableAM.value = data?.isApplicableAM == \"true\" ? true : false;\n            clientFormFieldsStructure.sales_person.value = data?.salesMangerName ? data?.salesMangerName?.split(',') : [];\n            clientFormFieldsStructure.account_manager.value = data?.accountManagerNames ? data?.accountManagerNames?.split(',') : [];\n            clientFormFieldsStructure.msa_start_date.value = parseDateString(data?.msa_start_date);\n            clientFormFieldsStructure.msa_end_date.value = parseDateString(data?.msa_end_date);\n            clientFormFieldsStructure.is_msa_missing.value = data?.msa_flag ? true : false;\n            clientFormFieldsStructure.nda_flag.value = data?.nda_flag ? true : false;\n            clientFormFieldsStructure.non_solicitation_clause.value = data?.non_solicitation_clause_flag ? true : false;\n            clientFormFieldsStructure.use_logo_permission.value = data?.use_logo_permission_flag ? true : false;\n            console.log('dataaaaaaaaaa---->>>', clientFormFieldsStructure, data);\n            // clientFormFieldsStructure.msaFilePath.value = data?.msaFilePath;\n            // clientFormFieldsStructure.ndaFilePath.value = data?.ndaFilePath;\n            // clientFormFieldsStructure.updated_by.value = data?.updated_by;\n            // clientFormFieldsStructure.isActive.value = data?.isActive;\n            // clientFormFieldsStructure.updated_at.value = data?.updated_at;\n            if (data?.msa_flag) {\n                setLogoUrl(data?.msaFilePath)\n            }\n            if (data?.nda_flag) {\n                setSignatureUrl(data?.ndaFilePath)\n            }\n\n            setClientForm(_.cloneDeep(clientFormFieldsStructure));\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    };\n\n    const createNewState = (event: FormEvent) => {\n        event.preventDefault();\n        let companyValidityFlag = true;\n        const companyFormValid: boolean[] = [];\n\n        _.each(clientForm, (item: any) => {\n            if (item?.validation?.required) {\n                companyFormValid.push(item.valid);\n                companyValidityFlag = companyValidityFlag && item.valid;\n            }\n        });\n\n        setIsFormValid(companyValidityFlag);\n\n        const countryId =\n            countryMaster.find(\n                (country: any) => country.name === clientForm.country_name.value\n            )?.id ?? null;\n\n        if (companyValidityFlag) {\n            const obj = {\n                stateName: clientForm?.stateName?.value,\n                stateCode: clientForm?.stateCode?.value,\n                gstCode: clientForm?.gstCode?.value,\n                countryId: countryId,\n                isActive: 1,\n                updatedBy: loggedInUserId,\n            };\n\n            if (!cliendData?.id) {\n                stateService\n                    .createStateMaster(obj)\n                    .then((response: any) => {\n                        if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                            setCliendData({});\n                            closeFormPopup();\n                            ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                        }\n                    })\n                    .catch((error: any) => {\n                        setCliendData({});\n                        ToasterService.show(error, CONSTANTS.ERROR);\n                    });\n            } else {\n                const updatePayload = { ...obj, stateId: cliendData?.id };\n\n                stateService\n                    .updateStateMaster(updatePayload)\n                    .then((response: any) => {\n                        if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                            setCliendData({});\n                            closeFormPopup();\n                            ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                        }\n                    })\n                    .catch((error: any) => {\n                        setCliendData({});\n                        ToasterService.show(error, CONSTANTS.ERROR);\n                    });\n            }\n        } else {\n            ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n        }\n    };\n\n    const onDelete = (data: any) => {\n        patchData = data;\n        setActionPopupToggle({\n            displayToggle: false,\n            title: \"Delete\",\n            message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n                ? \"activate\"\n                : \"deactivate\"\n                } this record?`,\n            acceptFunction: confirmDelete,\n            rejectFunction: onPopUpClose,\n            askForDeactivationDate: data?.isactive || data?.is_active || data?.isActive,\n        });\n        setShowConfirmDialogue(true);\n    };\n\n    const confirmDelete = (deactivationDate?: Date) => {\n        setLoader(true);\n        console.log('deactivationDate', deactivationDate);\n\n        clientService\n            .deactivateClientMaster({ ...patchData, loggedInUserId, deactivationDate: deactivationDate ? formatDate(deactivationDate) : null, })\n            .then(() => {\n                setLoader(false);\n                setShowConfirmDialogue(false);\n                ToasterService.show(\n                    `Client record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n                    } successfully`,\n                    CONSTANTS.SUCCESS\n                );\n            })\n            .catch((error) => {\n                setLoader(false);\n                return false;\n            });\n    };\n\n    const closeFormPopup = () => {\n        setClientFormPopup(false);\n        setIsEditClient(false);\n        setCliendData({});\n        setClientFormFieldsStructure(_.cloneDeep(clientFormFields));\n        setClientForm(_.cloneDeep(clientFormFields));\n        setShowMsaUpdatePopup(false);\n        setMsaForm(_.cloneDeep(msaFormFields));\n        setAttachments([]);\n        setDigitalSign([]);\n        setSignatureUrl('');\n        setLogoUrl('')\n    };\n\n    const parseDateString = (dateString: any) => {\n        if (!dateString) return new Date();\n        const date: any = new Date(dateString);\n        if (isNaN(date)) return new Date();\n        const year = date.getFullYear();\n        const month: any = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day: any = String(date.getDate()).padStart(2, \"0\");\n        return new Date(year, month - 1, day);\n    };\n\n    const formatDate = (dateString: any) => {\n        if(!dateString)return null;\n        const date = new Date(dateString);\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        return `${year}/${month}/${day}`;\n    };\n\n    const selectAttachment = (files: any) => {\n        setAttachments([]);\n        if (files && files[0]) {\n            _.each(files, (eventList) => {\n                if (\n                    eventList.name\n                        .split(\".\")\n                    [eventList.name.split(\".\").length - 1].toLowerCase() ===\n                    FILE_TYPES.PDF\n                ) {\n                    if (eventList.size > 10485760) {\n                        return ToasterService.show(\n                            \"file size is too large, allowed maximum size is 10 MB.\",\n                            \"error\"\n                        );\n                    } else {\n                        setAttachments((prevVals: any) => [...prevVals, eventList]);\n                        const fileURL = URL.createObjectURL(eventList);\n                        setLogoUrl(fileURL)\n                    }\n                } else {\n                    ToasterService.show(\n                        `Invalid file format you can only attach the PDF here!`,\n                        \"error\"\n                    );\n                    eventList = null;\n                }\n            });\n        }\n    };\n\n    const selectDigitalSign = (files: any) => {\n        setDigitalSign([]);\n        if (files && files[0]) {\n            _.each(files, (eventList) => {\n                if (\n                    eventList.name\n                        .split(\".\")\n                    [eventList.name.split(\".\").length - 1].toLowerCase() ===\n                    FILE_TYPES.PDF\n                ) {\n                    if (eventList.size > 10485760) {\n                        return ToasterService.show(\n                            \"file size is too large, allowed maximum size is 10 MB.\",\n                            \"error\"\n                        );\n                    } else {\n                        setDigitalSign((prevVals: any) => [...prevVals, eventList]);\n                        const fileURL = URL.createObjectURL(eventList);\n                        setSignatureUrl(fileURL);\n                    }\n                } else {\n                    ToasterService.show(\n                        `Invalid file format you can only attach the PDF here!`,\n                        \"error\"\n                    );\n                    eventList = null;\n                }\n            });\n        }\n    };\n\n    const removeFileHandler = () => {\n        setAttachments([]);\n        setLogoUrl('');\n    };\n\n    const removeSignHandler = () => {\n        setDigitalSign([]);\n        setSignatureUrl('');\n    };\n\n\n\n\n    const clientFormHandler = async (currentForm: FormType) => {\n        const form = _.cloneDeep(currentForm);\n\n        // if (form?.companyName?.value != clientForm?.companyName?.value) {\n        // const selectedCompany = companyMaster?.find(\n        //     (item: any) => item?.companyName == form?.companyName?.value\n        // );\n        // const selectedCountry = countryMaster?.find(\n        //     (item: any) => item?.name == selectedCompany?.countryName\n        // );\n        if(!isEditClient){\n            form.client_status.hideField = true;\n        }\n        else{\n            form.client_status.hideField = false;\n        }\n        if (form.nda_flag.value == true) {\n            setShowNDAAttacment(true);\n        } else if (form.nda_flag.value == false) {\n            setShowNDAAttacment(false);\n        }\n        console.log('hhhhh', form);\n\n        if (form?.is_same_alias?.value == true) {\n            form.vega_client_name.value = form?.client_name?.value;\n        }\n\n        if (form?.is_msa_missing?.value == true) {\n            setShowMSAAttacment(true);\n            if (form.msa_start_date.validation) {\n                form.msa_start_date.validation.required = true;\n            }\n            if (form.msa_end_date.validation) {\n                form.msa_end_date.validation.required = false;\n            }\n            form.msa_start_date.disable = false;\n            form.msa_end_date.disable = false;\n        } else {\n            setShowMSAAttacment(false);\n            if (form.msa_start_date.validation) {\n                form.msa_start_date.validation.required = false;\n            }\n            if (form.msa_end_date.validation) {\n                form.msa_end_date.validation.required = false;\n            }\n            form.msa_start_date.disable = true;\n            form.msa_end_date.disable = true;\n        }\n\n        console.log('form handler checking ---->>> ', form, clientForm);\n\n        if(form?.isApplicableAM?.value){\n            form.sales_person.disable = false;\n            form.account_manager.disable = false;\n        } else{\n            form.sales_person.value = null;\n            form.account_manager.value = null;\n            form.sales_person.disable = true;\n            form.account_manager.disable = true;\n        }\n\n        if (form.companyName?.value !== clientForm?.companyName?.value) {\n            const selectedCompany = form.companyName?.value\n            if (selectedCompany) {\n                const accountMaster = await getAccountMaster();\n                if (accountMaster) {\n                    const tempData = accountMaster?.filter((item: any) => item?.companyName == selectedCompany).map((ele: any) => ele?.bankName);\n                    form.account_name.options = tempData || [];\n\n                    const defaultAccount = [accountMaster?.filter((item: any) => item?.companyName == selectedCompany)?.find((ele: any) => ele?.isDefaultAccount)?.bankName];\n                    form.account_name.value = defaultAccount.includes(undefined) ? [] : defaultAccount;\n\n                    console.log('form handler checking ---->>> ', defaultAccount);\n\n                }\n            }\n        }\n        if (form.industryHeadNames?.value !== clientForm?.industryHeadNames?.value) {\n            const selectedIndustryHead = form.industryHeadNames?.value\n            if (selectedIndustryHead) {\n                const accountManagers = await getAccountManagerMaster();\n                const salesManager = await getSalesMaster();\n\n                if (accountManagers) {\n                    const tempData = accountManagers?.filter((item: any) => item?.industryHeadNames == selectedIndustryHead).map((ele: any) => ele?.name);\n                    form.account_manager.options = tempData || [];\n                }\n                if (salesManager) {\n                    const tempData = salesManager?.filter((item: any) => item?.industryHeadNames == selectedIndustryHead).map((ele: any) => ele?.name);\n                    form.sales_person.options = tempData || [];\n                }\n                if (industryGroupMaster) {\n                    const selectedIndustry = industryHeadMaster\n                        ?.find((item: any) => item?.industryHeadName === selectedIndustryHead)\n                        ?.industryNames;\n\n                    const selectedIndustryArray = selectedIndustry?.split(',').map((str: string) => str.trim()); // Split and trim the selected industries\n\n                    const tempData = industryGroupMaster\n                        ?.filter((item: any) =>\n                            selectedIndustryArray?.some((industry: string) => item?.groupIndustryName.includes(industry))\n                        )\n                        .map((ele: any) => ele?.groupIndustryName);\n\n                    form.industry_group.options = tempData || [];\n                    console.log('Filtered tempData:', tempData, 'Selected Industries:', selectedIndustryArray);\n                }\n            }\n        }\n\n        setClientForm(form);\n    };\n\n    const msaFormHandler = async (currentForm: FormType) => {\n        const form = _.cloneDeep(currentForm);\n        setMsaForm(form);\n    };\n\n    const createNewClient = async (event: FormEvent) => {\n        event.preventDefault();\n        let companyValidityFlag = true;\n        const companyFormValid: boolean[] = [];\n\n\n        _.each(clientForm, (item: any) => {\n            if (item?.validation?.required) {\n                // companyFormValid.push(item.value);\n                companyValidityFlag = companyValidityFlag && item.value; // Ensure boolean value\n            }\n        });\n\n\n        setIsFormValid(companyValidityFlag);\n        console.log('clientForm', clientForm, clientForm?.account_manager?.value?.length , clientForm?.sales_person\n            ?.value?.length);\n\n        if (clientForm?.isApplicableAM?.value && (!clientForm?.account_manager?.value?.length && !clientForm?.sales_person\n            ?.value?.length)) {\n            ToasterService.show(\n                `Account Manager or Sales Mnager is mandatory`,\n                \"error\"\n            );\n            return;\n        }\n\n        if (companyValidityFlag) {\n            const industry_id =\n                industryMaster.find(\n                    (industry: any) =>\n                        industry.industryName === clientForm.industry_name.value\n                )?.id ?? null;\n            console.log('createClientForm : ', countryMaster, clientForm);\n\n            const countryId =\n                countryMaster.find(\n                    (el: any) =>\n                        el.name === clientForm.country_name.value\n                )?.id ?? null;\n\n            let companyId =\n                // clientForm?.companyName?.value?.forEach((item: any) => {\n                //     const id =\n                //         companyMaster?.find(\n                //             (com: any) => com?.companyName == item\n                //         )?.id ?? null;\n                //     if (id != null) {\n                //         companyId =\n                //             companyId != \"\" ? companyId + \",\" + id : id;\n                //     }\n                // });\n                companyMaster.find(\n                    (el: any) =>\n                        el.companyName === clientForm.companyName.value\n                )?.id ?? null;\n\n            let bankId = clientForm?.account_name?.value\n                ?.map((item: any) =>\n                    accountsMaster?.find((com: any) => com?.bankName === item)?.id\n                )\n                .filter((id: any) => id !== undefined && id !== null)\n                .join(\",\");\n\n            const IndustryHeadId =\n                industryHeadMaster.find(\n                    (el: any) =>\n                        el.industryHeadName === clientForm.industryHeadNames.value\n                )?.id ?? null;\n\n            console.log('dddddddddddd', industryGroupMaster, clientForm);\n            const IndustryGroupId =\n                industryGroupMaster.find(\n                    (el: any) =>\n                        el.groupIndustryName === clientForm.industry_group.value\n                )?.id ?? null;\n\n\n            // const IndustrySubGroupId =\n            //     industryMaster.find(\n            //         (el: any) =>\n            //             el.subIndustryCategory === clientForm.industry_sub_group.value\n            //     )?.id ?? null;\n\n            let accountManagerId = \"\";\n            clientForm?.account_manager?.value?.forEach((item: any) => {\n                const id =\n                    accountManagerMaster?.find(\n                        (com: any) => com?.name == item\n                    )?.id ?? null;\n                if (id != null) {\n                    accountManagerId =\n                        accountManagerId != \"\" ? accountManagerId + \",\" + id : id;\n                }\n            });\n\n            let salesManagerId = \"\";\n            clientForm?.sales_person?.value?.forEach((item: any) => {\n                const id =\n                    salesMaster?.find(\n                        (com: any) => com?.name == item\n                    )?.id ?? null;\n                if (id != null) {\n                    salesManagerId =\n                        salesManagerId != \"\" ? salesManagerId + \",\" + id : id;\n                }\n            });\n\n\n            const formData: any = new FormData();\n\n            const obj = {\n                client_name: clientForm?.client_name?.value,\n                vega_client_name: clientForm?.vega_client_name?.value,\n                client_type: clientForm?.client_type?.value,\n                credit_period: clientForm?.credit_period?.value,\n                client_status: isEditClient ? (clientForm?.client_status?.value==\"Existing\" ? 0: 1) : 1,\n                countryId: countryId,\n                companyId: companyId,\n                accountId: bankId,\n                industryId: industry_id ? industry_id : null,\n                IndustryHeadId: IndustryHeadId,\n                IndustryGroupId: IndustryGroupId,\n                isApplicableAM: clientForm?.isApplicableAM?.value,\n                // IndustrySubGroupId: IndustrySubGroupId,\n                salesMangerId: salesManagerId,\n                accountManagerId: accountManagerId,\n                msa_start_date: formatDate(clientForm?.msa_start_date?.value),\n                msa_end_date: formatDate(clientForm?.msa_end_date?.value),\n                msa_flag: clientForm?.is_msa_missing?.value ? 1 : 0,\n                nda_flag: clientForm?.nda_flag?.value ? 1 : 0,\n                non_solicitation_clause_flag: clientForm?.non_solicitation_clause?.value ? 1 : 0,\n                use_logo_permission_flag: clientForm?.use_logo_permission?.value ? 1 : 0,\n                updated_by: loggedInUserId,\n                isActive: 1\n            };\n\n\n            Object.entries(obj).forEach(([key, value]: any) => {\n                formData.set(key, value);\n            });\n\n\n            // Check for msaFile and ndaFile requirements\n            if (clientForm?.is_msa_missing?.value && (!attachments || !attachments.length)) {\n                ToasterService.show(\"MSA file is required!\", CONSTANTS.ERROR);\n                return;\n            } else if (attachments?.length) {\n                formData.set(\"msaFile\", attachments[0]);\n            }\n\n            if (clientForm?.nda_flag?.value && (!digitalSign || !digitalSign.length)) {\n                ToasterService.show(\"NDA file is required!\", CONSTANTS.ERROR);\n                return;\n            } else if (digitalSign?.length) {\n                formData.set(\"ndaFile\", digitalSign[0]);\n            }\n\n            // if (attachments?.length) {\n            //     formData.set(\"msaFile\", attachments[0]);\n            // }\n\n            // if (digitalSign?.length) {\n            //     formData.set(\"ndaFile\", digitalSign[0]);\n            // }\n            console.log(\"here formData\", formData);\n\n            console.log('createClientForm : ', clientForm, obj);\n\n\n            if (!cliendData?.id) {\n                clientService\n                    .createClientMaster(formData)\n                    .then((response: any) => {\n                        if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                            setCliendData({});\n                            closeFormPopup();\n                            ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                        }\n                    })\n                    .catch((error: any) => {\n                        setCliendData({});\n                        ToasterService.show(error, CONSTANTS.ERROR);\n                    });\n            } else {\n                const formData: any = new FormData();\n\n                const updatePayload = { ...obj, clientId: cliendData?.id };\n\n                Object.entries(updatePayload).forEach(([key, value]: any) => {\n                    formData.set(key, value);\n                });\n\n                if (attachments?.length) {\n                    formData.set(\"msaFile\", attachments[0]);\n                }\n\n                if (digitalSign?.length) {\n                    formData.set(\"ndaFile\", digitalSign[0]);\n                }\n\n                clientService\n                    .updateClientMaster(formData)\n                    .then((response: any) => {\n                        if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                            setCliendData({});\n                            closeFormPopup();\n                            ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                        }\n                    })\n                    .catch((error: any) => {\n                        setCliendData({});\n                        ToasterService.show(error, CONSTANTS.ERROR);\n                    });\n            }\n        } else {\n            ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n        }\n    };\n\n\n    const updateCurrentMSA = async (event: FormEvent) => {\n        event.preventDefault();\n        let companyValidityFlag = true;\n        const companyFormValid: boolean[] = [];\n\n        _.each(msaForm, (item: any) => {\n            if (item?.validation?.required) {\n                // companyFormValid.push(item.valid);\n                companyValidityFlag = companyValidityFlag && item.value;\n            }\n        });\n\n        setIsFormValid(companyValidityFlag);\n\n        if (companyValidityFlag) {\n\n            const formData: any = new FormData();\n\n            const obj = {\n                clientId: cliendData?.id,\n                start_date: formatDate(msaForm?.start_date?.value),\n                end_date: formatDate(msaForm?.end_date?.value),\n                updated_by: loggedInUserId,\n            };\n\n\n            Object.entries(obj).forEach(([key, value]: any) => {\n                formData.set(key, value);\n            });\n\n\n            if (attachments?.length) {\n                formData.set(\"msaFile\", attachments[0]);\n            }\n            console.log('createClientForm : ', clientForm, obj);\n\n            clientService\n                .updateMSAFile(formData)\n                .then((response: any) => {\n                    if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                        setCliendData({});\n                        closeFormPopup();\n                        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                    }\n                })\n                .catch((error: any) => {\n                    setCliendData({});\n                    ToasterService.show(error, CONSTANTS.ERROR);\n                });\n\n        } else {\n            ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n        }\n    };\n\n    return loader ? (\n        <Loader />\n    ) : (\n        <>\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"end\",\n                    marginBottom: \"0.5em\",\n                }}\n            >\n                <ButtonComponent\n                    label=\"Add New Client\"\n                    icon=\"pi pi-check\"\n                    iconPos=\"right\"\n                    submitEvent={openSaveForm}\n                />\n            </div>\n            <p className=\"m-0\">\n                <DataTableBasicDemo\n                    data={clientMaster}\n                    column={clientMasterColumns}\n                    showGridlines={true}\n                    resizableColumns={true}\n                    rows={20}\n                    paginator={true}\n                    sortable={true}\n                    headerRequired={true}\n                    scrollHeight={\"calc(100vh - 200px)\"}\n                    downloadedfileName={\"Client\"}\n                />\n                {showConfirmDialogue ? (\n                    <ConfirmDialogue\n                        actionPopupToggle={actionPopupToggle}\n                        onCloseFunction={onPopUpClose}\n                    />\n                ) : null}\n            </p>\n            {clientFormPopup ? (\n                <div className=\"popup-overlay md-popup-overlay\">\n                    <div className=\"popup-body md-popup-body stretchLeft\">\n                        <div className=\"popup-header \">\n                            <div\n                                className=\"popup-close\"\n                                onClick={() => {\n                                    closeFormPopup();\n                                }}\n                            >\n                                <i className=\"pi pi-angle-left\"></i>\n                                <h4 className=\"popup-heading\">{isEditClient ? 'Update' : 'Add New'} Client</h4>\n                            </div>\n                            <div\n                                className=\"popup-right-close\"\n                                onClick={() => {\n                                    closeFormPopup();\n                                }}\n                            >\n                                &times;\n                            </div>\n                        </div>\n                        <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n                            <FormComponent\n                                form={_.cloneDeep(clientForm)}\n                                formUpdateEvent={clientFormHandler}\n                                isFormValidFlag={isFormValid}\n                            ></FormComponent>\n\n\n\n                            {/* attachment */}\n                            {showNDAAttacment || showMSAAttacment ? <div className=\"row\">\n                                {showMSAAttacment ? <div className=\"col-md-6\">\n                                    <div className={classes[\"upload-wrapper\"]}>\n                                        <div className=\"row pd-10\">\n                                            <div\n                                                className={`col-md-12 ${classes[\"addition-field-header\"]}`}\n                                            >\n                                                <h5 className=\"popup-heading\">MSA Attachment</h5>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className={classes[\"upload-file-section\"]}>\n                                                    <div className={classes[\"upload-file\"]}>\n                                                        {logoUrl ? (\n                                                            <div className={classes[\"image-preview\"]}>\n                                                                <div className=\"icon-ui677\"> <i className=\"pi pi-times-circle\" onClick={removeFileHandler} style={{ color: 'red', fontSize: '1rem' }}></i></div>\n                                                                {/* <img src={logoUrl} style={{ width: '200px', height: '130px' }} alt=\"Preview\" /> */}\n                                                                <img src={ImageUrl.PdfIcon} style={{ width: '200px', height: '130px' }} alt=\"Preview\" />\n                                                            </div>\n                                                        ) : (\n                                                            <div className={classes[\"empty-upload\"]}>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    onClick={(event: any) => {\n                                                                        event.target.value = null;\n                                                                    }}\n                                                                    onChange={(e) => selectAttachment(e.target.files)}\n                                                                    className={classes[\"upload\"]}\n                                                                    style={{ width: \"unset\" }}\n                                                                />\n                                                                <img\n                                                                    src={ImageUrl.FolderIconImage}\n                                                                    alt=\"Folder Icon\"\n                                                                />\n                                                                <p>\n                                                                    Drag files here <span> or browse</span> <br />\n                                                                    <u>Support PDF</u>\n                                                                </p>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> : null}\n                                {showNDAAttacment ? <div className=\"col-md-6\">\n                                    <div className={classes[\"upload-wrapper\"]}>\n                                        <div className=\"row pd-10\">\n                                            <div\n                                                className={`col-md-12 ${classes[\"addition-field-header\"]}`}\n                                            >\n                                                <h5 className=\"popup-heading\">NDA Attachment</h5>\n                                            </div>\n\n                                            <div className=\"col-md-12\">\n                                                <div className={classes[\"upload-file-section\"]}>\n                                                    <div className={classes[\"upload-file\"]}>\n                                                        {signatureUrl ? (\n                                                            <div className={classes[\"image-preview\"]}>\n                                                                <div className=\"icon-ui677\"> <i className=\"pi pi-times-circle\" onClick={removeSignHandler} style={{ color: 'red', fontSize: '1rem' }}></i></div>\n                                                                <img src={ImageUrl.PdfIcon} style={{ width: '200px', height: '130px' }} alt=\"Preview\" />\n                                                            </div>\n                                                        ) : (\n                                                            <div className={classes[\"empty-upload\"]}>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    onClick={(event: any) => {\n                                                                        event.target.value = null;\n                                                                    }}\n                                                                    onChange={(e) =>\n                                                                        selectDigitalSign(e.target.files)\n                                                                    }\n                                                                    className={classes[\"upload\"]}\n                                                                    style={{ width: \"unset\" }}\n                                                                />\n                                                                <img\n                                                                    src={ImageUrl.FolderIconImage}\n                                                                    alt=\"Folder Icon\"\n                                                                />\n                                                                <p>\n                                                                    Drag files here <span> or browse</span> <br />\n                                                                    <u>Support PDF</u>\n                                                                </p>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> : null}\n                            </div> : null}\n                            {/* attachment */}\n                        </div>\n\n                        <div className=\"popup-lower-btn\">\n                            <ButtonComponent\n                                label=\"Submit\"\n                                icon=\"pi pi-check\"\n                                iconPos=\"right\"\n                                submitEvent={createNewClient}\n                            />\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n            {showMsaUpdatePopup ? (\n                <div className=\"popup-overlay md-popup-overlay\">\n                    <div className=\"popup-body md-popup-body stretchLeft\">\n                        <div className=\"popup-header \">\n                            <div\n                                className=\"popup-close\"\n                                onClick={() => {\n                                    closeFormPopup();\n                                }}\n                            >\n                                <i className=\"pi pi-angle-left\"></i>\n                                <h4 className=\"popup-heading\">Update MSA</h4>\n                            </div>\n                            <div\n                                className=\"popup-right-close\"\n                                onClick={() => {\n                                    closeFormPopup();\n                                }}\n                            >\n                                &times;\n                            </div>\n                        </div>\n                        <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n                            <FormComponent\n                                form={_.cloneDeep(msaForm)}\n                                formUpdateEvent={msaFormHandler}\n                                isFormValidFlag={isFormValid}\n                            ></FormComponent>\n\n                            {/* attachment */}\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <div className={classes[\"upload-wrapper\"]}>\n                                        <div className=\"row pd-10\">\n                                            <div\n                                                className={`col-md-12 ${classes[\"addition-field-header\"]}`}\n                                            >\n                                                <h5 className=\"popup-heading\">MSA Attachment</h5>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className={classes[\"upload-file-section\"]}>\n                                                    <div className={classes[\"upload-file\"]}>\n                                                        {logoUrl ? (\n                                                            <div className={classes[\"image-preview\"]}>\n                                                                <div className=\"icon-ui677\"> <i className=\"pi pi-times-circle\" onClick={removeFileHandler} style={{ color: 'red', fontSize: '1rem' }}></i></div>\n                                                                {/* <img src={logoUrl} style={{ width: '200px', height: '130px' }} alt=\"Preview\" /> */}\n                                                                <img src={ImageUrl.PdfIcon} style={{ width: '200px', height: '130px' }} alt=\"Preview\" />\n                                                            </div>\n                                                        ) : (\n                                                            <div className={classes[\"empty-upload\"]}>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    onClick={(event: any) => {\n                                                                        event.target.value = null;\n                                                                    }}\n                                                                    onChange={(e) => selectAttachment(e.target.files)}\n                                                                    className={classes[\"upload\"]}\n                                                                    style={{ width: \"unset\" }}\n                                                                />\n                                                                <img\n                                                                    src={ImageUrl.FolderIconImage}\n                                                                    alt=\"Folder Icon\"\n                                                                />\n                                                                <p>\n                                                                    Drag files here <span> or browse</span> <br />\n                                                                    <u>Support PDF</u>\n                                                                </p>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {/* attachment */}\n                        </div>\n\n                        <div className=\"popup-lower-btn\">\n                            <ButtonComponent\n                                label=\"Submit\"\n                                icon=\"pi pi-check\"\n                                iconPos=\"right\"\n                                submitEvent={updateCurrentMSA}\n                            />\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n};\n\nexport default ClientMaster;\n\n","import { APIURLS } from \"../../../constants/ApiUrls\";\nimport { AuthService } from \"../../auth-service/auth.service\";\nimport { HTTPService } from \"../../http-service/http-service\";\n\nexport class ClientContactMasterService {\n  getClientContactMaster = async (clientContactId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_CLIENT_CONTACT_MASTER, {\n        clientContactId: clientContactId ? clientContactId : null,\n      });\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  createClientContactMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_CLIENT_CONTACT_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateClientContactMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_CLIENT_CONTACT_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateClientContactMaster = async (data: any) => {\n    try {\n      const body = {\n        clientContactId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_CLIENT_CONTACT_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Client.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { ClientMasterService } from \"../../services/masters/client-master/client.service\";\nimport { Chip } from \"primereact/chip\";\nimport { FILE_TYPES } from \"../../enums/file-types.enum\";\nimport { ImageUrl } from \"../../utils/ImageUrl\";\nimport { AccountMasterService } from \"../../services/masters/account-manager-master/accountManager.service\";\nimport { AccountsMasterService } from \"../../services/masters/accounts-master/accounts.service\";\nimport { ClientContactMasterService } from \"../../services/clients/client-contact-master/clientContactMaster.service\";\nimport moment from \"moment\";\n\n\nconst ClientContactMaster = () => {\n    const ClientContactFormFields = {\n        client_name: {\n            inputType: \"singleSelect\",\n            label: \"Client\",\n            options: [],\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n        salutation: {\n            inputType: \"singleSelect\",\n            label: \"Salutation\",\n            options: [\"Mr.\", \"Ms.\", \"Mrs.\"],\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n        first_name: {\n            inputType: \"inputtext\",\n            label: \"First Name\",\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n        last_name: {\n            inputType: \"inputtext\",\n            label: \"Last Name\",\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n        email: {\n            inputType: \"inputtext\",\n            label: \"Email\",\n            value: null,\n            validation: {\n                required: false,\n                // pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n        phone: {\n            inputType: \"inputtext\",\n            label: \"Phone Number\",\n            value: null,\n            validation: {\n                required: false,\n                // pattern: /^\\d{10}$/,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n    };\n\n\n    const [countryMaster, setCountryMaster] = useState<any>([]);\n    const [stateMaster, setStateMaster] = useState<any>([]);\n    const [loader, setLoader] = useState(false);\n    const [clientFormPopup, setClientFormPopup] = useState(false);\n    const [isEditState, setIsEditState] = useState<boolean>(false);\n    const [isFormValid, setIsFormValid] = useState(true);\n    const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n    const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n    const [stateData, setStateData] = useState<any>();\n    const [companyMaster, setCompanyMaster] = useState<any>([]);\n    const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n    const [industryMaster, setIndustryMaster] = useState<any>([]);\n    const [attachments, setAttachments]: any = useState([]);\n    const [digitalSign, setDigitalSign]: any = useState([]);\n    const [logoUrl, setLogoUrl] = useState('');\n    const [signatureUrl, setSignatureUrl] = useState('');\n    const [showNDAAttacment, setShowNDAAttacment] = useState(false);\n    const [showMSAAttacment, setShowMSAAttacment] = useState(false);\n    const [industryGroupMaster, setIndustryGroupMaster] = useState<any>([]);\n    const [accountManagerMaster, setAccountManagerMaster] = useState<any>([]);\n    const [accountsMaster, setAccountsMaster] = useState<any>([]);\n    const [clientMaster, setClientMaster] = useState<any>([]);\n    const [clientContactMaster, setClientContactMaster] = useState<any>([]);\n\n\n    const [clientFormFieldsStructure, setClientFormFieldsStructure]: any =\n        useState(ClientContactFormFields);\n    const [clientForm, setClientForm] = useState<any>(\n        _.cloneDeep(clientFormFieldsStructure)\n    );\n\n    const companyService = new CompanyMasterService();\n    const clientContactService = new ClientContactMasterService();\n    const accountService = new AccountMasterService();\n    const accountsService = new AccountsMasterService();\n\n    const cookies = new Cookies();\n    const userInfo = cookies.get(\"userInfo\");\n\n    const loggedInUserId = userInfo?.userId;\n    let patchData: any;\n    const countryService = new CountryMasterService();\n    const stateService = new StateMasterService();\n    const industryService = new IndustryMasterService();\n    const clientService = new ClientMasterService();\n\n\n    const clientContactColumns = [\n        {\n            label: \"Action\",\n            fieldName: \"action\",\n            textAlign: \"left\",\n           frozen: true,\n            sort: false,\n            filter: false,\n            body: (rowData: any) => (\n                <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n                    <span\n                        className=\"pi pi-pencil\"\n                        style={{ cursor: \"pointer\" }}\n                        title=\"Update\"\n                        onClick={() => onUpdate(rowData)}\n                    ></span>\n                    <span\n                        className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n                        style={{ cursor: \"pointer\" }}\n                        title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n                        onClick={() => onDelete(rowData)}\n                    ></span>\n                </div>\n            ),\n        },\n        {\n            label: \"Client Name\",\n            fieldName: \"client_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Client Name\",\n            body: (rowData: any) => (\n                <div>\n                    <span id={`clientNameTooltip-${rowData.id}`}>{rowData.client_name}</span>\n                    <Tooltip target={`#clientNameTooltip-${rowData.id}`} position=\"top\" />\n                </div>\n            ),\n        },\n        {\n            label: \"Salutation\",\n            fieldName: \"salutation\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Salutation\",\n            body: (rowData: any) => (\n                <div>\n                    <span id={`salutationTooltip-${rowData.id}`}>{rowData.salutation}</span>\n                    <Tooltip target={`#salutationTooltip-${rowData.id}`} position=\"top\" />\n                </div>\n            ),\n        },\n        {\n            label: \"First Name\",\n            fieldName: \"first_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"First Name\",\n            body: (rowData: any) => (\n                <div>\n                    <span id={`firstNameTooltip-${rowData.id}`}>{rowData.first_name}</span>\n                    <Tooltip target={`#firstNameTooltip-${rowData.id}`} position=\"top\" />\n                </div>\n            ),\n        },\n        {\n            label: \"Last Name\",\n            fieldName: \"last_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Last Name\",\n            body: (rowData: any) => (\n                <div>\n                    <span id={`lastNameTooltip-${rowData.id}`}>{rowData.last_name}</span>\n                    <Tooltip target={`#lastNameTooltip-${rowData.id}`} position=\"top\" />\n                </div>\n            ),\n        },\n        {\n            label: \"Email\",\n            fieldName: \"email\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Email\",\n            body: (rowData: any) => (\n                <div>\n                    <span id={`emailTooltip-${rowData.id}`}>{rowData.email}</span>\n                    <Tooltip target={`#emailTooltip-${rowData.id}`} position=\"top\" />\n                </div>\n            ),\n        },\n        {\n            label: \"Phone Number\",\n            fieldName: \"phone_number\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Phone Number\",\n            body: (rowData: any) => (\n                <div>\n                    <span id={`phoneTooltip-${rowData.id}`}>{rowData.phone_number}</span>\n                    <Tooltip target={`#phoneTooltip-${rowData.id}`} position=\"top\" />\n                </div>\n            ),\n        },\n        {\n            label: \"Status\",\n            fieldName: \"isActive\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Status\",\n            body: (rowData: any) => (\n                <div>\n                    <span style={{ color: rowData?.isActive === 1 ? \"green\" : \"red\" }}>\n                        {rowData?.isActive === 1 ? \"Active\" : \"Inactive\"}\n                    </span>\n                </div>\n            ),\n        },\n        {\n            label: \"Updated By\",\n            fieldName: \"updated_by\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Updated By\",\n            body: (rowData: any) => (\n                <div>\n                    <span>{rowData.updated_by}</span>\n                </div>\n            ),\n        },\n        {\n            label: \"Updated At\",\n            fieldName: \"updated_at\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Updated At\",\n            body: (rowData: any) => (\n                <div>\n                    <span>{rowData.updated_at}</span>\n                    {/* <span>{new Date(rowData.updated_at).toLocaleString()}</span> */}\n                </div>\n            ),\n        }\n    ];\n\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await getClientContactMaster();\n            const clients = await getClientMaster();\n            await formatClientDetails(clients);\n        };\n        if (clientFormPopup == false && showConfirmDialogue == false) {\n            fetchData();\n        }\n    }, [clientFormPopup, showConfirmDialogue]);\n\n    const getClientContactMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await clientContactService.getClientContactMaster();\n            console.log(`chwckdas`,)\n             response?.clientContacts?.forEach((el: any) => {\n             el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n             });\n            setClientContactMaster(response?.clientContacts);\n            return response?.clientContacts;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n    const getClientMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await clientService.getClientMaster();\n            const temp = response?.clients?.filter((item: any) => item?.isactive || item?.isActive)\n            setClientMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const formatClientDetails = async (clients: any = clientMaster) => {\n        const clientList = clients.map((item: any) => item?.client_name);\n        clientFormFieldsStructure.client_name.options = clientList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientContactFormHandler(clientFormFieldsStructure);\n    };\n\n    const clientContactFormHandler = async (form: FormType) => {\n        setClientForm(form);\n    };\n\n    const openSaveForm = async () => {\n        setClientFormPopup(true);\n    };\n\n    const onUpdate = (data: any) => {\n        setStateData(data);\n        updateStateMaster(data);\n        setClientFormPopup(true);\n        setIsEditState(true);\n    };\n\n    const onPopUpClose = (e?: any) => {\n        setShowConfirmDialogue(false);\n    };\n\n    const updateStateMaster = (data: any) => {\n        console.log('rrrrrrrrrrrr', data);\n\n        try {\n            clientFormFieldsStructure.client_name.value = data?.client_name;\n            clientFormFieldsStructure.salutation.value = data?.salutation;\n            clientFormFieldsStructure.first_name.value = data?.first_name;\n            clientFormFieldsStructure.last_name.value = data?.last_name;\n            clientFormFieldsStructure.email.value = data?.email;\n            clientFormFieldsStructure.phone.value = data?.phone_number;\n\n            setClientForm(_.cloneDeep(clientFormFieldsStructure));\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    };\n\n    const onDelete = (data: any) => {\n        patchData = data;\n        setActionPopupToggle({\n            displayToggle: false,\n            title: \"Delete\",\n            message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n                ? \"activate\"\n                : \"deactivate\"\n                } this record?`,\n            acceptFunction: confirmDelete,\n            rejectFunction: onPopUpClose,\n        });\n        setShowConfirmDialogue(true);\n    };\n\n    const confirmDelete = () => {\n        setLoader(true);\n        clientContactService\n            .deactivateClientContactMaster({ ...patchData, loggedInUserId })\n            .then(() => {\n                setLoader(false);\n                setShowConfirmDialogue(false);\n                ToasterService.show(\n                    `Client contact record ${patchData?.isactive ? \"deactivated\" : \"activated\"\n                    } successfully`,\n                    CONSTANTS.SUCCESS\n                );\n            })\n            .catch((error) => {\n                setLoader(false);\n                return false;\n            });\n    };\n\n    const closeFormPopup = () => {\n        setClientFormPopup(false);\n        setIsEditState(false);\n        setStateData({});\n        setClientFormFieldsStructure(_.cloneDeep(ClientContactFormFields));\n        setClientForm(_.cloneDeep(ClientContactFormFields));\n    };\n\n\n    const clientFormHandler = async (currentForm: FormType) => {\n        const form = _.cloneDeep(currentForm);\n        // if (form?.companyName?.value != clientForm?.companyName?.value) {\n        const selectedCompany = companyMaster?.find(\n            (item: any) => item?.companyName == form?.companyName?.value\n        );\n        const selectedCountry = countryMaster?.find(\n            (item: any) => item?.name == selectedCompany?.countryName\n        );\n        if (form?.nda_flag?.value == true) {\n            setShowNDAAttacment(true);\n        } else {\n            setShowNDAAttacment(false);\n        }\n\n        // if (form?.is_msa_missing?.value == true) {\n        //     setShowMSAAttacment(true);\n        //     if (form.msa_start_date.validation) {\n        //         form.msa_start_date.validation.required = true;\n        //     }\n        //     if (form.msa_end_date.validation) {\n        //         form.msa_end_date.validation.required = true;\n        //     }\n        //     form.msa_start_date.disable = false;\n        //     form.msa_end_date.disable = false;\n        // } else {\n        //     setShowMSAAttacment(false);\n        //     if (form.msa_start_date.validation) {\n        //         form.msa_start_date.validation.required = false;\n        //     }\n        //     if (form.msa_end_date.validation) {\n        //         form.msa_end_date.validation.required = false;\n        //     }\n        //     form.msa_start_date.disable = true;\n        //     form.msa_end_date.disable = true;\n        // }\n\n        console.log('isMSAChecked', form);\n\n        //   if (selectedCountry) {\n        //     form.country_name.value = selectedCompany?.countryName;\n        //     const stateList = await getStateMaster(selectedCountry?.id);\n        //     if (stateList) {\n        //       const stateNames = stateList?.map((state: any) => state.stateName);\n        //       form.state_name.options = stateNames || [];\n        //       form.state_name.value = null;\n        //     }\n        //   }\n        // }\n        setClientForm(form);\n    };\n\n    const createNewClient = async (event: FormEvent) => {\n        event.preventDefault();\n        let companyValidityFlag = true;\n        const companyFormValid: boolean[] = [];\n\n        _.each(clientForm, (item: any) => {\n            if (item?.validation?.required) {\n                // companyFormValid.push(item.valid);\n                companyValidityFlag = companyValidityFlag && item.value;\n            }\n        });\n\n        setIsFormValid(companyValidityFlag);\n\n        if (companyValidityFlag) {\n\n            //     // const companyId =\n            //     // companyMaster.find(\n            //     //   (company: any) =>\n            //     //     company.companyName === clientForm.companyName.value\n            //     // )?.id ?? null;\n\n\n            const obj = {\n                client_name: clientForm?.client_name?.value,\n                salutation: clientForm?.salutation?.value,\n                first_name: clientForm?.first_name?.value,\n                last_name: clientForm?.last_name?.value,\n                email: clientForm?.email?.value,\n                phone_number: clientForm?.phone?.value,\n                updatedBy: loggedInUserId,\n            };\n            console.log('koooo', obj);\n\n\n            if (!stateData?.id) {\n                clientContactService\n                    .createClientContactMaster(obj)\n                    .then((response: any) => {\n                        if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                            setStateData({});\n                            closeFormPopup();\n                            ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                        }\n                    })\n                    .catch((error: any) => {\n                        setStateData({});\n                        ToasterService.show(error, CONSTANTS.ERROR);\n                    });\n            } else {\n                const updatePayload = { ...obj, clientContactId: stateData?.id, isActive: stateData?.isActive };\n                clientContactService\n                    .updateClientContactMaster(updatePayload)\n                    .then((response: any) => {\n                        if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                            setStateData({});\n                            closeFormPopup();\n                            ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                        }\n                    })\n                    .catch((error: any) => {\n                        setStateData({});\n                        ToasterService.show(error, CONSTANTS.ERROR);\n                    });\n            }\n        } else {\n            ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n        }\n    };\n\n    return loader ? (\n        <Loader />\n    ) : (\n        <>\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"end\",\n                    marginBottom: \"0.5em\",\n                }}\n            >\n                <ButtonComponent\n                    label=\"Add New Contact\"\n                    icon=\"pi pi-check\"\n                    iconPos=\"right\"\n                    submitEvent={openSaveForm}\n                />\n            </div>\n            <p className=\"m-0\">\n                <DataTableBasicDemo\n                    data={clientContactMaster}\n                    column={clientContactColumns}\n                    showGridlines={true}\n                    resizableColumns={true}\n                    rows={20}\n                    paginator={true}\n                    sortable={true}\n                    headerRequired={true}\n                    scrollHeight={\"calc(100vh - 200px)\"}\n                    downloadedfileName={\"Client_Contact\"}\n                />\n                {showConfirmDialogue ? (\n                    <ConfirmDialogue\n                        actionPopupToggle={actionPopupToggle}\n                        onCloseFunction={onPopUpClose}\n                    />\n                ) : null}\n            </p>\n            {clientFormPopup ? (\n                <div className=\"popup-overlay md-popup-overlay\">\n                    <div className=\"popup-body md-popup-body stretchLeft\">\n                        <div className=\"popup-header \">\n                            <div\n                                className=\"popup-close\"\n                                onClick={() => {\n                                    closeFormPopup();\n                                }}\n                            >\n                                <i className=\"pi pi-angle-left\"></i>\n                                <h4 className=\"popup-heading\">{isEditState ? 'Update' : 'Add New'} Contact</h4>\n                            </div>\n                            <div\n                                className=\"popup-right-close\"\n                                onClick={() => {\n                                    closeFormPopup();\n                                }}\n                            >\n                                &times;\n                            </div>\n                        </div>\n                        <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n                            <FormComponent\n                                form={_.cloneDeep(clientForm)}\n                                formUpdateEvent={clientFormHandler}\n                                isFormValidFlag={isFormValid}\n                            ></FormComponent>\n                        </div>\n\n                        <div className=\"popup-lower-btn\">\n                            <ButtonComponent\n                                label=\"Submit\"\n                                icon=\"pi pi-check\"\n                                iconPos=\"right\"\n                                submitEvent={createNewClient}\n                            />\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n};\n\nexport default ClientContactMaster;\n\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Client.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { ClientMasterService } from \"../../services/masters/client-master/client.service\";\nimport { Chip } from \"primereact/chip\";\nimport { FILE_TYPES } from \"../../enums/file-types.enum\";\nimport { ImageUrl } from \"../../utils/ImageUrl\";\nimport { AccountMasterService } from \"../../services/masters/account-manager-master/accountManager.service\";\nimport { AccountsMasterService } from \"../../services/masters/accounts-master/accounts.service\";\nimport { ClientContactMasterService } from \"../../services/clients/client-contact-master/clientContactMaster.service\";\nimport moment from \"moment\";\n\n\nconst ClientBillToMaster = () => {\n  const ClientBillFormFields = {\n    client_name: {\n      inputType: \"singleSelect\",\n      label: \"Client\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      disable: true,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    state_name: {\n      inputType: \"singleSelect\",\n      label: \"State Name\",\n      options: [],\n      value: null,\n      disable: false,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    state_code:{\n      inputType: \"inputtext\",\n      label: \"State Code\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n\n    },\n    // iec_code: {\n    //   inputType: \"inputtext\",\n    //   label: \"IEC Code\",\n    //   value: null,\n    //   validation: {\n    //     required: false,\n    //   },\n    //   fieldWidth: \"col-md-6\",\n    // },\n    gstIn: {\n      inputType: \"inputtext\",\n      label: \"GSTN\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    iec_code: {\n      inputType: \"inputtext\",\n      label: \"IEC Code\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    placeOfSupply: {\n      inputType: \"inputtext\",\n      label: \"Place of Supply\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    address1: {\n      inputType: \"inputtext\",\n      label: \"Address 1\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    address2: {\n      inputType: \"inputtext\",\n      label: \"Address 2\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    address3: {\n      inputType: \"inputtext\",\n      label: \"Address 3\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    isDefaultAddress: {\n      inputType: \"inputSwitch\",\n      label: \"Is It Default Address\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6  mg-12-t\",\n    },\n  };\n\n\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [stateMaster, setStateMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [clientFormPopup, setClientFormPopup] = useState(false);\n  const [isEditState, setIsEditState] = useState<boolean>(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n  const [industryMaster, setIndustryMaster] = useState<any>([]);\n  const [attachments, setAttachments]: any = useState([]);\n  const [digitalSign, setDigitalSign]: any = useState([]);\n  const [logoUrl, setLogoUrl] = useState('');\n  const [signatureUrl, setSignatureUrl] = useState('');\n  const [showNDAAttacment, setShowNDAAttacment] = useState(false);\n  const [showMSAAttacment, setShowMSAAttacment] = useState(false);\n  const [industryGroupMaster, setIndustryGroupMaster] = useState<any>([]);\n  const [accountManagerMaster, setAccountManagerMaster] = useState<any>([]);\n  const [accountsMaster, setAccountsMaster] = useState<any>([]);\n  const [clientMaster, setClientMaster] = useState<any>([]);\n  const [clientContactMaster, setClientContactMaster] = useState<any>([]);\n\n  const [clientBillToMaster, setClientBillToMaster] = useState<any>([]);\n  const [AdditionalDetailsForm, setAdditionalDetailsForm] = useState<any>({});\n  const [defaultBillingAddress,setDefaultBillingAddress] = useState<any>();\n\n\n\n  const [clientBillFieldsStructure, setClientBillFieldsStructure]: any =\n    useState(ClientBillFormFields);\n  const [ClientBillForm, setClientBillForm] = useState<any>(\n    _.cloneDeep(clientBillFieldsStructure)\n  );\n\n  const companyService = new CompanyMasterService();\n  const clientContactService = new ClientContactMasterService();\n  const accountService = new AccountMasterService();\n  const accountsService = new AccountsMasterService();\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const countryService = new CountryMasterService();\n  const stateService = new StateMasterService();\n  const industryService = new IndustryMasterService();\n  const clientService = new ClientMasterService();\n\n\n  const ClientBillToMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n     frozen: true,\n      width:\"200px\",\n      sort: false,\n\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Client\",\n      fieldName: \"client_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"client_name\",\n      changeFilter: true,\n      placeholder: \"Client\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.client_name}\n          >\n            {rowData.client_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 1\",\n      fieldName: \"address1\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"address1\",\n      changeFilter: true,\n      placeholder: \"Address 1\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address1}\n          >\n            {rowData.address1}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 2\",\n      fieldName: \"address2\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"address2\",\n      changeFilter: true,\n      placeholder: \"Address 2\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address2}\n          >\n            {rowData.address2}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 3\",\n      fieldName: \"address3\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"address3\",\n      changeFilter: true,\n      placeholder: \"Address 3\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address3}\n          >\n            {rowData.address3}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"countryName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"countryName\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.countryName}\n          >\n            {rowData.countryName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"State Name\",\n      fieldName: \"state_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"state_name\",\n      changeFilter: true,\n      placeholder: \"State Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.state_name}\n          >\n            {rowData.state_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"State Code\",\n      fieldName: \"state_code\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"state_code\",\n      changeFilter: true,\n      placeholder: \"State Code\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.state_code}\n          >\n            {rowData.state_code}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"GSTN\",\n      fieldName: \"gstIn\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"gstIn\",\n      changeFilter: true,\n      placeholder: \"gstn\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.gstIn}\n          >\n            {rowData.gstIn}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n\n    // {\n    //   label: \"IEC Code\",\n    //   fieldName: \"iec_code\",\n    //   textAlign: \"left\",\n    //   sort: true,\n    //   filter: true,\n    //   fieldValue: \"iec_code\",\n    //   changeFilter: true,\n    //   placeholder: \"IEC Code\",\n    //   body: (rowData: any) => (\n    //     <div>\n    //       <span>\n    //         {rowData.iec_code}\n    //       </span>\n    //     </div>\n    //   ),\n    // },\n    {\n      label: \"Place Of Supply\",\n      fieldName: \"placeOfSupply\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"placeOfSupply\",\n      changeFilter: true,\n      placeholder: \"place of supply\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.placeOfSupply}\n          >\n            {rowData.placeOfSupply}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Default Address\",\n      fieldName: \"isDefaultAddress\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.IECode}\n          >\n            {rowData.isDefaultAddress == 1 ? \"Yes\" : \"No\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Additional Address Details\",\n      fieldName: \"additionalAddressDetails\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"additionalAddressDetails\",\n      changeFilter: true,\n      placeholder: \"Additional Address Details\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.additionalAddressDetails}\n          >\n            {rowData.additionalAddressDetails}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive === 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive === 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getClientBillToMaster();\n      const clients = await getClientMaster();\n      const countries = await getCountryMaster();\n      const states = await getStateMaster();\n      await formatCountry_ClientDetails(countries);\n      await formatState_ClientDetails(states);\n      await formatClient_BillDetails(clients);\n    };\n    if (clientFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [clientFormPopup, showConfirmDialogue]);\n\n  const getClientBillToMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientService.getClientBillToMaster();\n      response?.data?.forEach((el: any) => {\n       el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n       });\n      setClientBillToMaster(response?.data);\n    console.log('bbbbbbbbbb', response?.data);\n\n      setDefaultBillingAddress(response?.data?.find((item:any) => item.isDefaultAddress == 1) || {}); \n      return response?.data;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      setCountryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n  const getStateMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await stateService.getStateMaster();\n      const temp = response?.states?.filter((item: any) => item?.isactive || item?.isActive)\n      setStateMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatCountry_ClientDetails = async (\n    countries: any = countryMaster\n  ) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    clientBillFieldsStructure.country_name.options = countrylist;\n    await setClientBillFieldsStructure(clientBillFieldsStructure);\n    await clientBillFormHandler(clientBillFieldsStructure);\n  };\n\n  const formatState_ClientDetails = async (states: any = stateMaster) => {\n    const statelist = states.map((state: any) => state.state_name);\n    clientBillFieldsStructure.state_name.options = statelist;\n    await setClientBillFieldsStructure(clientBillFieldsStructure);\n    await clientBillFormHandler(clientBillFieldsStructure);\n  };\n\n  const formatClient_BillDetails = async (clients: any = clientMaster) => {\n    const clientlist = clients.map((client: any) => client?.client_name);\n    clientBillFieldsStructure.client_name.options = clientlist;\n    await setClientBillFieldsStructure(clientBillFieldsStructure);\n    await clientBillFormHandler(clientBillFieldsStructure);\n  };\n\n  const clientBillFormHandler = async (currentForm: FormType) => {\n    // setClientBillForm(form);\n     const form = _.cloneDeep(currentForm);\n\n    // const form = _.cloneDeep(currentForm);\n\n    if (form?.client_name?.value != ClientBillForm?.client_name?.value) {\n      const selectedClient = clientMaster?.find(\n        (item: any) => item?.client_name == form?.client_name?.value\n      );\n      const selectedCountry = countryMaster?.find(\n        (item: any) => item?.name == selectedClient?.countryName\n      );\n      if (selectedCountry) {\n        form.country_name.value = selectedClient?.countryName;\n        // const stateList = await getStateMaster();\n        // console.log('stateList---------------->',stateList);\n        if (stateMaster) {\n          // console.log('state-master',stateMaster)\n          const stateNames = stateMaster?.map((state: any) => state.stateName);\n          form.state_name.options = stateNames || [];\n          form.state_name.value = null;\n        }\n\n        console.log('gggggggggg', form);\n        \n        const parsedAdditionalAddress = defaultBillingAddress?.additionalAddressDetails && JSON.parse(defaultBillingAddress?.additionalAddressDetails)\n\n        if(defaultBillingAddress?.id){\n          form.address1.value = defaultBillingAddress?.address1;\n          form.address2.value = defaultBillingAddress?.address2;\n          form.address3.value = defaultBillingAddress?.address3;\n          form.state_name.value = defaultBillingAddress?.state_name;\n          form.placeOfSupply.value = defaultBillingAddress?.placeOfSupply;\n          form.state_code.value = defaultBillingAddress?.state_code;\n          form.gstIn.value = defaultBillingAddress?.gstIn;\n          // form.country_name.value = defaultBillingAddress?.countryName;  \n          \n          const addressDetails = JSON.parse(\n            selectedCountry?.addressAdditionalFields\n          );\n          console.log(\"defaultBillingAddress ----->\",addressDetails);\n          // const detailsForm = Object.keys(addressDetails)?.reduce(\n          //   (acc: any, item: any, index: any) => {\n          //     acc[index] = {\n          //       inputType: \"inputtext\",\n          //       label: addressDetails[item],\n          //       value: null,\n          //       validation: {\n          //         required: true,\n          //       },\n          //       fieldWidth: \"col-md-4\",\n          //     };\n          //     return acc;\n          //   },\n          //   {}\n          // );\n          \n\n          const detailsForm = Object.keys(addressDetails)?.reduce(\n            (acc: any, item: any, index: any) => {\n              const fieldLabel = addressDetails[item]; // Get label from addressAdditionalFields\n              const matchedValue = parsedAdditionalAddress[fieldLabel]; // Match with parsedAdditionalAddress\n    \n              acc[index] = {\n                inputType: \"inputtext\",\n                label: fieldLabel,\n                value: matchedValue || null, // Patch value if match found\n                validation: {\n                  required: true,\n                },\n                fieldWidth: \"col-md-4\",\n              };\n              return acc;\n            },\n            {}\n          );\n          \n          setAdditionalDetailsForm(detailsForm);\n     \n         } else{\n\n           const addressDetails = JSON.parse(\n             selectedCountry?.addressAdditionalFields\n           );\n           const detailsForm = Object.keys(addressDetails)?.reduce(\n             (acc: any, item: any, index: any) => {\n               acc[index] = {\n                 inputType: \"inputtext\",\n                 label: addressDetails[item],\n                 value: null,\n                 validation: {\n                   required: true,\n                 },\n                 fieldWidth: \"col-md-4\",\n               };\n               return acc;\n             },\n             {}\n           );\n           setAdditionalDetailsForm(detailsForm);\n         }\n\n      }\n    }\n    setClientBillForm(form);\n  };\n\n  const additionalDetailsFormHandler = async (form: FormType) => {\n    setAdditionalDetailsForm(form);\n  };\n\n\n  const getClientContactMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientContactService.getClientContactMaster();\n      setClientContactMaster(response?.clientContacts);\n      return response?.clientContacts;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n  const getClientMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientService.getClientMaster();\n      const temp = response?.clients?.filter((item: any) => item?.isactive || item?.isActive)\n      setClientMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  // const formatClientDetails = async (clients: any = clientMaster) => {\n  //     const clientList = clients.map((item: any) => item?.client_name);\n  //     clientFormFieldsStructure.client_name.options = clientList;\n  //     await setClientFormFieldsStructure(clientFormFieldsStructure);\n  //     await clientContactFormHandler(clientFormFieldsStructure);\n  // };\n\n  // const clientContactFormHandler = async (form: FormType) => {\n  //     setClientForm(form);\n  // };\n\n  const openSaveForm = async () => {\n    setClientFormPopup(true);\n  };\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateClientBillToMaster(data);\n    setClientFormPopup(true);\n    setIsEditState(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateClientBillToMaster = async (data: any) => {\n    console.log('data------->',data);\n    try {\n      ClientBillForm.client_name.value = data?.client_name;\n      ClientBillForm.address1.value = data?.address1;\n      ClientBillForm.address2.value = data?.address2;\n      ClientBillForm.address3.value = data?.address3;\n      ClientBillForm.state_name.options = stateMaster?.map((state: any) => state.stateName) || []\n      ClientBillForm.state_code.value = data?.state_code;\n      ClientBillForm.gstIn.value = data?.gstIn;\n      ClientBillForm.iec_code.value = data?.iec_code || \"\";\n      ClientBillForm.placeOfSupply.value = data?.placeOfSupply;\n      ClientBillForm.state_name.value = data?.state_name;\n      // ClientBillForm.pin.value = data?.pin;\n      ClientBillForm.country_name.value = data?.countryName;\n      ClientBillForm.isDefaultAddress.value = data?.isDefaultAddress == 1 ? true : false;\n\n      // ClientBillForm.state_name.value = data?.state_name;\n\n      // setClientBillForm(_.cloneDeep(clientBillFieldsStructure)); \n\n      const addressDetails = JSON.parse(data?.additionalAddressDetails);\n      const addressForm = Object.keys(addressDetails)?.reduce(\n        (acc: any, item: any, index: any) => {\n          acc[index] = {\n            inputType: \"inputtext\",\n            label: item,\n            value: addressDetails[item],\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4\",\n          };\n          return acc;\n        },\n        {}\n      );\n      setAdditionalDetailsForm(addressForm);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n        ? \"activate\"\n        : \"deactivate\"\n        } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    clientService\n      .deactivateClientBillToMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Client billing info ${patchData?.isactive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setClientFormPopup(false);\n    setIsEditState(false);\n    setStateData({});\n    setClientBillFieldsStructure(_.cloneDeep(ClientBillFormFields));\n    setClientBillForm(_.cloneDeep(ClientBillFormFields));\n    setAdditionalDetailsForm({});\n\n  };\n\n  const createClientBillInfo = async (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(ClientBillForm, (item: any) => {\n      if (item?.validation?.required) {\n        // companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.value;\n      }\n    });\n    console.log('clientForm', ClientBillForm, companyValidityFlag);\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const clientId =\n        clientMaster.find(\n          (client: any) => client.client_name === ClientBillForm.client_name.value\n        )?.id ?? null;\n\n      const countryId =\n        countryMaster.find(\n          (country: any) => country.name === ClientBillForm.country_name.value\n        )?.id ?? null;\n\n\n      console.log('hiiii', countryId);\n      if (ClientBillForm?.isDefaultAddress?.value == true) {\n        let defaultAccountFlag = false;\n        clientBillToMaster\n          ?.filter(\n            (acc: any) => acc?.client_name == ClientBillForm.client_name.value\n          )\n          ?.forEach((item: any) => {\n            defaultAccountFlag = defaultAccountFlag || item?.isDefaultAddress;\n          });\n        if (defaultAccountFlag) {\n          ToasterService.show(\n            \"A default address for this company is already present\",\n            CONSTANTS.ERROR\n          );\n          return;\n        }\n      }\n\n      // const stateId =\n      //   stateMaster.find(\n      //     (state: any) => state.state_name === ClientBillForm.state_name.value\n      //   )?.state_id ?? null;\n\n      const addressData = Object.keys(AdditionalDetailsForm)?.reduce(\n        (acc: any, item: any, index: any) => {\n          if (AdditionalDetailsForm[index]?.value != null) {\n            acc[AdditionalDetailsForm[index]?.label] =\n              AdditionalDetailsForm[index]?.value;\n          }\n          return acc;\n        },\n        {}\n      );\n\n\n      const obj = {\n        clientId: clientId,\n        countryId: countryId,\n        state_name:ClientBillForm?.state_name?.value,\n        state_code:ClientBillForm?.state_code?.value,\n        gstIn:ClientBillForm?.gstIn?.value,\n        iec_code:ClientBillForm?.iec_code?.value,\n        placeOfSupply:ClientBillForm?.placeOfSupply?.value,\n        address1: ClientBillForm?.address1?.value,\n        address2: ClientBillForm?.address2?.value,\n        address3: ClientBillForm?.address3?.value,\n        additionalAddressDetails: addressData,\n        isDefaultAddress: ClientBillForm?.isDefaultAddress?.value == true ? 1 : 0,\n        updated_by: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        clientService\n          .createClientBillToMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, id: stateData?.id };\n\n        clientService\n          .updateClientBillToMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Billing Info\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={clientBillToMaster}\n          column={ClientBillToMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Client_Bill_To\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {clientFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header \">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditState ? 'Update' : 'Add New'} Billing Info</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(ClientBillForm)}\n                formUpdateEvent={clientBillFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n              <FormComponent\n                form={_.cloneDeep(AdditionalDetailsForm)}\n                formUpdateEvent={additionalDetailsFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createClientBillInfo}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default ClientBillToMaster;\n\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Client.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { ClientMasterService } from \"../../services/masters/client-master/client.service\";\nimport { Chip } from \"primereact/chip\";\nimport { FILE_TYPES } from \"../../enums/file-types.enum\";\nimport { ImageUrl } from \"../../utils/ImageUrl\";\nimport { AccountMasterService } from \"../../services/masters/account-manager-master/accountManager.service\";\nimport { AccountsMasterService } from \"../../services/masters/accounts-master/accounts.service\";\nimport { ClientContactMasterService } from \"../../services/clients/client-contact-master/clientContactMaster.service\";\nimport moment from \"moment\";\n\n\nconst ClientShipToMaster = () => {\n  const ClientBillFormFields = {\n    client_name: {\n      inputType: \"singleSelect\",\n      label: \"Client\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    country_name: {\n      inputType: \"singleSelect\",\n      label: \"Country\",\n      options: [],\n      value: null,\n      disable: true,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    state_name: {\n      inputType: \"singleSelect\",\n      label: \"State Name\",\n      options: [],\n      value: null,\n      disable: false,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    state_code:{\n      inputType: \"inputtext\",\n      label: \"State Code\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n\n    },\n    gstIn: {\n      inputType: \"inputtext\",\n      label: \"GSTN\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    placeOfSupply: {\n      inputType: \"inputtext\",\n      label: \"Place of Supply\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    address1: {\n      inputType: \"inputtext\",\n      label: \"Address 1\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    address2: {\n      inputType: \"inputtext\",\n      label: \"Address 2\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    address3: {\n      inputType: \"inputtext\",\n      label: \"Address 3\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    isDefaultAddress: {\n      inputType: \"inputSwitch\",\n      label: \"Is It Default Address\",\n      value: null,\n      validation: {\n        required: false,\n      },\n      fieldWidth: \"col-md-6  mg-12-t\",\n    },\n  };\n\n\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [stateMaster, setStateMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [clientFormPopup, setClientFormPopup] = useState(false);\n  const [isEditState, setIsEditState] = useState<boolean>(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n  const [industryMaster, setIndustryMaster] = useState<any>([]);\n  const [attachments, setAttachments]: any = useState([]);\n  const [digitalSign, setDigitalSign]: any = useState([]);\n  const [logoUrl, setLogoUrl] = useState('');\n  const [signatureUrl, setSignatureUrl] = useState('');\n  const [showNDAAttacment, setShowNDAAttacment] = useState(false);\n  const [showMSAAttacment, setShowMSAAttacment] = useState(false);\n  const [industryGroupMaster, setIndustryGroupMaster] = useState<any>([]);\n  const [accountManagerMaster, setAccountManagerMaster] = useState<any>([]);\n  const [accountsMaster, setAccountsMaster] = useState<any>([]);\n  const [clientMaster, setClientMaster] = useState<any>([]);\n  const [clientContactMaster, setClientContactMaster] = useState<any>([]);\n\n  const [clientShipToMaster, setClientShipToMaster] = useState<any>([]);\n  const [clientBillToMaster, setClientBillToMaster] = useState<any>([]);\n  const [AdditionalDetailsForm, setAdditionalDetailsForm] = useState<any>({});\n\n  // const [defaultBillingAddress,setDefaultBillingAddress] = useState<any>();\n\n\n\n  const [clientBillFieldsStructure, setClientBillFieldsStructure]: any =\n    useState(ClientBillFormFields);\n  const [ClientBillForm, setClientBillForm] = useState<any>(\n    _.cloneDeep(clientBillFieldsStructure)\n  );\n\n  const companyService = new CompanyMasterService();\n  const clientContactService = new ClientContactMasterService();\n  const accountService = new AccountMasterService();\n  const accountsService = new AccountsMasterService();\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const countryService = new CountryMasterService();\n  const stateService = new StateMasterService();\n  const industryService = new IndustryMasterService();\n  const clientService = new ClientMasterService();\n\n\n  const ClientBillToMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n     frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Client\",\n      fieldName: \"client_name\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"client_name\",\n      changeFilter: true,\n      placeholder: \"Client\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.client_name}\n          >\n            {rowData.client_name}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    \n    {\n      label: \"Address 1\",\n      fieldName: \"address1\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"address1\",\n      changeFilter: true,\n      placeholder: \"Address 1\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address1}\n          >\n            {rowData.address1}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 2\",\n      fieldName: \"address2\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"address2\",\n      changeFilter: true,\n      placeholder: \"Address 2\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address2}\n          >\n            {rowData.address2}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Address 3\",\n      fieldName: \"address3\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"address3\",\n      changeFilter: true,\n      placeholder: \"Address 3\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address3}\n          >\n            {rowData.address3}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Country\",\n      fieldName: \"countryName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"countryName\",\n      changeFilter: true,\n      placeholder: \"Country\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.countryName}\n          >\n            {rowData.countryName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n          label: \"State Name\",\n          fieldName: \"state_name\",\n          textAlign: \"left\",\n          sort: true,\n          filter: true,\n          fieldValue: \"state_name\",\n          changeFilter: true,\n          placeholder: \"State Name\",\n          body: (rowData: any) => (\n            <div>\n              <span\n                id={`companyNameTooltip-${rowData.id}`}\n              // data-pr-tooltip={rowData.state_name}\n              >\n                {rowData.state_name}\n              </span>\n              <Tooltip\n                target={`#companyNameTooltip-${rowData.id}`}\n                position=\"top\"\n              />\n            </div>\n          ),\n        },\n        {\n          label: \"State Code\",\n          fieldName: \"state_code\",\n          textAlign: \"left\",\n          sort: true,\n          filter: true,\n          fieldValue: \"state_code\",\n          changeFilter: true,\n          placeholder: \"State Code\",\n          body: (rowData: any) => (\n            <div>\n              <span\n                id={`companyNameTooltip-${rowData.id}`}\n              // data-pr-tooltip={rowData.state_code}\n              >\n                {rowData.state_code}\n              </span>\n              <Tooltip\n                target={`#companyNameTooltip-${rowData.id}`}\n                position=\"top\"\n              />\n            </div>\n          ),\n        },\n        {\n          label: \"GSTN\",\n          fieldName: \"gstIn\",\n          textAlign: \"left\",\n          sort: true,\n          filter: true,\n          fieldValue: \"gstIn\",\n          changeFilter: true,\n          placeholder: \"gstn\",\n          body: (rowData: any) => (\n            <div>\n              <span\n                id={`companyNameTooltip-${rowData.id}`}\n              // data-pr-tooltip={rowData.gstIn}\n              >\n                {rowData.gstIn}\n              </span>\n              <Tooltip\n                target={`#companyNameTooltip-${rowData.id}`}\n                position=\"top\"\n              />\n            </div>\n          ),\n        },\n        {\n          label: \"Place Of Supply\",\n          fieldName: \"placeOfSupply\",\n          textAlign: \"left\",\n          sort: true,\n          filter: true,\n          fieldValue: \"placeOfSupply\",\n          changeFilter: true,\n          placeholder: \"place of supply\",\n          body: (rowData: any) => (\n            <div>\n              <span\n                id={`companyNameTooltip-${rowData.id}`}\n              // data-pr-tooltip={rowData.placeOfSupply}\n              >\n                {rowData.placeOfSupply}\n              </span>\n              <Tooltip\n                target={`#companyNameTooltip-${rowData.id}`}\n                position=\"top\"\n              />\n            </div>\n          ),\n        },\n    {\n      label: \"Default Address\",\n      fieldName: \"isDefaultAddress\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.IECode}\n          >\n            {rowData.isDefaultAddress == 1 ? \"Yes\" : \"No\"}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Additional Address Details\",\n      fieldName: \"additionalAddressDetails\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"additionalAddressDetails\",\n      changeFilter: true,\n      placeholder: \"Additional Address Details\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.additionalAddressDetails}\n          >\n            {rowData.additionalAddressDetails}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive === 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive === 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getClientShipToMaster();\n      await getClientBillToMaster();\n      const clients = await getClientMaster();\n      const countries = await getCountryMaster();\n      const states = await getStateMaster();\n      await formatCountry_ClientDetails(countries);\n      await formatState_ClientDetails(states);\n      await formatClient_BillDetails(clients);\n    };\n    if (clientFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [clientFormPopup, showConfirmDialogue]);\n\n  const getClientShipToMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientService.getClientShipToMaster();\n      response?.data?.forEach((el: any) => {\n      el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n      });\n      setClientShipToMaster(response?.data);\n      // setDefaultBillingAddress(response?.data?.find((item:any) => item.isDefaultAddress == 1)); \n      return response?.data;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n  const getClientBillToMaster = async () => {\n    // setLoader(true);\n    try {\n      const response = await clientService.getClientBillToMaster();\n      setClientBillToMaster(response?.data);\n      // setDefaultBillingAddress(response?.data?.find((item:any) => item.isDefaultAddress == 1) || {}); \n      // return response?.data;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      // setLoader(false);\n    }\n  };\n\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      setCountryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n  const getStateMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await stateService.getStateMaster();\n      const temp = response?.states?.filter((item: any) => item?.isactive || item?.isActive)\n      setStateMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const formatCountry_ClientDetails = async (\n    countries: any = countryMaster\n  ) => {\n    const countrylist = countries.map((country: any) => country?.name);\n    clientBillFieldsStructure.country_name.options = countrylist;\n    await setClientBillFieldsStructure(clientBillFieldsStructure);\n    await clientBillFormHandler(clientBillFieldsStructure);\n  };\n\n  const formatState_ClientDetails = async (states: any = stateMaster) => {\n    const statelist = states.map((state: any) => state.state_name);\n    clientBillFieldsStructure.state_name.options = statelist;\n    await setClientBillFieldsStructure(clientBillFieldsStructure);\n    await clientBillFormHandler(clientBillFieldsStructure);\n  };\n\n  const formatClient_BillDetails = async (clients: any = clientMaster) => {\n    const clientlist = clients.map((client: any) => client?.client_name);\n    clientBillFieldsStructure.client_name.options = clientlist;\n    await setClientBillFieldsStructure(clientBillFieldsStructure);\n    await clientBillFormHandler(clientBillFieldsStructure);\n  };\n\n   const clientBillFormHandler = async (currentForm: FormType) => {\n     const form = _.cloneDeep(currentForm);\n     console.log('bbbbbbbbbb', form?.client_name?.value, ClientBillForm?.client_name?.value);\n \n     if (form?.client_name?.value != ClientBillForm?.client_name?.value) {\n       const selectedClient = clientMaster?.find(\n         (item: any) => item?.client_name == form?.client_name?.value\n       );\n\n       const selectedCountry = countryMaster?.find(\n         (item: any) => item?.name == selectedClient?.countryName\n       );\n       if (selectedCountry) {\n         form.country_name.value = selectedClient?.countryName;\n         // const stateList = await getStateMaster();\n         // console.log('stateList---------------->',stateList);\n         if (stateMaster) {\n           // console.log('state-master',stateMaster)\n           const stateNames = stateMaster?.map((state: any) => state.stateName);\n           form.state_name.options = stateNames || [];\n           form.state_name.value = null;\n         }\n        }\n\n      // console.log('bbbbbbbbbb', response?.data, response?.data?.find((item:any) => item.isDefaultAddress == 1));\n      const defaultBillingAddress = clientBillToMaster?.find((item:any) => item.client_name == form?.client_name?.value && item?.isDefaultAddress == 1)\n      console.log('bbbbbbbbbb', defaultBillingAddress);\n\n        const parsedAdditionalAddress = defaultBillingAddress?.additionalAddressDetails && JSON.parse(defaultBillingAddress?.additionalAddressDetails)\n\n         console.log(\"defaultBillingAddress ----->\",defaultBillingAddress);\n        if(defaultBillingAddress?.id){\n          form.address1.value = defaultBillingAddress?.address1;\n          form.address2.value = defaultBillingAddress?.address2;\n          form.address3.value = defaultBillingAddress?.address3;\n          form.state_name.value = defaultBillingAddress?.state_name;\n          form.placeOfSupply.value = defaultBillingAddress?.placeOfSupply;\n          form.state_code.value = defaultBillingAddress?.state_code;\n          form.gstIn.value = defaultBillingAddress?.gstIn;\n          // form.country_name.value = defaultBillingAddress?.countryName;  \n          const addressDetails = JSON.parse(\n            selectedCountry?.addressAdditionalFields\n          );\n          const detailsForm = Object.keys(addressDetails)?.reduce(\n            (acc: any, item: any, index: any) => {\n              const fieldLabel = addressDetails[item]; // Get label from addressAdditionalFields\n              const matchedValue = parsedAdditionalAddress[fieldLabel]; // Match with parsedAdditionalAddress\n    \n              acc[index] = {\n                inputType: \"inputtext\",\n                label: fieldLabel,\n                value: matchedValue || null, // Patch value if match found\n                validation: {\n                  required: true,\n                },\n                fieldWidth: \"col-md-4\",\n              };\n              return acc;\n            },\n            {}\n          );\n          setAdditionalDetailsForm(detailsForm);\n     \n         } \n\n         else {\n         const addressDetails = JSON.parse(\n           selectedCountry?.addressAdditionalFields\n         );\n         const detailsForm = Object.keys(addressDetails)?.reduce(\n           (acc: any, item: any, index: any) => {\n             acc[index] = {\n               inputType: \"inputtext\",\n               label: addressDetails[item],\n               value: null,\n               validation: {\n                 required: true,\n               },\n               fieldWidth: \"col-md-4\",\n             };\n             return acc;\n           },\n           {}\n         );\n         setAdditionalDetailsForm(detailsForm);\n        }\n       }\n\n     setClientBillForm(form);\n   };\n\n  const additionalDetailsFormHandler = async (form: FormType) => {\n    setAdditionalDetailsForm(form);\n  };\n\n\n  const getClientContactMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientContactService.getClientContactMaster();\n      setClientContactMaster(response?.clientContacts);\n      return response?.clientContacts;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n  const getClientMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientService.getClientMaster();\n      const temp = response?.clients?.filter((item: any) => item?.isactive || item?.isActive)\n      setClientMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  // const formatClientDetails = async (clients: any = clientMaster) => {\n  //     const clientList = clients.map((item: any) => item?.client_name);\n  //     clientFormFieldsStructure.client_name.options = clientList;\n  //     await setClientFormFieldsStructure(clientFormFieldsStructure);\n  //     await clientContactFormHandler(clientFormFieldsStructure);\n  // };\n\n  // const clientContactFormHandler = async (form: FormType) => {\n  //     setClientForm(form);\n  // };\n\n  const openSaveForm = async () => {\n    setClientFormPopup(true);\n  };\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateClientBillToMaster(data);\n    setClientFormPopup(true);\n    setIsEditState(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateClientBillToMaster = async (data: any) => {\n    console.log('data------->',data);\n    try {\n      ClientBillForm.client_name.value = data?.client_name;\n      ClientBillForm.address1.value = data?.address1;\n      ClientBillForm.address2.value = data?.address2;\n      ClientBillForm.address3.value = data?.address3;\n      ClientBillForm.state_name.options = stateMaster?.map((state: any) => state.stateName) || []\n      ClientBillForm.state_code.value = data?.state_code;\n      ClientBillForm.gstIn.value = data?.gstIn;\n      ClientBillForm.placeOfSupply.value = data?.placeOfSupply;\n      ClientBillForm.state_name.value = data?.state_name;\n      // ClientBillForm.pin.value = data?.pin;\n      ClientBillForm.country_name.value = data?.countryName;\n      ClientBillForm.isDefaultAddress.value = data?.isDefaultAddress == 1 ? true : false;\n\n      // ClientBillForm.state_name.value = data?.state_name;\n\n      // setClientBillForm(_.cloneDeep(clientBillFieldsStructure)); \n      const addressDetails = JSON.parse(data?.additionalAddressDetails);\n\n      if(Object.keys(addressDetails)?.length){\n\n      const addressForm = Object.keys(addressDetails)?.reduce(\n        (acc: any, item: any, index: any) => {\n          acc[index] = {\n            inputType: \"inputtext\",\n            label: item,\n            value: addressDetails[item],\n            validation: {\n              required: false,\n            },\n            fieldWidth: \"col-md-4\",\n          };\n          return acc;\n        },\n        {}\n      );\n      setAdditionalDetailsForm(addressForm);\n    }\n    else{\n      const selectedCountry = countryMaster?.find(\n        (item: any) => item?.name == data?.countryName\n      );\n      const addressDetails = JSON.parse(\n        selectedCountry?.addressAdditionalFields\n      );\n      const detailsForm = Object.keys(addressDetails)?.reduce(\n        (acc: any, item: any, index: any) => {\n          acc[index] = {\n            inputType: \"inputtext\",\n            label: addressDetails[item],\n            value: null,\n            validation: {\n              required: true,\n            },\n            fieldWidth: \"col-md-4\",\n          };\n          return acc;\n        },\n        {}\n      );\n      setAdditionalDetailsForm(detailsForm);\n\n    }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n        ? \"activate\"\n        : \"deactivate\"\n        } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    clientService\n      .deactivateClientShipToMaster({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `State record ${patchData?.isactive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setClientFormPopup(false);\n    setIsEditState(false);\n    setStateData({});\n    setClientBillFieldsStructure(_.cloneDeep(ClientBillFormFields));\n    setClientBillForm(_.cloneDeep(ClientBillFormFields));\n    setAdditionalDetailsForm({});\n\n  };\n\n  const createClientShipInfo = async (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(ClientBillForm, (item: any) => {\n      if (item?.validation?.required) {\n        // companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.value;\n      }\n    });\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n      const clientId =\n        clientMaster.find(\n          (client: any) => client.client_name === ClientBillForm.client_name.value\n        )?.id ?? null;\n\n      const countryId =\n        countryMaster.find(\n          (country: any) => country.name === ClientBillForm.country_name.value\n        )?.id ?? null;\n\n      if (ClientBillForm?.isDefaultAddress?.value == true) {\n        let defaultAccountFlag = false;\n        clientShipToMaster\n          ?.filter(\n            (acc: any) => acc?.client_name == ClientBillForm.client_name.value\n          )\n          ?.forEach((item: any) => {\n            defaultAccountFlag = defaultAccountFlag || item?.isDefaultAddress;\n          });\n        if (defaultAccountFlag) {\n          ToasterService.show(\n            \"A default address for this company is already present\",\n            CONSTANTS.ERROR\n          );\n          return;\n        }\n      }\n\n      // const stateId =\n      //   stateMaster.find(\n      //     (state: any) => state.state_name === ClientBillForm.state_name.value\n      //   )?.state_id ?? null;\n\n      const addressData = Object.keys(AdditionalDetailsForm)?.reduce(\n        (acc: any, item: any, index: any) => {\n          if (AdditionalDetailsForm[index]?.value != null) {\n            acc[AdditionalDetailsForm[index]?.label] =\n              AdditionalDetailsForm[index]?.value;\n          }\n          return acc;\n        },\n        {}\n      );\n\n      const obj = {\n        clientId: clientId,\n        countryId: countryId,\n        state_name:ClientBillForm?.state_name?.value,\n        state_code:ClientBillForm?.state_code?.value,\n        gstIn:ClientBillForm?.gstIn?.value,\n        placeOfSupply:ClientBillForm?.placeOfSupply?.value,\n        address1: ClientBillForm?.address1?.value,\n        address2: ClientBillForm?.address2?.value,\n        address3: ClientBillForm?.address3?.value,\n        additionalAddressDetails: addressData,\n        isDefaultAddress: ClientBillForm?.isDefaultAddress?.value == true ? 1 : 0,\n        updated_by: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        clientService\n          .createClientShipToMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, id: stateData?.id };\n\n        clientService\n          .updateClientShipToMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Shipping Info\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={clientShipToMaster}\n          column={ClientBillToMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Client_Ship_To\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {clientFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header \">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditState ? 'Update' : 'Add New'} Shipping Info</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(ClientBillForm)}\n                formUpdateEvent={clientBillFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n              <FormComponent\n                form={_.cloneDeep(AdditionalDetailsForm)}\n                formUpdateEvent={additionalDetailsFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createClientShipInfo}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default ClientShipToMaster;\n\n\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"./Client.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { ClientMasterService } from \"../../services/masters/client-master/client.service\";\nimport { Chip } from \"primereact/chip\";\nimport { FILE_TYPES } from \"../../enums/file-types.enum\";\nimport { ImageUrl } from \"../../utils/ImageUrl\";\nimport { AccountMasterService } from \"../../services/masters/account-manager-master/accountManager.service\";\nimport { AccountsMasterService } from \"../../services/masters/accounts-master/accounts.service\";\nimport { ClientContactMasterService } from \"../../services/clients/client-contact-master/clientContactMaster.service\";\nimport moment from \"moment\";\n\n\nconst ClientGroupMaster = () => {\n  const ClientBillFormFields = {\n    client_name: {\n      inputType: \"multiSelect\",\n      label: \"Client\",\n      options: [],\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n    group_name: {\n      inputType: \"inputtext\",\n      label: \"Group Name\",\n      value: null,\n      validation: {\n        required: true,\n      },\n      fieldWidth: \"col-md-6\",\n    },\n  };\n\n\n  const [countryMaster, setCountryMaster] = useState<any>([]);\n  const [stateMaster, setStateMaster] = useState<any>([]);\n  const [loader, setLoader] = useState(false);\n  const [clientFormPopup, setClientFormPopup] = useState(false);\n  const [isEditState, setIsEditState] = useState<boolean>(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n  const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n  const [stateData, setStateData] = useState<any>();\n  const [companyMaster, setCompanyMaster] = useState<any>([]);\n  const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n  const [industryMaster, setIndustryMaster] = useState<any>([]);\n  const [attachments, setAttachments]: any = useState([]);\n  const [digitalSign, setDigitalSign]: any = useState([]);\n  const [logoUrl, setLogoUrl] = useState('');\n  const [signatureUrl, setSignatureUrl] = useState('');\n  const [showNDAAttacment, setShowNDAAttacment] = useState(false);\n  const [showMSAAttacment, setShowMSAAttacment] = useState(false);\n  const [industryGroupMaster, setIndustryGroupMaster] = useState<any>([]);\n  const [accountManagerMaster, setAccountManagerMaster] = useState<any>([]);\n  const [accountsMaster, setAccountsMaster] = useState<any>([]);\n  const [clientMaster, setClientMaster] = useState<any>([]);\n  const [clientContactMaster, setClientContactMaster] = useState<any>([]);\n\n  const [clientBillToMaster, setClientBillToMaster] = useState<any>([]);\n  const [AdditionalDetailsForm, setAdditionalDetailsForm] = useState<any>({});\n\n\n\n  const [clientBillFieldsStructure, setClientBillFieldsStructure]: any =\n    useState(ClientBillFormFields);\n  const [ClientBillForm, setClientBillForm] = useState<any>(\n    _.cloneDeep(clientBillFieldsStructure)\n  );\n\n  const companyService = new CompanyMasterService();\n  const clientContactService = new ClientContactMasterService();\n  const accountService = new AccountMasterService();\n  const accountsService = new AccountsMasterService();\n\n  const cookies = new Cookies();\n  const userInfo = cookies.get(\"userInfo\");\n\n  const loggedInUserId = userInfo?.userId;\n  let patchData: any;\n  const countryService = new CountryMasterService();\n  const stateService = new StateMasterService();\n  const industryService = new IndustryMasterService();\n  const clientService = new ClientMasterService();\n\n\n  const ClientBillToMasterColumns = [\n    {\n      label: \"Action\",\n      fieldName: \"action\",\n      textAlign: \"left\",\n     frozen: true,\n      sort: false,\n      filter: false,\n      body: (rowData: any) => (\n        <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n          <span\n            className=\"pi pi-pencil\"\n            style={{ cursor: \"pointer\" }}\n            title=\"Update\"\n            onClick={() => onUpdate(rowData)}\n          ></span>\n          <span\n            className={`pi pi-${rowData.isActive ? \"ban\" : \"check-circle\"}`}\n            style={{ cursor: \"pointer\" }}\n            title={rowData.isActive ? \"Deactivate\" : \"Activate\"}\n            onClick={() => onDelete(rowData)}\n          ></span>\n        </div>\n      ),\n    },\n    {\n      label: \"Client\",\n      fieldName: \"clientName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"clientName\",\n      changeFilter: true,\n      placeholder: \"Client\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.clientName}\n          >\n            {rowData.clientName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Group Name\",\n      fieldName: \"groupName\",\n      textAlign: \"left\",\n      sort: true,\n      filter: true,\n      fieldValue: \"groupName\",\n      changeFilter: true,\n      placeholder: \"Group Name\",\n      body: (rowData: any) => (\n        <div>\n          <span\n            id={`companyNameTooltip-${rowData.id}`}\n          // data-pr-tooltip={rowData.address1}\n          >\n            {rowData.groupName}\n          </span>\n          <Tooltip\n            target={`#companyNameTooltip-${rowData.id}`}\n            position=\"top\"\n          />\n        </div>\n      ),\n    },\n    {\n      label: \"Status\",\n      fieldName: \"isActive\",\n      textAlign: \"left\",\n      frozen: false,\n      sort: true,\n      filter: true,\n      body: (rowData: any) => (\n        <div>\n          <span style={{ color: rowData?.isActive === 1 ? \"green\" : \"red\" }}>\n            {rowData?.isActive === 1 ? \"Active\" : \"Inactive\"}\n          </span>\n        </div>\n      ),\n    },\n  ];\n\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getClientBillToMaster();\n      const clients = await getClientMaster();\n      const countries = await getCountryMaster();\n    //   const states = await getStateMaster();\n    //   await formatCountry_ClientDetails(countries);\n    //   await formatState_ClientDetails(states);\n      await formatClient_BillDetails(clients);\n    };\n    if (clientFormPopup == false && showConfirmDialogue == false) {\n      fetchData();\n    }\n  }, [clientFormPopup, showConfirmDialogue]);\n\n  const getClientBillToMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientService.getClientGroupsMaster();\n       response?.groups?.forEach((el: any) => {\n       el.updated_at = el.updated_at ?  moment(el.updated_at).format(\"DD-MM-YYYY HH:mm:ss\") : null;\n       });\n      setClientBillToMaster(response?.groups);\n      return response?.groups;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n  const getCountryMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await countryService.getCountryMaster();\n      const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive)\n      setCountryMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n  const getStateMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await stateService.getStateMaster();\n      setStateMaster(response?.states);\n      return response?.states;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n//   const formatCountry_ClientDetails = async (\n//     countries: any = countryMaster\n//   ) => {\n//     const countrylist = countries.map((country: any) => country?.name);\n//     clientBillFieldsStructure.country_name.options = countrylist;\n//     await setClientBillFieldsStructure(clientBillFieldsStructure);\n//     await clientBillFormHandler(clientBillFieldsStructure);\n//   };\n\n//   const formatState_ClientDetails = async (states: any = stateMaster) => {\n//     const statelist = states.map((state: any) => state.state_name);\n//     // clientBillFieldsStructure.state_name.options = statelist;\n//     await setClientBillFieldsStructure(clientBillFieldsStructure);\n//     await clientBillFormHandler(clientBillFieldsStructure);\n//   };\n\n  const formatClient_BillDetails = async (clients: any = clientMaster) => {\n    const clientlist = clients.map((client: any) => client?.client_name);\n    clientBillFieldsStructure.client_name.options = clientlist;\n    await setClientBillFieldsStructure(clientBillFieldsStructure);\n    await clientBillFormHandler(clientBillFieldsStructure);\n  };\n\n  const clientBillFormHandler = async (form: FormType) => {\n    setClientBillForm(form);\n    // if (form?.client_name?.value != ClientBillForm?.client_name?.value) {\n    // const selectedClient = clientMaster?.find(\n    //   (item: any) => item?.client_name == form?.client_name?.value\n    // );\n    // const selectedCountry = countryMaster?.find(\n    //   (item: any) => item?.name == selectedClient?.countryName\n    // );\n    // if (selectedCountry) {\n    //   form.country_name.value = selectedClient?.countryName;\n\n    //   const addressDetails = JSON.parse(\n    //     selectedCountry?.addressAdditionalFields\n    //   );\n    // }\n    // }\n\n  };\n\n  const additionalDetailsFormHandler = async (form: FormType) => {\n    setAdditionalDetailsForm(form);\n  };\n\n\n  const getClientContactMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientContactService.getClientContactMaster();\n      setClientContactMaster(response?.clientContacts);\n      return response?.clientContacts;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n  const getClientMaster = async () => {\n    setLoader(true);\n    try {\n      const response = await clientService.getClientMaster();\n      const temp = response?.clients?.filter((item: any) => item?.isactive || item?.isActive)\n      setClientMaster(temp);\n      return temp;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  // const formatClientDetails = async (clients: any = clientMaster) => {\n  //     const clientList = clients.map((item: any) => item?.client_name);\n  //     clientFormFieldsStructure.client_name.options = clientList;\n  //     await setClientFormFieldsStructure(clientFormFieldsStructure);\n  //     await clientContactFormHandler(clientFormFieldsStructure);\n  // };\n\n  // const clientContactFormHandler = async (form: FormType) => {\n  //     setClientForm(form);\n  // };\n\n  const openSaveForm = async () => {\n    setClientFormPopup(true);\n  };\n\n  const onUpdate = (data: any) => {\n    setStateData(data);\n    updateClientBillToMaster(data);\n    setClientFormPopup(true);\n    setIsEditState(true);\n  };\n\n  const onPopUpClose = (e?: any) => {\n    setShowConfirmDialogue(false);\n  };\n\n  const updateClientBillToMaster = async (data: any) => {\n    try {\n      console.log('rrrrrrrrrrrrrrrr', data);\n      \n      clientBillFieldsStructure.client_name.value = data?.clientName?.split(',');\n      clientBillFieldsStructure.group_name.value = data?.groupName;\n\n      setClientBillFieldsStructure(_.cloneDeep(clientBillFieldsStructure));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const onDelete = (data: any) => {\n    patchData = data;\n    setActionPopupToggle({\n      displayToggle: false,\n      title: \"Delete\",\n      message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n        ? \"activate\"\n        : \"deactivate\"\n        } this record?`,\n      acceptFunction: confirmDelete,\n      rejectFunction: onPopUpClose,\n    });\n    setShowConfirmDialogue(true);\n  };\n\n  const confirmDelete = () => {\n    setLoader(true);\n    clientService\n      .toggleClientGroupStatus({ ...patchData, loggedInUserId })\n      .then(() => {\n        setLoader(false);\n        setShowConfirmDialogue(false);\n        ToasterService.show(\n          `Client group record ${patchData?.isactive ? \"deactivated\" : \"activated\"\n          } successfully`,\n          CONSTANTS.SUCCESS\n        );\n      })\n      .catch((error) => {\n        setLoader(false);\n        return false;\n      });\n  };\n\n  const closeFormPopup = () => {\n    setClientFormPopup(false);\n    setIsEditState(false);\n    setStateData({});\n    setClientBillFieldsStructure(_.cloneDeep(ClientBillFormFields));\n    setClientBillForm(_.cloneDeep(ClientBillFormFields));\n    setAdditionalDetailsForm({});\n\n  };\n\n  const createClientShipInfo = async (event: FormEvent) => {\n    event.preventDefault();\n    let companyValidityFlag = true;\n    const companyFormValid: boolean[] = [];\n\n    _.each(ClientBillForm, (item: any) => {\n      if (item?.validation?.required) {\n        companyFormValid.push(item.valid);\n        companyValidityFlag = companyValidityFlag && item.valid;\n      }\n    });\n    console.log('clientForm', ClientBillForm, companyValidityFlag);\n\n    setIsFormValid(companyValidityFlag);\n\n    if (companyValidityFlag) {\n        let clientId = ClientBillForm?.client_name?.value\n        ?.map((item: any) =>\n            clientMaster?.find((com: any) => com?.client_name === item)?.id\n        )\n        .filter((id: any) => id !== undefined && id !== null)\n        .join(\",\");\n\n      const obj = {\n        clientId: clientId,\n        groupName: ClientBillForm?.group_name?.value,\n        updatedBy: loggedInUserId,\n      };\n\n      if (!stateData?.id) {\n        clientService\n          .createClientGroupMaster(obj)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      } else {\n        const updatePayload = { ...obj, id: stateData?.id };\n\n        clientService\n          .updateClientGroupMaster(updatePayload)\n          .then((response: any) => {\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n              setStateData({});\n              closeFormPopup();\n              ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n            }\n          })\n          .catch((error: any) => {\n            setStateData({});\n            ToasterService.show(error, CONSTANTS.ERROR);\n          });\n      }\n    } else {\n      ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n    }\n  };\n\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginBottom: \"0.5em\",\n        }}\n      >\n        <ButtonComponent\n          label=\"Add New Client Group\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          submitEvent={openSaveForm}\n        />\n      </div>\n      <p className=\"m-0\">\n        <DataTableBasicDemo\n          data={clientBillToMaster}\n          column={ClientBillToMasterColumns}\n          showGridlines={true}\n          resizableColumns={true}\n          rows={20}\n          paginator={true}\n          sortable={true}\n          headerRequired={true}\n          scrollHeight={\"calc(100vh - 200px)\"}\n          downloadedfileName={\"Client_Group\"}\n        />\n        {showConfirmDialogue ? (\n          <ConfirmDialogue\n            actionPopupToggle={actionPopupToggle}\n            onCloseFunction={onPopUpClose}\n          />\n        ) : null}\n      </p>\n      {clientFormPopup ? (\n        <div className=\"popup-overlay md-popup-overlay\">\n          <div className=\"popup-body md-popup-body stretchLeft\">\n            <div className=\"popup-header \">\n              <div\n                className=\"popup-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                <i className=\"pi pi-angle-left\"></i>\n                <h4 className=\"popup-heading\">{isEditState ? 'Update' : 'Add New'} Client Group</h4>\n              </div>\n              <div\n                className=\"popup-right-close\"\n                onClick={() => {\n                  closeFormPopup();\n                }}\n              >\n                &times;\n              </div>\n            </div>\n            <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n              <FormComponent\n                form={_.cloneDeep(ClientBillForm)}\n                formUpdateEvent={clientBillFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n              <FormComponent\n                form={_.cloneDeep(AdditionalDetailsForm)}\n                formUpdateEvent={additionalDetailsFormHandler}\n                isFormValidFlag={isFormValid}\n              ></FormComponent>\n            </div>\n\n            <div className=\"popup-lower-btn\">\n              <ButtonComponent\n                label=\"Submit\"\n                icon=\"pi pi-check\"\n                iconPos=\"right\"\n                submitEvent={createClientShipInfo}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default ClientGroupMaster;\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { TabView, TabPanel } from \"primereact/tabview\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport classes from \"./Client.module.scss\";\nimport ClientMaster from './ClientMaster';\nimport ClientContactMaster from './ClientContactMaster';\nimport ClientBillToMaster from './ClientBillToMaster';\nimport ClientShipToMaster from './ClientShipToMaster';\nimport ClientGroupMaster from './ClientGroupMaster';\n\nfunction Client() {\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [loader, setLoader] = useState(false);\n\n  const onTabChange = (e: any) => {\n    setActiveIndex(e.index);\n  };\n\n    useEffect(() => { }, [activeIndex]);\n\n  return loader ? (\n    <Loader />\n  ) : (\n    <>\n      <TabView\n        activeIndex={activeIndex}\n        onTabChange={onTabChange}\n        className={classes[\"main-tab-screen\"]}\n        panelContainerClassName={classes[\"panel-tabs\"]}\n      >\n        <TabPanel header=\"Client\">\n          <ClientMaster />\n        </TabPanel>\n        <TabPanel header=\"Client Contact\">\n          <ClientContactMaster />\n        </TabPanel>\n        <TabPanel header=\"Client Group\">\n          <ClientGroupMaster />\n        </TabPanel>\n        <TabPanel header=\"Client Bill To\">\n          <ClientBillToMaster />\n        </TabPanel>\n        <TabPanel header=\"Client Ship To\">\n          <ClientShipToMaster />\n        </TabPanel>\n      </TabView>\n    </>\n  );\n}\n\nexport default Client\n"],"names":["ClientMaster","_clientForm$msa_start2","clientFormFields","client_name","inputType","label","value","validation","required","fieldWidth","is_same_alias","vega_client_name","client_type","options","credit_period","client_status","hideField","country_name","companyName","account_name","industryHeadNames","industry_group","industry_name","isApplicableAM","sales_person","account_manager","msa_start_date","msa_end_date","is_msa_missing","nda_flag","non_solicitation_clause","use_logo_permission","msaFormFields","start_date","end_date","countryMaster","setCountryMaster","useState","stateMaster","setStateMaster","loader","setLoader","clientFormPopup","setClientFormPopup","isEditClient","setIsEditClient","isFormValid","setIsFormValid","showConfirmDialogue","setShowConfirmDialogue","actionPopupToggle","setActionPopupToggle","cliendData","setCliendData","companyMaster","setCompanyMaster","industryHeadMaster","setIndustryHeadMaster","industryMaster","setIndustryMaster","attachments","setAttachments","digitalSign","setDigitalSign","logoUrl","setLogoUrl","signatureUrl","setSignatureUrl","showNDAAttacment","setShowNDAAttacment","showMSAAttacment","setShowMSAAttacment","industryGroupMaster","setIndustryGroupMaster","accountManagerMaster","setAccountManagerMaster","accountsMaster","setAccountsMaster","clientMaster","setClientMaster","salesMaster","setSalesMaster","showMsaUpdatePopup","setShowMsaUpdatePopup","clientFormFieldsStructure","setClientFormFieldsStructure","clientForm","setClientForm","_","msaFormFieldsStructure","setMsaFormFieldsStructure","msaForm","setMsaForm","companyService","CompanyMasterService","clientService","ClientMasterService","accountService","AccountMasterService","accountsService","AccountsMasterService","userInfo","Cookies","get","loggedInUserId","userId","patchData","countryService","CountryMasterService","industryService","StateMasterService","IndustryMasterService","salesService","SalesMasterService","clientMasterColumns","fieldName","textAlign","frozen","sort","filter","body","rowData","_jsxs","style","display","gap","marginLeft","children","_jsx","className","cursor","title","onClick","onUpdate","concat","isActive","onDelete","onMSAUpdate","placeholder","TooltipWrapper","id","content","countryName","industryHeadName","industryGroupNames","industryName","accountManagerNames","msa_flag","_Fragment","msaFilePath","downloadFile","color","fontSize","ndaFilePath","updated_at","filePath","fileUrl","process","link","document","createElement","href","download","split","pop","appendChild","click","removeChild","_ref","Tooltip","target","position","useEffect","_clientForm$msa_start","_clientForm$msa_end_d","console","log","prevForm","_prevForm$msa_start_d","_objectSpread","min","async","getClientMaster","countries","getCountryMaster","formatCountryDetails","companies","getCompanyMaster","formatCompanyDetails","industryHead","getIndustryHeadMaster","formatIndustryHeadDetails","industryGroups","getIndustryGroupMaster","formatIndustryGroupDetails","industries","getIndustryMaster","formatIndustry_ClientDetails","formatIndustrySubGroupDetails","fetchData","_response$clients","response","clients","forEach","el","moment","isValid","format","error","getSalesMaster","_response$salesManage","temp","salesManagers","item","isactive","_response$industryMas","industryMasters","_response$industryHea","industryHeads","_response$countries","_response$companies","_response$groupIndust","groupIndustries","getAccountManagerMaster","_response$accountMana","getAccountMaster","accountManagers","_response$companyAcco","getAccountsMaster","companyAccounts","countrylist","arguments","length","undefined","map","country","name","statesFormHandler","companyList","company","clientFormHandler","industryHeadList","groupIndustryName","subIndustryCategory","formatAccountMasterDetails","bankName","industryList","industry","form","formatAccountManagerMasterDetails","accountMaster","salesManager","formatSalesManagerDetails","data","updateClientaster","onPopUpClose","e","_data$bankName","_data$salesMangerName","_data$accountManagerN","currentIndustryGroupNames","currentIndustryName","salesMangerName","parseDateString","non_solicitation_clause_flag","use_logo_permission_flag","displayToggle","message","is_active","acceptFunction","confirmDelete","rejectFunction","askForDeactivationDate","deactivationDate","deactivateClientMaster","formatDate","then","_patchData","ToasterService","show","CONSTANTS","SUCCESS","catch","closeFormPopup","dateString","Date","date","isNaN","year","getFullYear","month","String","getMonth","padStart","day","getDate","selectAttachment","files","eventList","toLowerCase","FILE_TYPES","PDF","size","prevVals","fileURL","URL","createObjectURL","removeFileHandler","_form$is_same_alias","_form$is_msa_missing","_form$isApplicableAM","_form$companyName","_clientForm$companyNa","_form$industryHeadNam","_clientForm$industryH","currentForm","_form$client_name","disable","_form$companyName2","selectedCompany","_accountMaster$filter","_accountMaster$filter2","tempData","ele","defaultAccount","find","isDefaultAccount","includes","_form$industryHeadNam2","selectedIndustryHead","_industryHeadMaster$f","selectedIndustry","industryNames","selectedIndustryArray","str","trim","some","Loader","justifyContent","marginBottom","ButtonComponent","icon","iconPos","submitEvent","DataTableBasicDemo","column","showGridlines","resizableColumns","rows","paginator","sortable","headerRequired","scrollHeight","downloadedfileName","ConfirmDialogue","onCloseFunction","padding","FormComponent","formUpdateEvent","isFormValidFlag","classes","src","ImageUrl","PdfIcon","width","height","alt","type","event","onChange","FolderIconImage","removeSignHandler","selectDigitalSign","_clientForm$account_m","_clientForm$account_m2","_clientForm$sales_per","_clientForm$sales_per2","_clientForm$isApplica","_clientForm$account_m3","_clientForm$account_m4","_clientForm$sales_per3","_clientForm$sales_per4","preventDefault","companyValidityFlag","_item$validation2","_industryMaster$find$","_industryMaster$find","_countryMaster$find$i2","_countryMaster$find2","_companyMaster$find$i","_companyMaster$find","_clientForm$account_n","_clientForm$account_n2","_industryHeadMaster$f2","_industryHeadMaster$f3","_industryGroupMaster$","_industryGroupMaster$2","_clientForm$account_m5","_clientForm$account_m6","_clientForm$sales_per5","_clientForm$sales_per6","_clientForm$client_na","_clientForm$vega_clie","_clientForm$client_ty","_clientForm$credit_pe","_clientForm$client_st","_clientForm$isApplica2","_clientForm$msa_start3","_clientForm$msa_end_d2","_clientForm$is_msa_mi","_clientForm$nda_flag","_clientForm$non_solic","_clientForm$use_logo_","_clientForm$is_msa_mi2","_clientForm$nda_flag2","industry_id","countryId","companyId","bankId","_accountsMaster$find","com","join","IndustryHeadId","IndustryGroupId","accountManagerId","_accountManagerMaster","_accountManagerMaster2","salesManagerId","_salesMaster$find$id","_salesMaster$find","formData","FormData","obj","accountId","industryId","salesMangerId","updated_by","Object","entries","_ref2","key","set","ERROR","updatePayload","clientId","_ref3","updateClientMaster","statusCode","HTTP_RESPONSE","createClientMaster","CREATED","_item$validation3","_msaForm$start_date","_msaForm$end_date","_ref4","updateMSAFile","ClientContactMasterService","constructor","getClientContactMaster","HTTPService","postRequest","APIURLS","GET_CLIENT_CONTACT_MASTER","clientContactId","err","createClientContactMaster","CREATE_CLIENT_CONTACT_MASTER","updateClientContactMaster","UPDATE_CLIENT_CONTACT_MASTER","deactivateClientContactMaster","updatedBy","TOGGLE_CLIENT_CONTACT_STATUS","ClientContactMaster","ClientContactFormFields","salutation","first_name","last_name","email","phone","isEditState","setIsEditState","stateData","setStateData","clientContactMaster","setClientContactMaster","clientContactService","clientContactColumns","phone_number","formatClientDetails","_response$clientConta","clientContacts","clientList","clientContactFormHandler","updateStateMaster","_form$nda_flag","_item$validation","_clientForm$salutatio","_clientForm$first_nam","_clientForm$last_name","_clientForm$email","_clientForm$phone","ClientBillToMaster","ClientBillFormFields","state_name","state_code","gstIn","iec_code","placeOfSupply","address1","address2","address3","isDefaultAddress","clientBillToMaster","setClientBillToMaster","AdditionalDetailsForm","setAdditionalDetailsForm","defaultBillingAddress","setDefaultBillingAddress","clientBillFieldsStructure","setClientBillFieldsStructure","ClientBillForm","setClientBillForm","stateService","ClientBillToMasterColumns","fieldValue","changeFilter","additionalAddressDetails","getClientBillToMaster","states","getStateMaster","formatCountry_ClientDetails","formatState_ClientDetails","formatClient_BillDetails","_response$data","_response$data2","_response$states","clientBillFormHandler","statelist","state","clientlist","client","_ClientBillForm$clien","selectedClient","_form$client_name2","selectedCountry","stateNames","stateName","parsedAdditionalAddress","JSON","parse","_Object$keys","addressDetails","addressAdditionalFields","detailsForm","keys","reduce","acc","index","fieldLabel","matchedValue","_Object$keys2","updateClientBillToMaster","_Object$keys3","addressForm","deactivateClientBillToMaster","_clientMaster$find$id","_clientMaster$find","_countryMaster$find$i","_countryMaster$find","_ClientBillForm$isDef","_Object$keys4","_ClientBillForm$state","_ClientBillForm$state2","_ClientBillForm$gstIn","_ClientBillForm$iec_c","_ClientBillForm$place","_ClientBillForm$addre","_ClientBillForm$addre2","_ClientBillForm$addre3","_ClientBillForm$isDef2","_clientBillToMaster$f","defaultAccountFlag","addressData","_AdditionalDetailsFor","_AdditionalDetailsFor2","_AdditionalDetailsFor3","createClientBillToMaster","ClientShipToMaster","clientShipToMaster","setClientShipToMaster","getClientShipToMaster","_ClientBillForm$clien2","_form$client_name3","_form$client_name4","_Object$keys5","deactivateClientShipToMaster","_Object$keys6","_clientShipToMaster$f","updateClientShipToMaster","createClientShipToMaster","ClientGroupMaster","group_name","clientName","groupName","_response$groups","getClientGroupsMaster","groups","_data$clientName","toggleClientGroupStatus","companyFormValid","push","valid","_ClientBillForm$group","updateClientGroupMaster","createClientGroupMaster","activeIndex","setActiveIndex","TabView","onTabChange","panelContainerClassName","TabPanel","header"],"sourceRoot":""}