{"version":3,"file":"static/js/620.bf22ea84.chunk.js","mappings":"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","sources":["services/credit-note/credit-note.service.ts","pages/credit-note/CreditNote.tsx","services/invoice/invoice.service.ts","services/masters/account-manager-master/accountManager.service.ts","services/masters/accounts-master/accounts.service.ts","services/masters/company-master/company.service.ts","services/masters/country-master/country.service.ts","services/masters/industry-master/industry.service.ts","services/masters/sales-master/sales.service.ts","services/masters/state-master/state.service.ts","services/masters/tax-service-master/taxMaster.service.ts","services/po-contract/poContract.service.ts"],"sourcesContent":["import { APIURLS } from '../../constants/ApiUrls';\nimport { HTTPService } from '../http-service/http-service';\n\nexport class CreditNoteService {\n  // Fetch all invoices\n  getCreditNoteData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_CREDIT_NOTE);\n      return response?.data;\n    } catch (err) {\n      console.error('Error fetching credit note:', err);\n      return {};\n    }\n  };\n\n  // Create a new invoice\n  createCreditNote = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id ? APIURLS.UPDATE_CREDIT_NOTE : APIURLS.CREATE_CREDIT_NOTE,\n        formData\n      );\n      return response?.data;\n    } catch (error) {\n      console.error('Error creating credit note:', error);\n      return error;\n    }\n  };\n\n  // Update an existing invoice\n  updateCreditNote = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_CREDIT_NOTE,\n        formData\n      );\n      return response?.data;\n    } catch (error) {\n      console.error('Error updating credit note:', error);\n      return error;\n    }\n  };\n\n  // Activate/Deactivate an invoice\n  activateDeactivateCreditNote = async (data: any) => {\n    try {\n      const body = {\n        id: data.id, // Assuming `id` represents the Invoice ID\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_CREDIT_NOTE_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      console.error('Error activating/deactivating credit note:', err);\n      return {};\n    }\n  };\n\n  UpdatePDFCreditNote = async (invoiceNumber: any) => {\n    try {\n        const response = await HTTPService.postRequest(\n            APIURLS.POST_GENERATE_CREDIT_NOTE_PDF,  \n            { invoice_number: invoiceNumber } \n        );\n\n        return response?.data;\n    } catch (err) {\n        return {};\n    }\n};\n\n}\n\n\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { ButtonComponent } from \"../../components/ui/button/Button\";\nimport DataTableBasicDemo from \"../../components/ui/table/Table\";\nimport ConfirmDialogue from \"../../components/ui/confirm-dialogue/ConfirmDialogue\";\nimport FormComponent from \"../../components/ui/form/form\";\nimport classes from \"../client/Client.module.scss\";\nimport { CountryMasterService } from \"../../services/masters/country-master/country.service\";\nimport Cookies from \"universal-cookie\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport _ from \"lodash\";\nimport { ToasterService } from \"../../services/toaster-service/toaster-service\";\nimport { CONSTANTS } from \"../../constants/Constants\";\nimport { FormType } from \"../../schemas/FormField\";\nimport { HTTP_RESPONSE } from \"../../enums/http-responses.enum\";\nimport { StateMasterService } from \"../../services/masters/state-master/state.service\";\nimport { Loader } from \"../../components/ui/loader/Loader\";\nimport { CompanyMasterService } from \"../../services/masters/company-master/company.service\";\nimport { IndustryMasterService } from \"../../services/masters/industry-master/industry.service\";\nimport { ClientMasterService } from \"../../services/masters/client-master/client.service\";\nimport { Chip } from \"primereact/chip\";\nimport { FILE_TYPES } from \"../../enums/file-types.enum\";\nimport { ImageUrl } from \"../../utils/ImageUrl\";\nimport { AccountMasterService } from \"../../services/masters/account-manager-master/accountManager.service\";\nimport { AccountsMasterService } from \"../../services/masters/accounts-master/accounts.service\";\nimport { SalesMasterService } from \"../../services/masters/sales-master/sales.service\";\nimport { PoContractService } from \"../../services/po-contract/poContract.service\";\nimport { TaxMasterService } from \"../../services/masters/tax-service-master/taxMaster.service\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { Button } from \"primereact/button\";\nimport moment from \"moment\";\nimport { InvoiceService } from \"../../services/invoice/invoice.service\";\nimport { CreditNoteService } from \"../../services/credit-note/credit-note.service\";\n\nconst CreditNoteMaster = () => {\n\n    const clientFormFields: any = {\n        client_name: {\n            inputType: \"singleSelect\",\n            label: \"Client\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        contract_name: {\n            inputType: \"singleSelect\",\n            label: \"Contract\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        invoice_number: {\n            inputType: \"singleSelect\",\n            label: \"Invoice Number\",\n            options: [],\n            value: null,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n\n        po_number: {\n            inputType: \"inputtext\",\n            label: \"PO Number\",\n            value: null,\n            disable: true,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        po_amount: {\n            inputType: \"inputNumber\",\n            label: \"PO Amount\",\n            value: null,\n            disable: true,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        remain_po_amount: {\n            inputType: \"inputNumber\",\n            label: \"Remain PO Amount\",\n            value: null,\n            disable: true,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        invoice_date: {\n            inputType: \"singleDatePicker\",\n            label: \"Credit Date\",\n            value: null,\n            validation: { required: true },\n            min:null,\n            fieldWidth: \"col-md-4\",\n        },\n        clientBillTo: {\n            inputType: \"multiSelect\",\n            label: \"Client Bill Address\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        clientShipAddress: {\n            inputType: \"multiSelect\",\n            label: \"Client Ship Address\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        clientContact: {\n            inputType: \"singleSelect\",\n            label: \"Contact\",\n            options: [],\n            value: null,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        company_name: {\n            inputType: \"inputtext\",\n            label: \"Company Name\",\n            value: null,\n            disable: true,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        bill_from: {\n            inputType: \"singleSelect\",\n            label: \"Bill From\",\n            options: [],\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        projectService: {\n            inputType: \"singleSelect\",\n            label: \"Service Type\",\n            options: [],\n            value: null,\n            validation: {\n                required: false\n            },\n            fieldWidth: \"col-md-4\",\n        },\n        tax_type: {\n            inputType: \"singleSelect\",\n            label: \"Tax Type\",\n            options: [],\n            value: null,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        tax_code: {\n            inputType: \"multiSelect\",\n            label: \"Tax Code\",\n            options: [],\n            value: null,\n            validation: { required: false },\n            fieldWidth: \"col-md-4\",\n        },\n        invoice_amount: {\n            inputType: \"inputtext\",\n            label: \"Credit Amount\",\n            value: null,\n            validation: { required: true },\n            fieldWidth: \"col-md-4\",\n        },\n        note_one: {\n            inputType: \"inputtextarea\",\n            label: \"Note 1\",\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-6\",\n            rows: 3,\n        },\n        note_two: {\n            inputType: \"inputtextarea\",\n            label: \"Note 2\",\n            value: null,\n            validation: {\n                required: false,\n            },\n            fieldWidth: \"col-md-6\",\n            rows: 3,\n        },\n    };\n\n\n\n    const msaFormFields = {\n        start_date: {\n            inputType: \"singleDatePicker\",\n            label: \"Start Date\",\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n        end_date: {\n            inputType: \"singleDatePicker\",\n            label: \"End Date\",\n            value: null,\n            validation: {\n                required: true,\n            },\n            fieldWidth: \"col-md-6\",\n        },\n\n    };\n\n\n\n    const [countryMaster, setCountryMaster] = useState<any>([]);\n    const [stateMaster, setStateMaster] = useState<any>([]);\n    const [loader, setLoader] = useState(false);\n    const [clientFormPopup, setClientFormPopup] = useState(false);\n    const [isEditClient, setIsEditClient] = useState<boolean>(false);\n    const [isFormValid, setIsFormValid] = useState(true);\n    const [showConfirmDialogue, setShowConfirmDialogue] = useState(false);\n    const [actionPopupToggle, setActionPopupToggle] = useState<any>([]);\n    const [cliendData, setCliendData] = useState<any>();\n    const [companyMaster, setCompanyMaster] = useState<any>([]);\n    const [industryHeadMaster, setIndustryHeadMaster] = useState<any>([]);\n    const [industryMaster, setIndustryMaster] = useState<any>([]);\n    const [attachments, setAttachments]: any = useState([]);\n    const [digitalSign, setDigitalSign]: any = useState([]);\n    const [logoUrl, setLogoUrl] = useState('');\n    const [signatureUrl, setSignatureUrl] = useState('');\n    const [showNDAAttacment, setShowNDAAttacment] = useState<boolean>(false);\n    const [showMSAAttacment, setShowMSAAttacment] = useState<boolean>(false);\n    const [industryGroupMaster, setIndustryGroupMaster] = useState<any>([]);\n    const [accountManagerMaster, setAccountManagerMaster] = useState<any>([]);\n    const [accountsMaster, setAccountsMaster] = useState<any>([]);\n    const [clientMaster, setClientMaster] = useState<any>([]);\n    const [salesMaster, setSalesMaster] = useState<any>([]);\n    const [showMsaUpdatePopup, setShowMsaUpdatePopup] = useState<boolean>(false);\n\n    const [poContractsData, setPoContractData] = useState<any>([]);\n    const [clientListNames, setClientListNames] = useState<any>([]);\n    const [poContractConfData, setPoContractConfData] = useState<any>([]);\n    const [taxMaster, setTaxMaster] = useState<any>([]);\n    const [companyLocationMaster, setCompanyLocationMaster] = useState<any>([]);\n    const [invoiceMasterData, setInvoiceMasterData] = useState<any>([]);\n    const [poMastersConfigData, setPoMastersConfigData] = useState<any>({});\n    const [invoiceItems, setInvoiceItems] = useState<any>([{ id: Date.now(), description: \"\", sacCode: \"\", amount: 0 }]);\n    const [selectedTaxes, setSelectedTaxes] = useState<any>([])\n    const [selectedApplicableTaxes, setSelectedApplicableTaxes] = useState<any>([])\n    const [selectedContractData,setSelectedContractData] = useState<any>([])\n    const [invoiceNumberList,setInvoiceNumberList] = useState<any>([])\n\n\n    const [clientFormFieldsStructure, setClientFormFieldsStructure]: any =\n        useState(clientFormFields);\n    const [clientForm, setClientForm] = useState<any>(\n        _.cloneDeep(clientFormFieldsStructure)\n    );\n\n    const [msaFormFieldsStructure, setMsaFormFieldsStructure]: any =\n        useState(msaFormFields);\n    const [msaForm, setMsaForm] = useState<any>(\n        _.cloneDeep(msaFormFieldsStructure)\n    );\n\n    const companyService = new CompanyMasterService();\n    const clientService = new ClientMasterService();\n    const invoiceService = new InvoiceService();\n    const accountService = new AccountMasterService();\n    const accountsService = new AccountsMasterService();\n    const creditNoteService = new CreditNoteService();\n\n    const cookies = new Cookies();\n    const userInfo = cookies.get(\"userInfo\");\n\n    const loggedInUserId = userInfo?.userId;\n    let patchData: any;\n    const countryService = new CountryMasterService();\n    const stateService = new StateMasterService();\n    const industryService = new IndustryMasterService();\n    const salesService = new SalesMasterService();\n\n    const poContractService = new PoContractService();\n    const taxService = new TaxMasterService();\n\n    const clientMasterColumns = [\n        {\n            label: \"Action\",\n            fieldName: \"action\",\n            textAlign: \"left\",\n            frozen: true,\n            sort: false,\n            filter: false,\n            body: (rowData: any) => (\n                <div style={{ display: \"flex\", gap: \"10px\", marginLeft: \"20px\" }}>\n                    <span\n                        className=\"pi pi-pencil\"\n                        style={{ cursor: \"pointer\" }}\n                        title=\"Update\"\n                        onClick={() => onUpdate(rowData)}\n                    ></span>\n                    <span\n                        className={`pi pi-download`}\n                        style={{ cursor: \"pointer\" }}\n                        title=\"Download Credit Note\"\n                        onClick={()=> generatePDFHandler(rowData)}\n                    //   onClick={() => onDelete(rowData)}\n                    ></span>\n                </div>\n            ),\n        },\n        {\n            label: \"Credit Note Name\",\n            fieldName: \"invoice_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Credit Name\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`clientTooltip-${rowData.id}`} content={rowData.invoice_name} />\n            ),\n        },\n        {\n            label: \"Client\",\n            fieldName: \"client_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Client\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`clientTooltip-${rowData.id}`} content={rowData.client_name} />\n            ),\n        },\n        {\n            label: \"Contract\",\n            fieldName: \"contract_name\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Contract\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`contractTooltip-${rowData.id}`} content={rowData.contract_name} />\n            ),\n        },\n\n        {\n            label: \"PO Number\",\n            fieldName: \"po_number\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"PO Number\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`poNumberTooltip-${rowData.id}`} content={rowData.po_number} />\n            ),\n        },\n        {\n            label: \"PO Amount\",\n            fieldName: \"po_amount\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"PO Amount\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`poAmountTooltip-${rowData.id}`} content={rowData.po_amount} />\n            ),\n        },\n        {\n            label: \"Remain PO Amount\",\n            fieldName: \"remain_po_amount\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Remain PO Amount\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`remainPoAmountTooltip-${rowData.id}`} content={rowData.remain_po_amount} />\n            ),\n        },\n        {\n            label: \"Credit Date\",\n            fieldName: \"invoice_date\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Credit Date\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`invoiceDateTooltip-${rowData.id}`} content={new Date(rowData.invoice_date).toLocaleDateString()} />\n            ),\n        },\n        {\n            label: \"Invoice Number\",\n            fieldName: \"invoice_number\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Invoice Number\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`contractTooltip-${rowData.id}`} content={rowData.invoice_number || 'NA'} />\n            ),\n        },\n        {\n            label: \"Bill To\",\n            fieldName: \"clientBillTo\",\n            textAlign: \"left\",\n            frozen: false,\n            sort: true,\n            filter: true,\n            body: (rowData: any) => <span>{rowData?.clientBillTo_name}</span>,\n        },\n        {\n            label: \"Shipping Address\",\n            fieldName: \"clientShipAddress\",\n            textAlign: \"left\",\n            frozen: false,\n            sort: true,\n            filter: true,\n            body: (rowData: any) => <span>{rowData?.clientShipAddress_name}</span>,\n        },\n        {\n            label: \"Contact\",\n            fieldName: \"client_contact\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Contact\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`clientContactTooltip-${rowData.id}`} content={rowData.clientContact_name} />\n            ),\n        },\n        {\n            label: \"Bill From\",\n            fieldName: \"bill_from\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Bill From\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`billFromTooltip-${rowData.id}`} content={rowData.bill_from} />\n            ),\n        },\n        {\n            label: \"Project Service\",\n            fieldName: \"projectService\",\n            textAlign: \"left\",\n            frozen: false,\n            sort: true,\n            filter: true,\n            body: (rowData: any) => <span>{rowData?.projectService_names}</span>,\n        },\n        {\n            label: \"Tax Code\",\n            fieldName: \"tax_code\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Tax Code\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`taxCodeTooltip-${rowData.id}`} content={rowData.tax_code} />\n            ),\n        },\n        {\n            label: \"Credit Amount\",\n            fieldName: \"invoice_amount\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Credit Amount\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`invoiceAmountTooltip-${rowData.id}`} content={rowData.invoice_amount} />\n            ),\n        },\n        {\n            label: \"Total Amount\",\n            fieldName: \"total_amount\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Total Amount\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`invoiceAmountTooltip-${rowData.id}`} content={rowData.total_amount} />\n            ),\n        },\n        {\n            label: \"GST Total\",\n            fieldName: \"gst_total\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"GST Total\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`invoiceAmountTooltip-${rowData.id}`} content={rowData.gst_total} />\n            ),\n        },\n        {\n            label: \"Final Amount\",\n            fieldName: \"final_amount\",\n            textAlign: \"left\",\n            sort: true,\n            filter: true,\n            placeholder: \"Final Amount\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`invoiceAmountTooltip-${rowData.id}`} content={rowData.final_amount} />\n            ),\n        },\n        {\n            label: \"Note 1\",\n            fieldName: \"note_one\",\n            textAlign: \"left\",\n            sort: false,\n            filter: true,\n            placeholder: \"Note 1\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`noteOneTooltip-${rowData.id}`} content={rowData.note_one} />\n            ),\n        },\n        {\n            label: \"Note 2\",\n            fieldName: \"note_two\",\n            textAlign: \"left\",\n            sort: false,\n            filter: true,\n            placeholder: \"Note 2\",\n            body: (rowData: any) => (\n                <TooltipWrapper id={`noteTwoTooltip-${rowData.id}`} content={rowData.note_two} />\n            ),\n        },\n    ];\n\n    // const downloadFile = (filePath: any) => {\n    //     const fileUrl = `${process.env.REACT_APP_API_BASEURL}/${filePath}`;\n    //     // Create an anchor element and trigger the download\n    //     const link = document.createElement(\"a\");\n    //     link.href = fileUrl;\n    //     link.download = filePath.split(\"/\").pop(); // Extracts file name from the path\n    //     document.body.appendChild(link);\n    //     link.click();\n    //     document.body.removeChild(link);\n    // };\n\n    const viewMSAFile = (filePath: any) => {\n        const signatureUrl = `${process.env.REACT_APP_API_BASEURL}/${filePath}`;\n        // Open the file in a new tab\n        window.open(signatureUrl, \"_blank\");\n    };\n\n\n    const TooltipWrapper = ({ id, content }: any) => (\n        <div>\n            <span id={id}>{content}</span>\n            <Tooltip target={`#${id}`} position=\"top\" />\n        </div>\n    );\n\n    useEffect(() => {\n        const fetchData = async () => {\n            getInvoiceData();\n            getInvoiceNumberData();\n            getContractMaster();\n            getPoContractConfiguration();\n            getTaxMaster();\n            getCompanyLocationMaster();\n            getPOContractMasterConfigData();\n        };\n        if (clientFormPopup == false && showConfirmDialogue == false) {\n            fetchData();\n        }\n    }, [clientFormPopup, showConfirmDialogue]);\n\n    useEffect(() => {\n        if (!selectedContractData?.po_creation_date) return;\n   \n        console.log(\n            'Start date changed:',\n            clientForm?.invoice_date?.value,\n            selectedContractData\n        );\n   \n        const startDate = new Date(selectedContractData.po_creation_date);\n       \n        if (isNaN(startDate.getTime())) {\n            console.error('Invalid po_creation_date:', selectedContractData.po_creation_date);\n            return; \n        }\n   \n        setClientForm((prevForm: any) => ({\n            ...prevForm,\n            invoice_date: {\n                ...prevForm.invoice_date,\n                min: startDate, \n            },\n        }));\n    }, [selectedContractData]); \n\n    // const generatePDFHandler = async (data: any) => {\n    //     creditNoteService\n    //         .UpdatePDFCreditNote(data?.invoice_name)\n    //         .then(async (response: any) => {\n    //             if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n    //                 ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                    \n    //                 // Extract filename from the response\n    //                 const fileName = response?.pdfPath.split('\\\\').pop(); // Extract \"DIPL-25-26-0001.pdf\"\n    //                 const pdfUrl = `http://localhost:3000/public/${fileName}`; // Public URL\n    \n    //                 console.log(\"Downloading PDF from:\", pdfUrl);\n    \n    //                 // Fetch the PDF file as a blob\n    //                 const fileResponse = await fetch(pdfUrl);\n    //                 const blob = await fileResponse.blob();\n    \n    //                 // Create a download link\n    //                 const url = window.URL.createObjectURL(blob);\n    //                 const a = document.createElement(\"a\");\n    //                 a.href = url;\n    //                 a.download = fileName; // Download with the correct filename\n    //                 document.body.appendChild(a);\n    //                 a.click();\n    //                 document.body.removeChild(a);\n    //                 window.URL.revokeObjectURL(url);\n    //             }\n    //         })\n    //         .catch((error: any) => {\n    //             console.error(\"Error downloading PDF:\", error);\n    //             ToasterService.show(error.message || \"Error downloading PDF\", CONSTANTS.ERROR);\n    //         });\n    // };\n    \n\n    const generatePDFHandler = async (data: any) => {\n        creditNoteService\n            .UpdatePDFCreditNote(data?.invoice_name)\n            .then(async (response: any) => {\n                if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                    ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n    \n                    const fileUrl = `${process.env.REACT_APP_API_BASEURL}/creditnotes/${data.invoice_name}.pdf`;\n                    console.log(\"Downloading PDF from:\", fileUrl);\n    \n                    fetch(fileUrl)\n                        .then(res => res.blob())\n                        .then(blob => {\n                            const url = window.URL.createObjectURL(blob);\n                            const link = document.createElement(\"a\");\n                            link.href = url;\n                            link.setAttribute(\"download\", `${data.invoice_name}.pdf`); // Forces download\n                            document.body.appendChild(link);\n                            link.click();\n                            link.remove();\n                        })\n                        .catch(error => {\n                            console.error(\"Error downloading PDF:\", error);\n                            ToasterService.show(\"Error downloading PDF\", CONSTANTS.ERROR);\n                        });\n                }\n            })\n            .catch((error: any) => {\n                console.error(\"Error downloading PDF:\", error);\n                ToasterService.show(error.message || \"Error downloading PDF\", CONSTANTS.ERROR);\n            });\n    };\n    \n      \n        const getInvoiceNumberData = async () => {\n            setLoader(true);\n            try {\n                const response = await invoiceService.getInvoicesData();\n                setInvoiceNumberList(response.invoices);\n            } catch (error) {\n                console.error(error);\n            } finally {\n                setLoader(false);\n            }\n        };\n    \n\n    const getInvoiceData = async () => {\n        setLoader(true);\n        try {\n            const response = await creditNoteService.getCreditNoteData();\n            response.invoices.forEach((item: any) => item.invoiceInfo = JSON.parse(item.invoiceInfo))\n\n            const parsedData = response.invoices.map((invoice: any) => ({\n                ...invoice,\n                invoiceInfo: invoice.invoiceInfo.map((info: any) => ({\n                    ...info,\n                    taxBreakdown: info.taxBreakdown ? JSON.parse(info.taxBreakdown) : []\n                }))\n            }));\n            setInvoiceMasterData(parsedData);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n    const getContractMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await poContractService.getPoContractsData();\n\n            setPoContractData(response?.poContracts);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n    const getPoContractConfiguration = async () => {\n        // setLoader(true);\n        try {\n            const response = await poContractService.getPoContractConfiguration();\n            if (!response || !response.data) {\n                throw new Error(\"Invalid response from API\");\n            }\n \n            const data = Array.isArray(response.data) ? response.data : [];\n \n            console.log(\"Response Data:\", data);\n \n            // Ensure unique clients based on client_id\n            const uniqueClients = Array.from(\n                new Map(data.map((item: any) => [item.client_id, item])).values()\n            );\n \n            setPoContractConfData(uniqueClients);\n \n            setClientListNames(\n                uniqueClients.map((item: any) => item.client_name || \"Unknown Client\")\n            );\n \n            return uniqueClients;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n    const getPOContractMasterConfigData = async () => {\n        setLoader(true);\n        try {\n            const response = await poContractService.getPOContractMasterConfigData();\n            setPoMastersConfigData(response?.data?.data);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getTaxMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await taxService.getTax();\n            if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                console.log('getTaxMaster ', response.data);\n                setTaxMaster(response.data);\n                closeFormPopup();\n            }\n        } catch (error: any) {\n            ToasterService.show(error || \"Something Went Wrong\", CONSTANTS.ERROR);\n        }\n    };\n\n    const getCompanyLocationMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await companyService.getCompanyLocationMaster();\n            console.log('setCompanyLocationMaster', response?.locations);\n\n            setCompanyLocationMaster(response?.locations);\n            return response?.locations;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n    const formatTaxDetails = async (tax: any = taxMaster) => {\n        const taxDetails = tax.map((item: any) => item?.taxType);\n        clientFormFieldsStructure.tax_type.options = taxDetails;\n        console.log('clientFormFieldsStructure', tax, taxDetails);\n\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        // await statesFormHandler(clientFormFieldsStructure);\n    };\n\n\n    const getClientMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await clientService.getClientMaster();\n            setClientMaster(response?.clients);\n            return response?.clients;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n\n    const getSalesMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await salesService.getSalesMaster();\n            const temp = response?.salesManagers?.filter((item: any) => item?.isactive || item?.isActive)\n            setSalesMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n    const getIndustryMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await industryService.getIndustryMaster();\n            const temp = response?.industryMasters?.filter((item: any) => item?.isactive || item?.isActive)\n            setIndustryMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getIndustryHeadMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await industryService.getIndustryHeadMaster();\n            const temp = response?.industryHeads?.filter((item: any) => item?.isactive || item?.isActive)\n            setIndustryHeadMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getStateMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await stateService.getStateMaster();\n            const temp = response?.states?.filter((item: any) => item?.isactive || item?.isActive)\n            setStateMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getCountryMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await countryService.getCountryMaster();\n            const temp = response?.countries?.filter((item: any) => item?.isactive || item?.isActive);\n            setCountryMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getCompanyMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await companyService.getCompanyMaster();\n            const temp = response?.companies?.filter((item: any) => item?.isactive || item?.isActive)\n            setCompanyMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getIndustryGroupMaster = async () => {\n        setLoader(true);\n        try {\n            const response = await industryService.getIndustryGroupMaster();\n            const temp = response?.groupIndustries?.filter((item: any) => item?.isactive || item?.isActive)\n            setIndustryGroupMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoader(false);\n        }\n    };\n\n    const getAccountManagerMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await accountService.getAccountMaster();\n            const temp = response?.accountManagers?.filter((item: any) => item?.isactive || item?.isActive)\n            setAccountManagerMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n    const getAccountMaster = async () => {\n        // setLoader(true);\n        try {\n            const response = await accountsService.getAccountsMaster();\n            const temp = response?.companyAccounts?.filter((item: any) => item?.isactive || item?.isActive)\n            setAccountsMaster(temp);\n            return temp;\n        } catch (error) {\n            console.error(error);\n        } finally {\n            // setLoader(false);\n        }\n    };\n\n\n\n    const formatCountryDetails = async (countries: any = countryMaster) => {\n        const countrylist = countries.map((country: any) => country?.name);\n        // clientFormFieldsStructure.country_name.options = countrylist;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await statesFormHandler(clientFormFieldsStructure);\n    };\n\n    const formatCompanyDetails = async (companies: any = companyMaster) => {\n        const companyList = companies.map((company: any) => company?.companyName);\n        // clientFormFieldsStructure.companyName.options = companyList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatIndustryHeadDetails = async (\n        industries: any = industryHeadMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.industryHeadName\n        );\n        // clientFormFieldsStructure.industryHeadNames.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatIndustryGroupDetails = async (\n        industries: any = industryGroupMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.groupIndustryName\n        );\n        // clientFormFieldsStructure.industry_group.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatIndustrySubGroupDetails = async (\n        industries: any = industryGroupMaster\n    ) => {\n        console.log('industryGroupMaster', industries);\n\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.subIndustryCategory\n        );\n        // clientFormFieldsStructure.industry_sub_group.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure)\n    };\n\n    const formatAccountManagerMasterDetails = async (\n        industries: any = accountManagerMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.name\n        );\n        // clientFormFieldsStructure.account_manager.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n    };\n\n    const formatSalesManagerDetails = async (\n        industries: any = salesMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.name\n        );\n\n        // clientFormFieldsStructure.sales_person.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n    };\n\n    const formatAccountMasterDetails = async (\n        industries: any = accountsMaster\n    ) => {\n        const industryHeadList = industries.map(\n            (industryHead: any) => industryHead?.bankName\n        );\n        // clientFormFieldsStructure.account_name.options = industryHeadList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n    };\n\n    const formatIndustry_ClientDetails = async (industries: any = industryMaster) => {\n        const industryList = industries.map(\n            (industry: any) => industry?.industryName\n        );\n        // clientFormFieldsStructure.industry_name.options = industryList;\n        await setClientFormFieldsStructure(clientFormFieldsStructure);\n        await clientFormHandler(clientFormFieldsStructure);\n    };\n\n\n\n    const openSaveForm = async () => {\n        clientForm.client_name.options = clientListNames;\n        clientForm.projectService.options = Array.isArray(poMastersConfigData?.projectService)\n            ? poMastersConfigData?.projectService.map((item: any) => ({\n                label: item?.name,\n                value: item.id.toString(),\n            }))\n            : [];\n\n        const taxDetails = taxMaster.map((item: any) => item?.taxType);\n        clientForm.tax_type.options = taxDetails;\n        setClientFormPopup(true);\n    };\n\n    const statesFormHandler = async (form: FormType) => {\n        setClientForm(form);\n    };\n\n    const onUpdate = async (data: any) => {\n        await getContractMaster();\n        await getPoContractConfiguration();\n        await getTaxMaster();\n        await getCompanyLocationMaster();\n        await setCliendData(data);\n        await updateClientMaster(data);\n        await setClientFormPopup(true);\n        await setIsEditClient(true);\n    };\n    const onMSAUpdate = (data: any) => {\n        setShowMsaUpdatePopup(true);\n        setCliendData(data);\n    };\n\n    const onPopUpClose = (e?: any) => {\n        setShowConfirmDialogue(false);\n    };\n\n    const updateClientMaster = (data: any) => {\n        try {\n            clientFormFieldsStructure.client_name.options = clientListNames;\n            clientFormFieldsStructure.client_name.disable = true;\n            clientFormFieldsStructure.client_name.options = clientListNames;\n            const taxDetails = taxMaster.map((item: any) => item?.taxType);\n            clientFormFieldsStructure.tax_type.options = taxDetails;\n\n            const configData = poContractConfData.find((item: any) => item.client_name == data?.client_name)\n            if (configData) {\n                clientFormFieldsStructure.clientBillTo.options = configData.clientBill?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: concatAddresses(item.address1, item.address2, item.address3),\n                        value: item.id.toString(),\n                        isDefault: index == 0 ? 1 : 0\n                    }\n                })\n                console.log('Updating client form fields:', clientFormFieldsStructure, data);\n\n                clientFormFieldsStructure.clientBillTo.value = typeof data?.clientBillTo === \"string\"\n                    ? data.clientBillTo.split(\",\").map((item: any) => item.trim())\n                    : [];\n\n                clientFormFieldsStructure.clientShipAddress.options = configData.clientShip?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: concatAddresses(item.address1, item.address2, item.address3),\n                        value: item.id.toString(),\n                        isDefault: index == 0 ? 1 : 0\n                    }\n                })\n                clientFormFieldsStructure.clientShipAddress.value = typeof data?.clientShipAddress === \"string\"\n                    ? data.clientShipAddress.split(\",\").map((item: any) => item.trim())\n                    : [];\n                clientFormFieldsStructure.clientContact.options = Array.isArray(configData?.contacts) ? configData.contacts?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: item.name,\n                        value: item.id.toString(),\n                        isDefault: index == 0 ? 1 : 0\n                    }\n                }) : []\n\n                clientFormFieldsStructure.clientContact.value = data?.clientContact ? data?.clientContact : [];\n                clientFormFieldsStructure.company_name.value = configData?.companyInfo.companyName;\n            }\n\n            const tempData: any = companyLocationMaster?.filter((item: any) => item?.companyName == clientFormFieldsStructure.company_name.value).map((ele: any) => {\n                return {\n                    label: concatAddresses(ele?.address1, ele?.address2, ele?.address3),\n                    isDefault: ele?.isDefaultAddress\n                }\n            });\n\n\n            clientFormFieldsStructure.projectService.options = Array.isArray(poMastersConfigData?.projectService)\n                ? poMastersConfigData?.projectService.map((item: any) => ({\n                    label: item?.name,\n                    value: item.id.toString(),\n                }))\n                : [];\n\n                clientFormFieldsStructure.invoice_number.options = invoiceNumberList?.filter((item: any) => item.contract_name == data?.contract_name).map((item: any, index: number) => {\n                    return {\n                        label: item.invoice_name,\n                        value: item.id.toString(),\n                    }\n                })\n\n            clientFormFieldsStructure.bill_from.options = tempData?.map((ele: any) => ele?.label) || [];\n            clientFormFieldsStructure.bill_from.value = data?.bill_from ? data?.bill_from : \"\";\n\n            clientFormFieldsStructure.client_name.value = data?.client_name || \"\";\n            clientFormFieldsStructure.contract_name.value = data?.contract_name || \"\";\n            clientFormFieldsStructure.invoice_number.value = data?.invoice_number_id || \"\";\n            clientFormFieldsStructure.po_number.value = data?.po_number || \"\";\n            clientFormFieldsStructure.po_amount.value = data?.po_amount || \"\";\n            clientFormFieldsStructure.remain_po_amount.value = data?.remain_po_amount || \"\";\n            clientFormFieldsStructure.invoice_date.value = data?.invoice_date ? parseDateString(data?.invoice_date) : null;\n            // clientFormFieldsStructure.contract_type.value = data?.contract_type || \"\";\n            clientFormFieldsStructure.tax_type.value = data?.tax_type || \"\";\n            clientFormFieldsStructure.tax_code.value = data?.tax_code ? data?.tax_code.split(\",\") : [];\n            clientFormFieldsStructure.invoice_amount.value = data?.invoice_amount || \"\";\n            clientFormFieldsStructure.note_one.value = data?.note_one || \"\";\n            clientFormFieldsStructure.note_two.value = data?.note_two || \"\";\n            clientFormFieldsStructure.projectService.value = data?.projectService ? data?.projectService : \"\";\n\n\n            // clientFormFieldsStructure.po_number.disable = true;\n            // clientFormFieldsStructure.po_amount.disable = true;\n            clientFormFieldsStructure.invoice_amount.disable = true;\n            clientFormFieldsStructure.contract_name.disable = true;\n\n            setClientForm(_.cloneDeep(clientFormFieldsStructure));\n\n            setInvoiceItems(data.invoiceInfo.map((item: any) => ({\n                description: item.description,\n                sacCode: item.sacCode,\n                amount: item.amount,\n                taxBreakdown: item.taxBreakdown\n            })));\n\n            setSelectedTaxes(data.invoiceInfo.flatMap((item: any) => item.taxBreakdown));\n\n            console.log(\"Updated form data:\", clientFormFieldsStructure);\n        } catch (error) {\n            console.error(\"Error updating client master form:\", error);\n        }\n    };\n\n    const patchInvoiceData = (data: any) => {\n        if (Array.isArray(data)) {\n            setInvoiceItems(data.map((item) => ({\n                id: item.id || Date.now(),\n                description: item.description || \"\",\n                sacCode: item.sacCode || \"\",\n                amount: item.amount || 0\n            })));\n        }\n    };\n\n\n    const createNewState = (event: FormEvent) => {\n        event.preventDefault();\n        let companyValidityFlag = true;\n        const companyFormValid: boolean[] = [];\n\n        _.each(clientForm, (item: any) => {\n            if (item?.validation?.required) {\n                companyFormValid.push(item.valid);\n                companyValidityFlag = companyValidityFlag && item.valid;\n            }\n        });\n\n        setIsFormValid(companyValidityFlag);\n\n        const countryId =\n            countryMaster.find(\n                (country: any) => country.name === clientForm.country_name.value\n            )?.id ?? null;\n\n        if (companyValidityFlag) {\n            const obj = {\n                stateName: clientForm?.stateName?.value,\n                stateCode: clientForm?.stateCode?.value,\n                gstCode: clientForm?.gstCode?.value,\n                countryId: countryId,\n                isActive: 1,\n                updatedBy: loggedInUserId,\n            };\n\n            if (!cliendData?.id) {\n                stateService\n                    .createStateMaster(obj)\n                    .then((response: any) => {\n                        if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                            setCliendData({});\n                            closeFormPopup();\n                            ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                        }\n                    })\n                    .catch((error: any) => {\n                        setCliendData({});\n                        ToasterService.show(error, CONSTANTS.ERROR);\n                    });\n            } else {\n                const updatePayload = { ...obj, stateId: cliendData?.id };\n\n                stateService\n                    .updateStateMaster(updatePayload)\n                    .then((response: any) => {\n                        if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                            setCliendData({});\n                            closeFormPopup();\n                            ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                        }\n                    })\n                    .catch((error: any) => {\n                        setCliendData({});\n                        ToasterService.show(error, CONSTANTS.ERROR);\n                    });\n            }\n        } else {\n            ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n        }\n    };\n\n    const onDelete = (data: any) => {\n        patchData = data;\n        setActionPopupToggle({\n            displayToggle: false,\n            title: \"Delete\",\n            message: `Are you sure you want to ${!(data?.isactive || data?.is_active || data?.isActive)\n                ? \"activate\"\n                : \"deactivate\"\n                } this record?`,\n            acceptFunction: confirmDelete,\n            rejectFunction: onPopUpClose,\n            askForDeactivationDate: data?.isactive || data?.is_active || data?.isActive,\n        });\n        setShowConfirmDialogue(true);\n    };\n\n    const confirmDelete = (deactivationDate?: Date) => {\n        setLoader(true);\n        console.log('deactivationDate', deactivationDate);\n\n        clientService\n            .deactivateClientMaster({ ...patchData, loggedInUserId, deactivationDate: deactivationDate ? formatDate(deactivationDate) : null, })\n            .then(() => {\n                setLoader(false);\n                setShowConfirmDialogue(false);\n                ToasterService.show(\n                    `Client record ${patchData?.isActive ? \"deactivated\" : \"activated\"\n                    } successfully`,\n                    CONSTANTS.SUCCESS\n                );\n            })\n            .catch((error) => {\n                setLoader(false);\n                return false;\n            });\n    };\n\n    const closeFormPopup = () => {\n        setClientFormPopup(false);\n        setIsEditClient(false);\n        setCliendData({});\n        setClientFormFieldsStructure(_.cloneDeep(clientFormFields));\n        setClientForm(_.cloneDeep(clientFormFields));\n        setShowMsaUpdatePopup(false);\n        setMsaForm(_.cloneDeep(msaFormFields));\n        setAttachments([]);\n        setDigitalSign([]);\n        setSignatureUrl('');\n        setLogoUrl('');\n        setInvoiceItems([{ id: Date.now(), description: \"\", sacCode: \"\", amount: 0 }])\n    };\n\n    const parseDateString = (dateString: any) => {\n        if (!dateString) return new Date();\n        const date: any = new Date(dateString);\n        if (isNaN(date)) return new Date();\n        const year = date.getFullYear();\n        const month: any = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day: any = String(date.getDate()).padStart(2, \"0\");\n        return new Date(year, month - 1, day);\n    };\n\n    const formatDate = (dateString: any) => {\n        const date = new Date(dateString);\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        return `${year}/${month}/${day}`;\n    };\n\n    function concatAddresses(address1: string, address2: string, address3: string) {\n        // Check for null/undefined values and join non-empty addresses\n        return [address1, address2, address3].filter((addr) => addr).join(\", \");\n    }\n\n    const filterTaxes = (taxMaster: any, taxTypes: any) => {\n        return taxMaster.filter((tax: any) => taxTypes.includes(tax.taxFieldName));\n    };\n\n    const clientFormHandler = async (currentForm: FormType) => {\n        const form = _.cloneDeep(currentForm);\n\n\n        // console.log('form handler checking ---->>> ', form, invoiceNumberList);\n\n        // if (form.client_name?.value !== clientForm?.client_name?.value) {\n        const selectedClient = form.client_name?.value\n        if (selectedClient) {\n            const tempData = poContractsData\n                ?.filter((item: any) => item?.client_name === selectedClient)\n                .map((ele: any) => ele?.po_name)\n                .filter((name: any) => name !== null && name !== undefined); // Remove null/undefined values\n\n            form.contract_name.options = tempData || [];\n        }\n        if ((form.contract_name?.value != clientForm?.contract_name?.value) && form.contract_name?.value) {\n            const selectedContract = poContractsData?.filter((item: any) => item?.client_name === selectedClient)?.find((ele: any) => ele?.po_name == form.contract_name?.value)\n            form.po_number.value = selectedContract?.poNumber;\n            form.po_amount.value = selectedContract?.poAmount;\n            form.remain_po_amount.value = selectedContract?.dueAmount;\n            form.company_name.value = selectedContract?.companyName;\n            setSelectedContractData(selectedContract)\n            const configData = poContractConfData.find((item: any) => item.client_name == form.client_name.value)\n            console.log('configData', configData, selectedContract, invoiceNumberList);\n\n            if (configData) {\n                form.invoice_number.options = invoiceNumberList?.filter((item: any) => item.contract_name == selectedContract?.po_name).map((item: any, index: number) => {\n                    return {\n                        label: item.invoice_name,\n                        value: item.id.toString(),\n                    }\n                })\n                form.clientBillTo.options = configData.clientBill?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: concatAddresses(item.address1, item.address2, item.address3),\n                        value: item.id.toString(),\n                        isDefault: concatAddresses(item.address1, item.address2, item.address3) == selectedContract?.masterNames?.clientBillTo_names ? 1 : 0\n                    }\n                })\n                form.clientBillTo.options = configData.clientBill?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: concatAddresses(item.address1, item.address2, item.address3),\n                        value: item.id.toString(),\n                        isDefault: concatAddresses(item.address1, item.address2, item.address3) == selectedContract?.masterNames?.clientBillTo_names ? 1 : 0\n                    }\n                })\n                const defaultBillItem = form.clientBillTo.options?.find((ele: any) => ele.isDefault == 1);\n                if (defaultBillItem && defaultBillItem?.value) {\n                    form.clientBillTo.value = [defaultBillItem?.value.toString()];\n                }\n                else {\n                    form.clientBillTo.value = null;\n                }\n                form.clientShipAddress.options = configData.clientShip?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: concatAddresses(item.address1, item.address2, item.address3),\n                        value: item.id.toString(),\n                        isDefault: concatAddresses(item.address1, item.address2, item.address3) == selectedContract?.masterNames?.clientShipAddress_names ? 1 : 0\n                    }\n                })\n                const defaultShipItem = form.clientShipAddress?.options?.find((ele: any) => ele.isDefault == 1);\n                if (defaultShipItem && defaultShipItem?.value) {\n                    form.clientShipAddress.value = [defaultShipItem?.value.toString()];\n                }\n                else {\n                    form.clientShipAddress.value = null;\n                }\n                form.clientContact.options = Array.isArray(configData?.contacts) ? configData.contacts?.filter((item: any) => item.id).map((item: any, index: number) => {\n                    return {\n                        label: item.name,\n                        value: item.id.toString(),\n                        isDefault: index == 0 ? 1 : 0\n                    }\n                }) : []\n                const defaultContact = form.clientContact?.options?.find((ele: any) => ele.isDefault == 1);\n                if (defaultContact && defaultContact?.value) {\n                    form.clientContact.value = [defaultContact?.value.toString()];\n                }\n                else {\n                    form.clientContact.value = null;\n                }\n\n                if (form.company_name.value) {\n                    const tempData: any = companyLocationMaster?.filter((item: any) => item?.companyName == form.company_name.value).map((ele: any) => {\n                        return {\n                            label: concatAddresses(ele?.address1, ele?.address2, ele?.address3),\n                            isDefault: ele?.isDefaultAddress\n                        }\n                    });\n                    console.log('tempData', tempData?.map((ele: any) => ele?.label), tempData?.find((ele: any) => ele?.isDefault));\n\n                    form.bill_from.options = tempData?.map((ele: any) => ele?.label) || [];\n                    form.bill_from.value = tempData?.find((ele: any) => ele?.isDefault)?.label;\n                }\n            }\n\n        }\n\n        if (form?.tax_type?.value) {\n            const taxCodeOptions = taxMaster?.filter((tax: any) => tax?.taxType == form?.tax_type?.value)?.map((item: any) => item?.taxFieldName);\n            form.tax_code.options = taxCodeOptions;\n        }\n\n        if (form?.tax_code?.value) {\n            const tempSelectedTaxes = filterTaxes(taxMaster, form?.tax_code?.value);\n            setSelectedTaxes(tempSelectedTaxes)\n        }\n\n        // }\n\n        setClientForm(form);\n    };\n\n    const getNamesFromOptions = (field: any) => {\n        if (!field?.options || !Array.isArray(field.value)) return '';\n        return field.value\n            .map((value: string) => field.options.find((item: any) => item.value === value)?.label || '')\n            .filter((name: string) => name !== '')\n            .join(', ');\n    };\n\n\n    const getFinancialYear = (dateString: any) => {\n        const date = new Date(dateString);\n        let year = date.getFullYear();\n        let nextYear = year + 1;\n\n        // Financial year logic (April to March)\n        if (date.getMonth() < 3) { // If Jan, Feb, or March\n            year -= 1;\n            nextYear -= 1;\n        }\n\n        return `${year.toString().slice(-2)}-${nextYear.toString().slice(-2)}`;\n    };\n\n    const getClientAbbreviation = (clientName: any) => {\n        if (!clientName) return \"\";\n        return clientName.split(\" \").map((word: any) => word[0]).join(\"\").toUpperCase();\n    };\n\n    const createNewClient = async (event: FormEvent) => {\n        event.preventDefault();\n        let companyValidityFlag = true;\n\n        _.each(clientForm, (item: any) => {\n            if (item?.validation?.required) {\n                companyValidityFlag = companyValidityFlag && item.value;\n            }\n        });\n\n        setIsFormValid(companyValidityFlag);\n\n        // Prepare invoice data\n        const invoiceData = {\n            invoiceItems: invoiceItems.map((item: any) => ({\n                description: item.description,\n                sacCode: item.sacCode,\n                amount: item.amount\n            })),\n            totalAmount: totalAmount.toFixed(2),\n            gstTotal: gstTotal.toFixed(2),\n            finalAmount: (totalAmount + gstTotal).toFixed(2),\n            taxBreakdown: taxCalculations.map((tax: any) => ({\n                taxFieldName: tax.taxFieldName,\n                taxPercentage: tax.taxPercentage,\n                calculatedAmount: tax.calculatedAmount.toFixed(2)\n            }))\n        };\n\n        console.log(\"Final Invoice Data:\", invoiceData, clientForm);\n\n        if (!companyValidityFlag) {\n            ToasterService.show(\"Please Check all the Fields!\", CONSTANTS.ERROR);\n            return;\n        }\n\n        // Extract values from form\n        const poAmount = parseFloat(clientForm.remain_po_amount.value) || 0;\n        const invoiceAmount = parseFloat(clientForm.invoice_amount.value) || 0;\n\n        // Validation checks\n        if (invoiceAmount > poAmount) {\n            ToasterService.show(\"Credit Amount cannot be greater than remain PO Amount!\", CONSTANTS.ERROR);\n            return;\n        }\n\n        if (parseFloat(invoiceData.totalAmount) !== invoiceAmount) {\n            ToasterService.show(\"Total Amount must match Credit Amount!\", CONSTANTS.ERROR);\n            return;\n        }\n\n        console.log('Processing with valid data:', poContractsData, clientForm, poContractsData.find((item: any) => item.po_name === clientForm.contract_name.value));\n\n        const clientId = poContractConfData.find((item: any) => item.client_name === clientForm.client_name.value)?.client_id || '';\n        const contractId = poContractsData.find((item: any) => item.po_name === clientForm.contract_name.value)?.clientId || '';\n        const invoiceBillFromId = companyLocationMaster.find((el: any) => concatAddresses(el.address1, el?.address2, el?.address3) == clientForm.bill_from.value)?.id ?? null;\n        const taxTypeId = taxMaster.find((el: any) => el?.taxType == clientForm.tax_type.value)?.id ?? null;\n\n        let taxCodeId = \"\";\n        clientForm?.tax_code?.value?.forEach((item: any) => {\n            const id = taxMaster?.find((com: any) => com?.taxFieldName == item)?.id ?? null;\n            if (id != null) {\n                taxCodeId = taxCodeId != \"\" ? taxCodeId + \",\" + id : id;\n            }\n        });\n\n        const formData: any = new FormData();\n        const clientAbbr = getClientAbbreviation(clientForm.client_name.value);\n        const financialYear = getFinancialYear(clientForm.invoice_date.value);\n        const invoiceName = `${clientAbbr}/${financialYear}`;\n\n        const obj = {\n            client_name: clientForm.client_name.value || '',\n            client_id: clientId,\n            invoice_name: invoiceName,\n            contract_name: clientForm.contract_name.value || '',\n            contract_id: contractId,\n            po_number: clientForm.po_number.value || '',\n            // po_amount: poAmount.toFixed(2),\n            po_amount: clientForm.po_amount.value || '',\n            remain_po_amount: clientForm.remain_po_amount.value || '',\n            invoice_date: clientForm.invoice_date.value ? formatDate(clientForm.invoice_date.value) : null,\n            clientBillTo: clientForm.clientBillTo.value?.toString() || '',\n            clientShipAddress: clientForm.clientShipAddress.value?.toString() || '',\n            clientContact: clientForm.clientContact.value?.toString() || '',\n            company_name: clientForm.company_name.value || '',\n            bill_from: clientForm.bill_from.value || '',\n            invoice_number_id: clientForm.invoice_number.value || '',\n            invoice_number: clientForm.invoice_number.options.find((item: any) => item.value === clientForm.invoice_number.value)?.label || '',\n            invoice_bill_from_id: invoiceBillFromId,\n            // contract_type: clientForm.contract_type.value || '',\n            projectService_names: clientForm.projectService.options.find((item: any) => item.value === clientForm.projectService.value)?.label || '',\n            projectService: clientForm.projectService.value || '',\n            tax_type: clientForm.tax_type.value || '',\n            tax_type_id: taxTypeId || 0,\n            tax_code: clientForm.tax_code.value?.toString() || '',\n            tax_code_id: taxCodeId,\n            invoice_amount: invoiceAmount.toFixed(2),\n            note_one: clientForm.note_one.value || '',\n            note_two: clientForm.note_two.value || '',\n            clientBillTo_name: getNamesFromOptions(clientForm.clientBillTo),\n            clientShipAddress_name: getNamesFromOptions(clientForm.clientShipAddress),\n            // clientContact_name: getNamesFromOptions(clientForm.clientContact),\n            clientContact_name: clientForm.clientContact.options.find((item: any) => item.value === clientForm.clientContact.value)?.label || '',\n            total_amount: invoiceData.totalAmount,\n            final_amount: invoiceData.finalAmount,\n            gst_total: invoiceData.gstTotal,\n            invoiceData: JSON.stringify(invoiceData),\n            updated_by: loggedInUserId,\n            isActive: 1\n        };\n\n        Object.entries(obj).forEach(([key, value]: any) => {\n            formData.set(key, value);\n        });\n\n        console.log(\"Final formData:\", obj, formData);\n\n        if (!cliendData?.id) {\n          creditNoteService\n                .createCreditNote(formData)\n                .then((response: any) => {\n                    if (response?.statusCode === HTTP_RESPONSE.CREATED) {\n                        setCliendData({});\n                        closeFormPopup();\n                        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                    }\n                })\n                .catch((error: any) => {\n                    setCliendData({});\n                    ToasterService.show(error, CONSTANTS.ERROR);\n                });\n        } else {\n            const updatePayload = { ...obj, id: cliendData?.id, invoice_name: cliendData?.invoice_name };\n\n            Object.entries(updatePayload).forEach(([key, value]: any) => {\n                formData.set(key, value);\n            });\n\n            creditNoteService\n                .updateCreditNote(formData)\n                .then((response: any) => {\n                    if (response?.statusCode === HTTP_RESPONSE.SUCCESS) {\n                        setCliendData({});\n                        closeFormPopup();\n                        ToasterService.show(response?.message, CONSTANTS.SUCCESS);\n                    }\n                })\n                .catch((error: any) => {\n                    setCliendData({});\n                    ToasterService.show(error, CONSTANTS.ERROR);\n                });\n        }\n    };\n\n    const addRow = () => {\n        setInvoiceItems([...invoiceItems, { id: Date.now(), description: \"\", sacCode: \"\", amount: 0 }]);\n    };\n\n    const handleInputChange = (e: any, index: any, field: any) => {\n        const updatedItems = [...invoiceItems];\n        updatedItems[index][field] = e.target.value;\n        setInvoiceItems(updatedItems);\n    };\n\n    const handleAmountChange = (e: any, index: any) => {\n        const updatedItems = [...invoiceItems];\n        updatedItems[index].amount = e.value;\n        setInvoiceItems(updatedItems);\n    };\n\n    const totalAmount = invoiceItems.reduce((sum: any, item: any) => sum + (parseFloat(item.amount) || 0), 0);\n\n    const gstAmount = selectedTaxes.reduce((sum: any, tax: any) => sum + (totalAmount * (tax.taxPercentage / 100)), 0);\n\n    const taxCalculations = selectedTaxes.map((tax: any) => ({\n        ...tax,\n        calculatedAmount: totalAmount * (tax.taxPercentage / 100)\n    }));\n\n    const gstTotal = taxCalculations.reduce((sum: any, tax: any) => sum + tax.calculatedAmount, 0);\n\n    return loader ? (\n        <Loader />\n    ) : (\n        <>\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"end\",\n                    marginBottom: \"0.5em\",\n                }}\n            >\n                <ButtonComponent\n                    label=\"Add New Credit Note\"\n                    icon=\"pi pi-check\"\n                    iconPos=\"right\"\n                    submitEvent={openSaveForm}\n                />\n            </div>\n            <p className=\"m-0\">\n                <DataTableBasicDemo\n                    data={invoiceMasterData}\n                    column={clientMasterColumns}\n                    showGridlines={true}\n                    resizableColumns={true}\n                    rows={20}\n                    paginator={true}\n                    sortable={true}\n                    headerRequired={true}\n                    scrollHeight={\"calc(100vh - 200px)\"}\n                    downloadedfileName={\"Brandwise_Denomination_table\"}\n                />\n                {showConfirmDialogue ? (\n                    <ConfirmDialogue\n                        actionPopupToggle={actionPopupToggle}\n                        onCloseFunction={onPopUpClose}\n                    />\n                ) : null}\n            </p>\n            {clientFormPopup ? (\n                <div className=\"popup-overlay md-popup-overlay\">\n                    <div className=\"popup-body md-popup-body stretchLeft\">\n                        <div className=\"popup-header \">\n                            <div\n                                className=\"popup-close\"\n                                onClick={() => {\n                                    closeFormPopup();\n                                }}\n                            >\n                                <i className=\"pi pi-angle-left\"></i>\n                                <h4 className=\"popup-heading\">{isEditClient ? 'Update' : 'Add'} Credit Note</h4>\n                            </div>\n                            <div\n                                className=\"popup-right-close\"\n                                onClick={() => {\n                                    closeFormPopup();\n                                }}\n                            >\n                                &times;\n                            </div>\n                        </div>\n                        <div className=\"popup-content\" style={{ padding: \"1rem 2rem\" }}>\n                            <FormComponent\n                                form={_.cloneDeep(clientForm)}\n                                formUpdateEvent={clientFormHandler}\n                                isFormValidFlag={isFormValid}\n                            ></FormComponent>\n\n\n                            <div>\n                                {/* Header with Button */}\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"10px\" }}>\n                                    <h5 style={{ margin: 0, fontWeight: \"600\", color: \"#333\" }}>Add Credit Note Items Detail</h5>\n                                    <Button\n                                        onClick={addRow}\n                                        label=\"Add Row\"\n                                        style={{\n                                            backgroundColor: \"#007bff\",\n                                            color: \"white\",\n                                            padding: \"4px 12px\",\n                                            borderRadius: \"5px\",\n                                            fontSize: \"14px\",\n                                            fontWeight: \"500\",\n                                            border: \"none\"\n                                        }}\n                                    />\n                                </div>\n\n                                {/* Styled Table */}\n                                <DataTable\n                                    value={invoiceItems}\n                                    responsiveLayout=\"scroll\"\n                                    style={{\n                                        border: \"1px solid #ddd\",\n                                        borderRadius: \"5px\",\n                                        boxShadow: \"0px 2px 5px rgba(0,0,0,0.1)\",\n                                        overflow: \"hidden\"\n                                    }}\n                                >\n                                    <Column field=\"description\" header=\"Description\" body={(rowData, { rowIndex }) => (\n                                        <InputText\n                                            value={rowData.description}\n                                            onChange={(e) => handleInputChange(e, rowIndex, \"description\")}\n                                            style={{\n                                                height: \"28px\",\n                                                fontSize: \"14px\",\n                                                padding: \"4px 8px\",\n                                                borderRadius: \"4px\",\n                                                border: \"1px solid #ccc\",\n                                                width: \"100%\"\n                                            }}\n                                        />\n                                    )} />\n                                    <Column field=\"sacCode\" header=\"SAC Code\" body={(rowData, { rowIndex }) => (\n                                        <InputText\n                                            value={rowData.sacCode}\n                                            onChange={(e) => handleInputChange(e, rowIndex, \"sacCode\")}\n                                            style={{\n                                                height: \"28px\",\n                                                fontSize: \"14px\",\n                                                padding: \"4px 8px\",\n                                                borderRadius: \"4px\",\n                                                border: \"1px solid #ccc\",\n                                                width: \"100%\"\n                                            }}\n                                        />\n                                    )} />\n                                    <Column field=\"amount\" header=\"Amount\" body={(rowData, { rowIndex }) => (\n                                        <InputNumber\n                                            value={rowData.amount}\n                                            onValueChange={(e) => handleAmountChange(e, rowIndex)}\n                                            mode=\"decimal\"\n                                            style={{\n                                                width: \"100%\",\n                                                height: \"28px\",\n                                                fontSize: \"14px\",\n                                                padding: \"6px 10px\",\n                                                textAlign: \"right\",\n                                                border: \"1px solid #ccc\",\n                                                borderRadius: \"4px\",\n                                                backgroundColor: \"#fff\",\n                                                outline: \"none\",\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                transition: \"border-color 0.2s ease-in-out\"\n                                            }}\n                                            inputStyle={{\n                                                width: \"100%\",\n                                                height: \"28px\",\n                                                padding: \"0px\",\n                                                border: \"none\", // Ensures only one border is applied\n                                                outline: \"none\",\n                                                backgroundColor: \"transparent\"\n                                            }}\n                                        />\n                                    )} />\n                                </DataTable>\n\n                                {/* Total Calculation UI */}\n                                <div style={{\n                                    textAlign: \"right\",\n                                    padding: \"15px\",\n                                    marginTop: \"10px\",\n                                    backgroundColor: \"#f8f9fa\",\n                                    borderRadius: \"5px\",\n                                    boxShadow: \"0px 1px 4px rgba(0,0,0,0.1)\"\n                                }}>\n                                    <h6 style={{ marginBottom: \"5px\", fontWeight: \"600\" }}>Total: {totalAmount.toFixed(2)}</h6>\n                                    {taxCalculations.map((tax: any, index: any) => (\n                                        <h6 key={index} style={{ marginBottom: \"5px\", fontSize: \"14px\", color: \"#555\" }}>\n                                            {tax.taxFieldName}@{tax.taxPercentage}%: {tax.calculatedAmount.toFixed(2)}\n                                        </h6>\n                                    ))}\n                                    <h6 style={{ marginBottom: \"5px\", fontWeight: \"600\", color: \"#333\" }}>Total GST: {gstTotal.toFixed(2)}</h6>\n                                    <h6 style={{ fontWeight: \"700\", fontSize: \"16px\", color: \"#222\" }}>Total Amount: {(totalAmount + gstTotal).toFixed(2)}</h6>\n                                </div>\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"popup-lower-btn\">\n                            <ButtonComponent\n                                label=\"Submit\"\n                                icon=\"pi pi-check\"\n                                iconPos=\"right\"\n                                submitEvent={createNewClient}\n                            />\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n};\n\nexport default CreditNoteMaster;\n\n","import { APIURLS } from '../../constants/ApiUrls';\nimport { HTTPService } from '../http-service/http-service';\n\nexport class InvoiceService {\n  // Fetch all invoices\n  getInvoicesData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_INVOICES);\n      return response?.data;\n    } catch (err) {\n      console.error('Error fetching invoices:', err);\n      return {};\n    }\n  };\n\n  // Create a new invoice\n  createInvoice = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id ? APIURLS.UPDATE_INVOICE : APIURLS.CREATE_INVOICE,\n        formData\n      );\n      return response?.data;\n    } catch (error) {\n      console.error('Error creating invoice:', error);\n      return error;\n    }\n  };\n\n  // Update an existing invoice\n  updateInvoice = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_INVOICE,\n        formData\n      );\n      return response?.data;\n    } catch (error) {\n      console.error('Error updating invoice:', error);\n      return error;\n    }\n  };\n\n  // Activate/Deactivate an invoice\n  activateDeactivateInvoice = async (data: any) => {\n    try {\n      const body = {\n        id: data.id, // Assuming `id` represents the Invoice ID\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_INVOICE_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      console.error('Error activating/deactivating invoice:', err);\n      return {};\n    }\n  };\n\n  UpdateInvoicePDF = async (invoiceNumber: any) => {\n    try {\n        const response = await HTTPService.postRequest(\n            APIURLS.POST_GENERATE_INVOICE_PDF,  \n            { invoice_number: invoiceNumber } \n        );\n\n        return response?.data;\n    } catch (err) {\n        return {};\n    }\n};\nUpdateTaxInvoicePDF = async (invoiceNumber: any) => {\n  try {\n      const response = await HTTPService.postRequest(\n          APIURLS.POST_GENETARE_TAX_PDF,  \n          { invoice_number: invoiceNumber } \n      );\n\n      return response?.data;\n  } catch (err) {\n      return {};\n  }\n};\n\nGetInvoiceDownloadPDF = async () => {\n    try {\n        const response = await HTTPService.getRequest(APIURLS.GET_GENERATE_INVOICE_PDF)\n        return response?.data\n    } catch (err) {\n        return {}\n    }\n}\n\n}\n\n\n","import moment from \"moment\";\nimport { APIURLS } from \"../../../constants/ApiUrls\";\nimport { AuthService } from \"../../auth-service/auth.service\";\nimport { HTTPService } from \"../../http-service/http-service\";\n\nexport class AccountMasterService {\n  getAccountMaster = async (countryId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_ACCOUNT_MANAGER_MASTER, {\n        countryId: countryId ? countryId : null,\n      });\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  createAccountMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_ACCOUNT_MANAGER_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateAccountMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_ACCOUNT_MANAGER_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateAccountMaster = async (data: any) => {\n    try {\n      console.log(`master mastermaster`,data)\n      const body = {\n        accountManagerId: data.id,\n        industryHeadIds: data.industryHeadIds,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n        deactivationDate:data?.deactivationDate?moment(new Date(data?.deactivationDate)).format('YYYY-MM-DD'): null\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_ACCOUNT_MANAGER_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n}\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class AccountsMasterService {\n  getAccountsMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_ACCOUNTS_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createAccountsMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_ACCOUNTS_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateAccountsMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_ACCOUNTS_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateAccountsMaster = async (data: any) => {\n    try {\n      const body = {\n        accountId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_ACCOUNTS_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import { APIURLS } from \"../../../constants/ApiUrls\";\nimport { HTTPService } from \"../../http-service/http-service\";\nimport { AuthService } from \"../../../services/auth-service/auth.service\";\nimport moment from \"moment\";\n\nexport class CompanyMasterService {\n  getCompanyMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.GET_COMPANY_MASTER\n      );\n      return response?.data;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  createCompanyMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_COMPANY_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateCompanyMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_COMPANY_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateCompanyMaster = async (data: any) => {\n    try {\n      const body = {\n        companyId: data.id,\n        isActive: !data.isactive,\n        updatedBy: data?.loggedInUserId,\n      };\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_COMPANY_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return err;\n    }\n  };\n  getCompanyLocationMaster = async (companyId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.GET_COMPANY_LOCATION_MASTER,\n        { companyId: companyId ? companyId : null }\n      );\n      return response?.data;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  createCompanyLocationMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_COMPANY_LOCATION_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateCompanyLocationMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_COMPANY_LOCATION_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateCompanyLocationMaster = async (data: any) => {\n    try {\n      const body = {\n        locationId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n        deactivationDate:data?.deactivationDate?moment(new Date(data?.deactivationDate)).format('YYYY-MM-DD'): null\n      };\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_COMPANY_LOCATION_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return err;\n    }\n  };\n}\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class CountryMasterService {\n  getCountryMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_COUNTRY_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n  createCountryMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_COUNTRY,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateCountryMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_COUNTRY,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n  deactivateCountryMaster = async (data: any) => {\n    try {\n      const body = {\n        countryId: data.id,\n        isActive: !data.isactive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_COUNTRY,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import moment from 'moment'\nimport { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class IndustryMasterService {\n  getProductionTypeMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PRODUCTION_TYPE_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createProductionTypeMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_PRODUCTION_TYPE_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateProductionTypeMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_PRODUCTION_TYPE_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateProductionTypeMaster = async (data: any) => {\n    try {\n      const body = {\n        productionTypeId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n        \n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_PRODUCTION_TYPE_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getIndustryMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_INDUSTRY_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createIndustryMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_INDUSTRY_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateIndustryMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_INDUSTRY_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateIndustryMaster = async (data: any) => {\n    try {\n      const body = {\n        industryMasterId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_INDUSTRY_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getIndustryGroupMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_INDUSTRY_GROUP_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createIndustryGroupMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_INDUSTRY_GROUP_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateIndustryGroupMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_INDUSTRY_GROUP_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateIndustryGroupMaster = async (data: any) => {\n    try {\n      const body = {\n        groupIndustryId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_INDUSTRY_GROUP_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getIndustryHeadMaster = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_INDUSTRY_HEAD_MASTER)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createIndustryHeadMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_INDUSTRY_HEAD_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateIndustryHeadMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_INDUSTRY_HEAD_MASTER,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  deactivateIndustryHeadMaster = async (data: any) => {\n    try {\n      const body = {\n        industryHeadId: data.id,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n        deactivationDate: data?.deactivationDate\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_INDUSTRY_HEAD_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n}\n","import moment from \"moment\";\nimport { APIURLS } from \"../../../constants/ApiUrls\";\nimport { AuthService } from \"../../auth-service/auth.service\";\nimport { HTTPService } from \"../../http-service/http-service\";\n\nexport class SalesMasterService {\n  getSalesMaster = async (countryId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_SALES_MASTER, {\n        countryId: countryId ? countryId : null,\n      });\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  createSalesMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_SALES_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateSalesMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_SALES_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateSalesMaster = async (data: any) => {\n    console.log(`asadsdasdas`,data)\n    try {\n      const body = {\n        salesManagerId: data.id,\n        industryHeadIds: data.industryHeadIds,\n        isActive: !data.isActive,\n        updatedBy: data?.loggedInUserId,\n        deactivationDate:data?.deactivationDate?moment(new Date(data?.deactivationDate)).format('YYYY-MM-DD'): null\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_SALES_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n}\n","import { APIURLS } from \"../../../constants/ApiUrls\";\nimport { AuthService } from \"../../auth-service/auth.service\";\nimport { HTTPService } from \"../../http-service/http-service\";\n\nexport class StateMasterService {\n  getStateMaster = async (countryId?: any) => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_STATE_MASTER, {\n        countryId: countryId ? countryId : null,\n      });\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n\n  createStateMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.CREATE_STATE_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  updateStateMaster = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_STATE_MASTER,\n        formData\n      );\n\n      return response?.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  deactivateStateMaster = async (data: any) => {\n    try {\n      const body = {\n        stateId: data.id,\n        isActive: !data.isactive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_STATE_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      return {};\n    }\n  };\n}\n","import { APIURLS } from '../../../constants/ApiUrls'\nimport { AuthService } from '../../auth-service/auth.service'\nimport { HTTPService } from '../../http-service/http-service'\n\nexport class TaxMasterService {\n  getTax = async () => {\n    try {\n      const response = await HTTPService.getRequest(APIURLS.GET_TAXES)\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  createTax = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id?APIURLS.UPDATE_TAXES:APIURLS.CREATE_TAXES,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  updateTax = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_TAXES,\n        formData\n      )\n\n      return response?.data\n    } catch (error) {\n      return error\n    }\n  }\n\n  activatedeactivateTax = async (data: any) => {\n    try {\n      const body = {\n        id: data.id,\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      }\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_TAX_STATUS,\n        body\n      )\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n\n  formatDate = async (dateString: any) => {\n    try {\n      const date = new Date(dateString);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}/${month}/${day}`;\n    } catch (error: any) {\n      return error.message;\n    }\n  }\n}\n","import { APIURLS } from '../../constants/ApiUrls';\nimport { HTTPService } from '../http-service/http-service';\n\nexport class PoContractService {\n  // Fetch all PO Contracts\n  getPoContractsData = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PO_CONTRACTS);\n      return response?.data;\n    } catch (err) {\n      console.error('Error fetching PO Contracts:', err);\n      return {};\n    }\n  };\n\n  // Create a new PO Contract\n  createPoContract = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        formData?.id?APIURLS.UPDATE_PO_CONTRACT:APIURLS.CREATE_PO_CONTRACT,\n        formData\n      );\n      return response?.data;\n    } catch (error) {\n      console.error('Error creating PO Contract:', error);\n      return error;\n    }\n  };\n\n  // Update an existing PO Contract\n  updatePoContract = async (formData: any) => {\n    try {\n      const response = await HTTPService.postRequest(\n        APIURLS.UPDATE_PO_CONTRACT,\n        formData\n      );\n      return response?.data;\n    } catch (error) {\n      console.error('Error updating PO Contract:', error);\n      return error;\n    }\n  };\n\n  // Activate/Deactivate a PO Contract\n  activateDeactivatePoContract = async (data: any) => {\n    try {\n      const body = {\n        id: data.id, // Assuming `id` represents the PO Contract ID\n        isActive: data.isActive,\n        updatedBy: data?.loggedInUserId,\n      };\n\n      const response = await HTTPService.postRequest(\n        APIURLS.TOGGLE_PO_CONTRACT_STATUS,\n        body\n      );\n      return response?.data;\n    } catch (err) {\n      console.error('Error activating/deactivating PO Contract:', err);\n      return {};\n    }\n  };\n  getPoContractConfiguration = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PO_CONTRACT_CONFIGURATION, {})\n      return response?.data\n    } catch (err) {\n      return {}\n    }\n  }\n  getPOContractMasterConfigData  = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PO_MASTER_CONFIG_DATA, {})\n      return response\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getPOContractMasterCascadingData  = async () => {\n    try {\n      const response = await HTTPService.postRequest(APIURLS.GET_PO_CONTRACT_CASCADING_DATA, {})\n      return response\n    } catch (err) {\n      return {}\n    }\n  }\n  \n  \n}\n"],"names":["CreditNoteService","constructor","getCreditNoteData","async","response","HTTPService","postRequest","APIURLS","GET_CREDIT_NOTE","data","err","console","error","createCreditNote","formData","id","UPDATE_CREDIT_NOTE","CREATE_CREDIT_NOTE","updateCreditNote","activateDeactivateCreditNote","body","isActive","updatedBy","loggedInUserId","TOGGLE_CREDIT_NOTE_STATUS","UpdatePDFCreditNote","POST_GENERATE_CREDIT_NOTE_PDF","invoice_number","invoiceNumber","CreditNoteMaster","clientFormFields","client_name","inputType","label","options","value","validation","required","fieldWidth","contract_name","po_number","disable","po_amount","remain_po_amount","invoice_date","min","clientBillTo","clientShipAddress","clientContact","company_name","bill_from","projectService","tax_type","tax_code","invoice_amount","note_one","rows","note_two","msaFormFields","start_date","end_date","countryMaster","setCountryMaster","useState","stateMaster","setStateMaster","loader","setLoader","clientFormPopup","setClientFormPopup","isEditClient","setIsEditClient","isFormValid","setIsFormValid","showConfirmDialogue","setShowConfirmDialogue","actionPopupToggle","setActionPopupToggle","cliendData","setCliendData","companyMaster","setCompanyMaster","industryHeadMaster","setIndustryHeadMaster","industryMaster","setIndustryMaster","attachments","setAttachments","digitalSign","setDigitalSign","logoUrl","setLogoUrl","signatureUrl","setSignatureUrl","showNDAAttacment","setShowNDAAttacment","showMSAAttacment","setShowMSAAttacment","industryGroupMaster","setIndustryGroupMaster","accountManagerMaster","setAccountManagerMaster","accountsMaster","setAccountsMaster","clientMaster","setClientMaster","salesMaster","setSalesMaster","showMsaUpdatePopup","setShowMsaUpdatePopup","poContractsData","setPoContractData","clientListNames","setClientListNames","poContractConfData","setPoContractConfData","taxMaster","setTaxMaster","companyLocationMaster","setCompanyLocationMaster","invoiceMasterData","setInvoiceMasterData","poMastersConfigData","setPoMastersConfigData","invoiceItems","setInvoiceItems","Date","now","description","sacCode","amount","selectedTaxes","setSelectedTaxes","selectedApplicableTaxes","setSelectedApplicableTaxes","selectedContractData","setSelectedContractData","invoiceNumberList","setInvoiceNumberList","clientFormFieldsStructure","setClientFormFieldsStructure","clientForm","setClientForm","_","msaFormFieldsStructure","setMsaFormFieldsStructure","msaForm","setMsaForm","companyService","CompanyMasterService","invoiceService","ClientMasterService","InvoiceService","creditNoteService","AccountMasterService","AccountsMasterService","userInfo","Cookies","get","userId","CountryMasterService","StateMasterService","IndustryMasterService","SalesMasterService","poContractService","PoContractService","taxService","TaxMasterService","clientMasterColumns","fieldName","textAlign","frozen","sort","filter","rowData","_jsxs","style","display","gap","marginLeft","children","_jsx","className","cursor","title","onClick","onUpdate","generatePDFHandler","placeholder","TooltipWrapper","concat","content","invoice_name","toLocaleDateString","clientBillTo_name","clientShipAddress_name","clientContact_name","projectService_names","total_amount","gst_total","final_amount","_ref","Tooltip","target","position","useEffect","getInvoiceData","getInvoiceNumberData","getContractMaster","getPoContractConfiguration","getTaxMaster","getCompanyLocationMaster","getPOContractMasterConfigData","fetchData","_clientForm$invoice_d","po_creation_date","log","startDate","isNaN","getTime","prevForm","_objectSpread","then","statusCode","HTTP_RESPONSE","CREATED","ToasterService","show","message","CONSTANTS","SUCCESS","fileUrl","process","fetch","res","blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","click","remove","catch","ERROR","getInvoicesData","invoices","forEach","item","invoiceInfo","JSON","parse","parsedData","map","invoice","info","taxBreakdown","getPoContractsData","poContracts","Error","Array","isArray","uniqueClients","from","Map","client_id","values","_response$data","getTax","closeFormPopup","locations","updateClientMaster","onPopUpClose","e","taxDetails","taxType","configData","find","_configData$clientBil","_configData$clientShi","_configData$contacts","clientBill","index","concatAddresses","address1","address2","address3","toString","isDefault","split","trim","clientShip","contacts","name","companyInfo","companyName","tempData","ele","isDefaultAddress","invoice_number_id","parseDateString","flatMap","dateString","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formatDate","addr","join","clientFormHandler","_form$client_name","_form$contract_name","_clientForm$contract_","_form$contract_name2","_form$tax_type","_form$tax_code","form","currentForm","selectedClient","po_name","undefined","_poContractsData$filt","selectedContract","_form$contract_name3","poNumber","poAmount","dueAmount","_configData$clientBil2","_configData$clientBil3","_form$clientBillTo$op","_configData$clientShi2","_form$clientShipAddre","_form$clientShipAddre2","_configData$contacts2","_form$clientContact","_form$clientContact$o","_selectedContract$mas","masterNames","clientBillTo_names","_selectedContract$mas2","defaultBillItem","_selectedContract$mas3","clientShipAddress_names","defaultShipItem","defaultContact","_tempData$find","_taxMaster$filter","taxCodeOptions","tax","_form$tax_type2","taxFieldName","_form$tax_code2","tempSelectedTaxes","filterTaxes","taxTypes","includes","getNamesFromOptions","field","_field$options$find","handleInputChange","updatedItems","totalAmount","reduce","sum","parseFloat","taxCalculations","taxPercentage","calculatedAmount","gstTotal","Loader","_Fragment","justifyContent","marginBottom","ButtonComponent","icon","iconPos","submitEvent","DataTableBasicDemo","column","showGridlines","resizableColumns","paginator","sortable","headerRequired","scrollHeight","downloadedfileName","ConfirmDialogue","onCloseFunction","padding","FormComponent","formUpdateEvent","isFormValidFlag","alignItems","margin","fontWeight","color","Button","addRow","backgroundColor","borderRadius","fontSize","border","DataTable","responsiveLayout","boxShadow","overflow","Column","header","_ref4","rowIndex","InputText","onChange","height","width","_ref5","_ref6","InputNumber","onValueChange","handleAmountChange","mode","outline","transition","inputStyle","marginTop","toFixed","_poContractConfData$f","_poContractsData$find","_companyLocationMaste","_companyLocationMaste2","_taxMaster$find$id","_taxMaster$find","_clientForm$tax_code","_clientForm$tax_code$","_clientForm$clientBil","_clientForm$clientShi","_clientForm$clientCon","_clientForm$invoice_n","_clientForm$projectSe","_clientForm$tax_code$2","_clientForm$clientCon2","event","preventDefault","companyValidityFlag","_item$validation2","invoiceData","finalAmount","invoiceAmount","clientId","contractId","invoiceBillFromId","el","taxTypeId","taxCodeId","_taxMaster$find$id2","_taxMaster$find2","com","FormData","clientAbbr","clientName","word","toUpperCase","financialYear","nextYear","slice","getFinancialYear","invoiceName","obj","contract_id","invoice_bill_from_id","tax_type_id","tax_code_id","stringify","updated_by","Object","entries","_ref2","key","set","updatePayload","_ref3","GET_INVOICES","createInvoice","UPDATE_INVOICE","CREATE_INVOICE","updateInvoice","activateDeactivateInvoice","TOGGLE_INVOICE_STATUS","UpdateInvoicePDF","POST_GENERATE_INVOICE_PDF","UpdateTaxInvoicePDF","POST_GENETARE_TAX_PDF","GetInvoiceDownloadPDF","getRequest","GET_GENERATE_INVOICE_PDF","getAccountMaster","GET_ACCOUNT_MANAGER_MASTER","countryId","createAccountMaster","CREATE_ACCOUNT_MANAGER_MASTER","updateAccountMaster","UPDATE_ACCOUNT_MANAGER_MASTER","deactivateAccountMaster","accountManagerId","industryHeadIds","deactivationDate","moment","format","TOGGLE_ACCOUNT_MANAGER_STATUS","getAccountsMaster","GET_ACCOUNTS_MASTER","createAccountsMaster","CREATE_ACCOUNTS_MASTER","updateAccountsMaster","UPDATE_ACCOUNTS_MASTER","deactivateAccountsMaster","accountId","TOGGLE_ACCOUNTS_STATUS","getCompanyMaster","GET_COMPANY_MASTER","createCompanyMaster","CREATE_COMPANY_MASTER","updateCompanyMaster","UPDATE_COMPANY_MASTER","deactivateCompanyMaster","companyId","isactive","TOGGLE_COMPANY_STATUS","GET_COMPANY_LOCATION_MASTER","createCompanyLocationMaster","CREATE_COMPANY_LOCATION_MASTER","updateCompanyLocationMaster","UPDATE_COMPANY_LOCATION_MASTER","deactivateCompanyLocationMaster","locationId","TOGGLE_COMPANY_LOCATION_STATUS","getCountryMaster","GET_COUNTRY_MASTER","createCountryMaster","CREATE_COUNTRY","updateCountryMaster","UPDATE_COUNTRY","deactivateCountryMaster","TOGGLE_COUNTRY","getProductionTypeMaster","GET_PRODUCTION_TYPE_MASTER","createProductionTypeMaster","CREATE_PRODUCTION_TYPE_MASTER","updateProductionTypeMaster","UPDATE_PRODUCTION_TYPE_MASTER","deactivateProductionTypeMaster","productionTypeId","TOGGLE_PRODUCTION_TYPE_STATUS","getIndustryMaster","GET_INDUSTRY_MASTER","createIndustryMaster","CREATE_INDUSTRY_MASTER","updateIndustryMaster","UPDATE_INDUSTRY_MASTER","deactivateIndustryMaster","industryMasterId","TOGGLE_INDUSTRY_STATUS","getIndustryGroupMaster","GET_INDUSTRY_GROUP_MASTER","createIndustryGroupMaster","CREATE_INDUSTRY_GROUP_MASTER","updateIndustryGroupMaster","UPDATE_INDUSTRY_GROUP_MASTER","deactivateIndustryGroupMaster","groupIndustryId","TOGGLE_INDUSTRY_GROUP_STATUS","getIndustryHeadMaster","GET_INDUSTRY_HEAD_MASTER","createIndustryHeadMaster","CREATE_INDUSTRY_HEAD_MASTER","updateIndustryHeadMaster","UPDATE_INDUSTRY_HEAD_MASTER","deactivateIndustryHeadMaster","industryHeadId","TOGGLE_INDUSTRY_HEAD_STATUS","getSalesMaster","GET_SALES_MASTER","createSalesMaster","CREATE_SALES_MASTER","updateSalesMaster","UPDATE_SALES_MASTER","deactivateSalesMaster","salesManagerId","TOGGLE_SALES_STATUS","getStateMaster","GET_STATE_MASTER","createStateMaster","CREATE_STATE_MASTER","updateStateMaster","UPDATE_STATE_MASTER","deactivateStateMaster","stateId","TOGGLE_STATE_STATUS","GET_TAXES","createTax","UPDATE_TAXES","CREATE_TAXES","updateTax","activatedeactivateTax","TOGGLE_TAX_STATUS","GET_PO_CONTRACTS","createPoContract","UPDATE_PO_CONTRACT","CREATE_PO_CONTRACT","updatePoContract","activateDeactivatePoContract","TOGGLE_PO_CONTRACT_STATUS","GET_PO_CONTRACT_CONFIGURATION","GET_PO_MASTER_CONFIG_DATA","getPOContractMasterCascadingData","GET_PO_CONTRACT_CASCADING_DATA"],"sourceRoot":""}